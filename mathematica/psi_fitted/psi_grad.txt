Real copt2 = straincpp(0);
Real copt1 = straincpp(2);
Real copt3 = copt1*copt2;
Real copt4 = Ccompr1 + copt3;
Real copt5 = Power(copt4,2);
Real copt6 = 1/copt5;
Real copt8 = -1 + copt2;
Real copt9 = Power(copt8,2);
Real copt10 = copt8*copt9;
Real copt11 = strainscale(0);
Real copt12 = Power(copt11,2);
Real copt13 = Power(copt12,2);
Real copt14 = 1/copt13;
Real copt16 = copt11*copt12;
Real copt17 = 1/copt16;
Real copt19 = 1/copt12;
Real copt21 = 1/copt11;
Real copt23 = straincpp(1);
Real copt24 = Power(copt23,2);
Real copt25 = copt23*copt24;
Real copt26 = strainscale(1);
Real copt27 = Power(copt26,2);
Real copt28 = copt26*copt27;
Real copt29 = 1/copt28;
Real copt31 = 1/copt27;
Real copt34 = 1/copt26;
Real copt38 = -1 + copt1;
Real copt39 = Power(copt38,2);
Real copt40 = copt38*copt39;
Real copt41 = strainscale(2);
Real copt42 = Power(copt41,2);
Real copt43 = copt41*copt42;
Real copt44 = 1/copt43;
Real copt46 = 1/copt42;
Real copt49 = 1/copt41;
Real copt53 = straincpp(3);
Real copt54 = Power(copt53,2);
Real copt55 = copt53*copt54;
Real copt56 = strainscale(3);
Real copt57 = Power(copt56,2);
Real copt58 = copt56*copt57;
Real copt59 = 1/copt58;
Real copt61 = 1/copt57;
Real copt64 = 1/copt56;
Real copt68 = straincpp(4);
Real copt69 = Power(copt68,2);
Real copt70 = copt68*copt69;
Real copt71 = strainscale(4);
Real copt72 = Power(copt71,2);
Real copt73 = copt71*copt72;
Real copt74 = 1/copt73;
Real copt76 = 1/copt72;
Real copt79 = 1/copt71;
Real copt83 = straincpp(5);
Real copt84 = Power(copt83,2);
Real copt85 = copt83*copt84;
Real copt86 = strainscale(5);
Real copt87 = Power(copt86,2);
Real copt88 = copt86*copt87;
Real copt89 = 1/copt88;
Real copt91 = 1/copt87;
Real copt94 = 1/copt86;
Real copt99 = Power(copt27,2);
Real copt100 = 1/copt99;
Real copt138 = Power(copt42,2);
Real copt139 = 1/copt138;
Real copt175 = Power(copt57,2);
Real copt176 = 1/copt175;
Real copt213 = Power(copt72,2);
Real copt214 = 1/copt213;
Real copt251 = Power(copt87,2);
Real copt252 = 1/copt251;
out(0) = 4*C04*copt10*copt14 + C01*copt21 + C0113*copt21*copt25*copt29 + C0112*copt21*copt24*copt31 + C0111*copt21*copt23*copt34 + C0213*copt21*copt40*copt44 + C0212*copt21*copt39*copt46 + C0211*copt21*copt38*copt49 + C0313*copt21*copt55*copt59 - Ccompr0*copt1*copt6 + C0312*copt21*copt54*copt61 + C0311*copt21*copt53*copt64 + C0413*copt21*copt70*copt74 + C0412*copt21*copt69*copt76 + C0411*copt21*copt68*copt79 + 2*C02*copt19*copt8 + 2*C0122*copt19*copt24*copt31*copt8 + 2*C0121*copt19*copt23*copt34*copt8 + 2*C0222*copt19*copt39*copt46*copt8 + 2*C0221*copt19*copt38*copt49*copt8 + 2*C0322*copt19*copt54*copt61*copt8 + 2*C0321*copt19*copt53*copt64*copt8 + 2*C0422*copt19*copt69*copt76*copt8 + 2*C0421*copt19*copt68*copt79*copt8 + C0513*copt21*copt85*copt89 + 3*C03*copt17*copt9 + 3*C0131*copt17*copt23*copt34*copt9 + 3*C0231*copt17*copt38*copt49*copt9 + 3*C0331*copt17*copt53*copt64*copt9 + 3*C0431*copt17*copt68*copt79*copt9 + C0512*copt21*copt84*copt91 + 2*C0522*copt19*copt8*copt84*copt91 + C0511*copt21*copt83*copt94 + 2*C0521*copt19*copt8*copt83*copt94 + 3*C0531*copt17*copt83*copt9*copt94;
out(1) = copt100*(4*C14*copt25 + 3*C13*copt24*copt26 + 2*C12*copt23*copt27 + C11*copt28 + C0131*copt10*copt17*copt28 + C1213*copt28*copt40*copt44 + 2*C1222*copt23*copt27*copt39*copt46 + C1212*copt28*copt39*copt46 + 3*C1231*copt24*copt26*copt38*copt49 + 2*C1221*copt23*copt27*copt38*copt49 + C1211*copt28*copt38*copt49 + C1313*copt28*copt55*copt59 + 2*C1322*copt23*copt27*copt54*copt61 + C1312*copt28*copt54*copt61 + 3*C1331*copt24*copt26*copt53*copt64 + 2*C1321*copt23*copt27*copt53*copt64 + C1311*copt28*copt53*copt64 + C1413*copt28*copt70*copt74 + 2*C1422*copt23*copt27*copt69*copt76 + C1412*copt28*copt69*copt76 + 3*C1431*copt24*copt26*copt68*copt79 + 2*C1421*copt23*copt27*copt68*copt79 + C1411*copt28*copt68*copt79 + 3*C0113*copt21*copt24*copt26*copt8 + 2*C0112*copt21*copt23*copt27*copt8 + C0111*copt21*copt28*copt8 + C1513*copt28*copt85*copt89 + 2*C0122*copt19*copt23*copt27*copt9 + C0121*copt19*copt28*copt9 + 2*C1522*copt23*copt27*copt84*copt91 + C1512*copt28*copt84*copt91 + 3*C1531*copt24*copt26*copt83*copt94 + 2*C1521*copt23*copt27*copt83*copt94 + C1511*copt28*copt83*copt94);
out(2) = 4*C24*copt139*copt40 + 3*C23*copt39*copt44 + 3*C1213*copt23*copt34*copt39*copt44 + 2*C22*copt38*copt46 + 2*C1222*copt24*copt31*copt38*copt46 + 2*C1212*copt23*copt34*copt38*copt46 + C21*copt49 + C0231*copt10*copt17*copt49 + C1231*copt25*copt29*copt49 + C1221*copt24*copt31*copt49 + C1211*copt23*copt34*copt49 + C2313*copt49*copt55*copt59 - Ccompr0*copt2*copt6 + 2*C2322*copt38*copt46*copt54*copt61 + C2312*copt49*copt54*copt61 + 3*C2331*copt39*copt44*copt53*copt64 + 2*C2321*copt38*copt46*copt53*copt64 + C2311*copt49*copt53*copt64 + C2413*copt49*copt70*copt74 + 2*C2422*copt38*copt46*copt69*copt76 + C2412*copt49*copt69*copt76 + 3*C2431*copt39*copt44*copt68*copt79 + 2*C2421*copt38*copt46*copt68*copt79 + C2411*copt49*copt68*copt79 + 3*C0213*copt21*copt39*copt44*copt8 + 2*C0212*copt21*copt38*copt46*copt8 + C0211*copt21*copt49*copt8 + C2513*copt49*copt85*copt89 + 2*C0222*copt19*copt38*copt46*copt9 + C0221*copt19*copt49*copt9 + 2*C2522*copt38*copt46*copt84*copt91 + C2512*copt49*copt84*copt91 + 3*C2531*copt39*copt44*copt83*copt94 + 2*C2521*copt38*copt46*copt83*copt94 + C2511*copt49*copt83*copt94;
out(3) = copt176*(4*C34*copt55 + 3*C33*copt54*copt56 + 3*C1313*copt23*copt34*copt54*copt56 + 3*C2313*copt38*copt49*copt54*copt56 + 2*C32*copt53*copt57 + 2*C1322*copt24*copt31*copt53*copt57 + 2*C1312*copt23*copt34*copt53*copt57 + 2*C2322*copt39*copt46*copt53*copt57 + 2*C2312*copt38*copt49*copt53*copt57 + C31*copt58 + C0331*copt10*copt17*copt58 + C1331*copt25*copt29*copt58 + C1321*copt24*copt31*copt58 + C1311*copt23*copt34*copt58 + C2331*copt40*copt44*copt58 + C2321*copt39*copt46*copt58 + C2311*copt38*copt49*copt58 + C3413*copt58*copt70*copt74 + 2*C3422*copt53*copt57*copt69*copt76 + C3412*copt58*copt69*copt76 + 3*C3431*copt54*copt56*copt68*copt79 + 2*C3421*copt53*copt57*copt68*copt79 + C3411*copt58*copt68*copt79 + 3*C0313*copt21*copt54*copt56*copt8 + 2*C0312*copt21*copt53*copt57*copt8 + C0311*copt21*copt58*copt8 + C3513*copt58*copt85*copt89 + 2*C0322*copt19*copt53*copt57*copt9 + C0321*copt19*copt58*copt9 + 2*C3522*copt53*copt57*copt84*copt91 + C3512*copt58*copt84*copt91 + 3*C3531*copt54*copt56*copt83*copt94 + 2*C3521*copt53*copt57*copt83*copt94 + C3511*copt58*copt83*copt94);
out(4) = copt214*(4*C44*copt70 + 3*C43*copt69*copt71 + 3*C1413*copt23*copt34*copt69*copt71 + 3*C2413*copt38*copt49*copt69*copt71 + 3*C3413*copt53*copt64*copt69*copt71 + 2*C42*copt68*copt72 + 2*C1422*copt24*copt31*copt68*copt72 + 2*C1412*copt23*copt34*copt68*copt72 + 2*C2422*copt39*copt46*copt68*copt72 + 2*C2412*copt38*copt49*copt68*copt72 + 2*C3422*copt54*copt61*copt68*copt72 + 2*C3412*copt53*copt64*copt68*copt72 + C41*copt73 + C0431*copt10*copt17*copt73 + C1431*copt25*copt29*copt73 + C1421*copt24*copt31*copt73 + C1411*copt23*copt34*copt73 + C2431*copt40*copt44*copt73 + C2421*copt39*copt46*copt73 + C2411*copt38*copt49*copt73 + C3431*copt55*copt59*copt73 + C3421*copt54*copt61*copt73 + C3411*copt53*copt64*copt73 + 3*C0413*copt21*copt69*copt71*copt8 + 2*C0412*copt21*copt68*copt72*copt8 + C0411*copt21*copt73*copt8 + C4513*copt73*copt85*copt89 + 2*C0422*copt19*copt68*copt72*copt9 + C0421*copt19*copt73*copt9 + 2*C4522*copt68*copt72*copt84*copt91 + C4512*copt73*copt84*copt91 + 3*C4531*copt69*copt71*copt83*copt94 + 2*C4521*copt68*copt72*copt83*copt94 + C4511*copt73*copt83*copt94);
out(5) = copt252*(4*C54*copt85 + 3*C53*copt84*copt86 + 3*C1513*copt23*copt34*copt84*copt86 + 3*C2513*copt38*copt49*copt84*copt86 + 3*C3513*copt53*copt64*copt84*copt86 + 3*C4513*copt68*copt79*copt84*copt86 + 3*C0513*copt21*copt8*copt84*copt86 + 2*C52*copt83*copt87 + 2*C1522*copt24*copt31*copt83*copt87 + 2*C1512*copt23*copt34*copt83*copt87 + 2*C2522*copt39*copt46*copt83*copt87 + 2*C2512*copt38*copt49*copt83*copt87 + 2*C3522*copt54*copt61*copt83*copt87 + 2*C3512*copt53*copt64*copt83*copt87 + 2*C4522*copt69*copt76*copt83*copt87 + 2*C4512*copt68*copt79*copt83*copt87 + 2*C0512*copt21*copt8*copt83*copt87 + C51*copt88 + C0531*copt10*copt17*copt88 + C1531*copt25*copt29*copt88 + C1521*copt24*copt31*copt88 + C1511*copt23*copt34*copt88 + C2531*copt40*copt44*copt88 + C2521*copt39*copt46*copt88 + C2511*copt38*copt49*copt88 + C3531*copt55*copt59*copt88 + C3521*copt54*copt61*copt88 + C3511*copt53*copt64*copt88 + C4531*copt70*copt74*copt88 + C4521*copt69*copt76*copt88 + C4511*copt68*copt79*copt88 + C0511*copt21*copt8*copt88 + 2*C0522*copt19*copt83*copt87*copt9 + C0521*copt19*copt88*copt9);
