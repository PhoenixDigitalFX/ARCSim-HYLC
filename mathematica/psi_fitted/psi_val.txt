Real copt1 = straincpp(0);
Real copt2 = straincpp(2);
Real copt3 = copt1*copt2;
Real copt4 = Ccompr1 + copt3;
Real copt5 = 1/copt4;
Real copt7 = -1 + copt1;
Real copt8 = Power(copt7,2);
Real copt9 = Power(copt8,2);
Real copt10 = strainscale(0);
Real copt11 = Power(copt10,2);
Real copt12 = Power(copt11,2);
Real copt13 = 1/copt12;
Real copt15 = copt7*copt8;
Real copt16 = copt10*copt11;
Real copt17 = 1/copt16;
Real copt19 = 1/copt11;
Real copt21 = 1/copt10;
Real copt23 = straincpp(1);
Real copt24 = Power(copt23,2);
Real copt25 = Power(copt24,2);
Real copt26 = strainscale(1);
Real copt27 = Power(copt26,2);
Real copt28 = Power(copt27,2);
Real copt29 = 1/copt28;
Real copt31 = copt23*copt24;
Real copt32 = copt26*copt27;
Real copt33 = 1/copt32;
Real copt36 = 1/copt27;
Real copt40 = 1/copt26;
Real copt45 = -1 + copt2;
Real copt46 = Power(copt45,2);
Real copt47 = Power(copt46,2);
Real copt48 = strainscale(2);
Real copt49 = Power(copt48,2);
Real copt50 = Power(copt49,2);
Real copt51 = 1/copt50;
Real copt53 = copt45*copt46;
Real copt54 = copt48*copt49;
Real copt55 = 1/copt54;
Real copt59 = 1/copt49;
Real copt65 = 1/copt48;
Real copt73 = straincpp(3);
Real copt74 = Power(copt73,2);
Real copt75 = Power(copt74,2);
Real copt76 = strainscale(3);
Real copt77 = Power(copt76,2);
Real copt78 = Power(copt77,2);
Real copt79 = 1/copt78;
Real copt81 = copt73*copt74;
Real copt82 = copt76*copt77;
Real copt83 = 1/copt82;
Real copt88 = 1/copt77;
Real copt96 = 1/copt76;
Real copt107 = straincpp(4);
Real copt108 = Power(copt107,2);
Real copt109 = Power(copt108,2);
Real copt110 = strainscale(4);
Real copt111 = Power(copt110,2);
Real copt112 = Power(copt111,2);
Real copt113 = 1/copt112;
Real copt115 = copt107*copt108;
Real copt116 = copt110*copt111;
Real copt117 = 1/copt116;
Real copt123 = 1/copt111;
Real copt133 = 1/copt110;
Real copt147 = straincpp(5);
Real copt148 = Power(copt147,2);
Real copt149 = Power(copt148,2);
Real copt150 = strainscale(5);
Real copt151 = Power(copt150,2);
Real copt152 = Power(copt151,2);
Real copt153 = 1/copt152;
Real copt155 = copt147*copt148;
Real copt156 = copt150*copt151;
Real copt157 = 1/copt156;
Real copt164 = 1/copt151;
Real copt176 = 1/copt150;
out(0) = C0 + C44*copt109*copt113 + C43*copt115*copt117 + C42*copt108*copt123 + C41*copt107*copt133 + C54*copt149*copt153 + C53*copt155*copt157 + C4513*copt107*copt133*copt155*copt157 + C52*copt148*copt164 + C4522*copt108*copt123*copt148*copt164 + C4512*copt107*copt133*copt148*copt164 + C03*copt15*copt17 + C0431*copt107*copt133*copt15*copt17 + C51*copt147*copt176 + C4531*copt115*copt117*copt147*copt176 + C4521*copt108*copt123*copt147*copt176 + C4511*copt107*copt133*copt147*copt176 + C0531*copt147*copt15*copt17*copt176 + C14*copt25*copt29 + C13*copt31*copt33 + C1431*copt107*copt133*copt31*copt33 + C1531*copt147*copt176*copt31*copt33 + C12*copt24*copt36 + C1422*copt108*copt123*copt24*copt36 + C1421*copt107*copt133*copt24*copt36 + C1522*copt148*copt164*copt24*copt36 + C1521*copt147*copt176*copt24*copt36 + C11*copt23*copt40 + C1413*copt115*copt117*copt23*copt40 + C1412*copt108*copt123*copt23*copt40 + C1411*copt107*copt133*copt23*copt40 + C1513*copt155*copt157*copt23*copt40 + C1512*copt148*copt164*copt23*copt40 + C0131*copt15*copt17*copt23*copt40 + C1511*copt147*copt176*copt23*copt40 + Ccompr0*copt5 + C24*copt47*copt51 + C23*copt53*copt55 + C2431*copt107*copt133*copt53*copt55 + C2531*copt147*copt176*copt53*copt55 + C1213*copt23*copt40*copt53*copt55 + C22*copt46*copt59 + C2422*copt108*copt123*copt46*copt59 + C2421*copt107*copt133*copt46*copt59 + C2522*copt148*copt164*copt46*copt59 + C2521*copt147*copt176*copt46*copt59 + C1222*copt24*copt36*copt46*copt59 + C1212*copt23*copt40*copt46*copt59 + C21*copt45*copt65 + C2413*copt115*copt117*copt45*copt65 + C2412*copt108*copt123*copt45*copt65 + C2411*copt107*copt133*copt45*copt65 + C2513*copt155*copt157*copt45*copt65 + C2512*copt148*copt164*copt45*copt65 + C0231*copt15*copt17*copt45*copt65 + C2511*copt147*copt176*copt45*copt65 + C1231*copt31*copt33*copt45*copt65 + C1221*copt24*copt36*copt45*copt65 + C1211*copt23*copt40*copt45*copt65 + C01*copt21*copt7 + C0413*copt115*copt117*copt21*copt7 + C0412*copt108*copt123*copt21*copt7 + C0411*copt107*copt133*copt21*copt7 + C0513*copt155*copt157*copt21*copt7 + C0512*copt148*copt164*copt21*copt7 + C0511*copt147*copt176*copt21*copt7 + C0113*copt21*copt31*copt33*copt7 + C0112*copt21*copt24*copt36*copt7 + C0111*copt21*copt23*copt40*copt7 + C0213*copt21*copt53*copt55*copt7 + C0212*copt21*copt46*copt59*copt7 + C0211*copt21*copt45*copt65*copt7 + C34*copt75*copt79 + C02*copt19*copt8 + C0422*copt108*copt123*copt19*copt8 + C0421*copt107*copt133*copt19*copt8 + C0522*copt148*copt164*copt19*copt8 + C0521*copt147*copt176*copt19*copt8 + C0122*copt19*copt24*copt36*copt8 + C0121*copt19*copt23*copt40*copt8 + C0222*copt19*copt46*copt59*copt8 + C0221*copt19*copt45*copt65*copt8 + C33*copt81*copt83 + C3431*copt107*copt133*copt81*copt83 + C3531*copt147*copt176*copt81*copt83 + C1313*copt23*copt40*copt81*copt83 + C2313*copt45*copt65*copt81*copt83 + C0313*copt21*copt7*copt81*copt83 + C32*copt74*copt88 + C3422*copt108*copt123*copt74*copt88 + C3421*copt107*copt133*copt74*copt88 + C3522*copt148*copt164*copt74*copt88 + C3521*copt147*copt176*copt74*copt88 + C1322*copt24*copt36*copt74*copt88 + C1312*copt23*copt40*copt74*copt88 + C2322*copt46*copt59*copt74*copt88 + C2312*copt45*copt65*copt74*copt88 + C0312*copt21*copt7*copt74*copt88 + C0322*copt19*copt74*copt8*copt88 + C04*copt13*copt9 + C31*copt73*copt96 + C3413*copt115*copt117*copt73*copt96 + C3412*copt108*copt123*copt73*copt96 + C3411*copt107*copt133*copt73*copt96 + C3513*copt155*copt157*copt73*copt96 + C3512*copt148*copt164*copt73*copt96 + C0331*copt15*copt17*copt73*copt96 + C3511*copt147*copt176*copt73*copt96 + C1331*copt31*copt33*copt73*copt96 + C1321*copt24*copt36*copt73*copt96 + C1311*copt23*copt40*copt73*copt96 + C2331*copt53*copt55*copt73*copt96 + C2321*copt46*copt59*copt73*copt96 + C2311*copt45*copt65*copt73*copt96 + C0311*copt21*copt7*copt73*copt96 + C0321*copt19*copt73*copt8*copt96;
