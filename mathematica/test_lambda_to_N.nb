(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    280337,       5726]
NotebookOptionsPosition[    278465,       5692]
NotebookOutlinePosition[    278808,       5707]
CellTagsIndexPosition[    278765,       5704]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.777347742884466*^9, 3.777347744556012*^9}, {
   3.777362942060321*^9, 3.7773629424210453`*^9}, {3.7773775575471087`*^9, 
   3.777377570140028*^9}, {3.777397726043507*^9, 3.7773977307200136`*^9}, 
   3.777398574564353*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"bff7917f-2396-4bc2-8ea3-049129c17f4b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MakeCyl", "[", 
    RowBox[{"sx_", ",", "sa_", ",", "sy_", ",", "H_", ",", "\[Theta]_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Cyl", ",", "S", ",", "Suv", ",", "k"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k", " ", "=", " ", 
       RowBox[{"-", "H"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"sx", 
           RowBox[{"sa", " ", "sx"}]},
          {"0", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
          {"0", "0"}
         }], "\[NoBreak]", ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", " ", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"H", "0"},
             {"0", "0"}
            }], "\[NoBreak]", ")"}], " ", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], "]"}]}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Suv", " ", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ".", 
        " ", "S", ".", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Cyl", " ", "=", " ", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"1", "/", "k"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"Suv", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}]}]},
             {
              RowBox[{"Suv", "[", 
               RowBox[{"[", "2", "]"}], "]"}]},
             {
              RowBox[{
               RowBox[{"1", "/", "k"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"Suv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}], "-", 
                 "1"}], ")"}]}]}
            }], "\[NoBreak]", ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Cyl", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
             RowBox[{"Suv", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", 
             RowBox[{"Sinc", "[", 
              RowBox[{
               RowBox[{"Suv", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}]}]},
           {
            RowBox[{"Suv", "[", 
             RowBox[{"[", "2", "]"}], "]"}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Suv", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"Suv", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "2"], "]"}], " ", 
             RowBox[{"Sinc", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"Suv", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "2"], "]"}]}]}
          }], "\[NoBreak]", ")"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"singularity", " ", "safe"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "@", "Cyl"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Angle", "[", 
    RowBox[{"u_", ",", "v_", ",", " ", "n_"}], "]"}], ":=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"u", ".", "v"}], ",", 
     RowBox[{"n", ".", " ", 
      RowBox[{"Cross", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", " ", "that", " ", "mathematica", " ", "arctan", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "vs", " ", "cpp", " ", "atan2", 
     RowBox[{"(", 
      RowBox[{"y", ",", "x"}], ")"}]}], ",", " ", 
    RowBox[{"assume", " ", "normalized", " ", "u", " ", "v", " ", "n"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x_", "\[CircleTimes]", "y_"}], ":=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", "x", ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaTri", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}], ",", 
     RowBox[{"dx_:", 
      RowBox[{"1", "/", "1000"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "P", ",", "p", ",", " ", "s", ",", "A", ",", "X0", 
       ",", "X1", ",", "x0", ",", "x1", ",", "xn", ",", "Ti", ",", "Ei", ",", 
       "n0", ",", "ni", ",", "ei", ",", "\[Theta]i", ",", 
       "\[CapitalLambda]"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{"Cos", "[", "0", "]"}], 
            RowBox[{"Sin", "[", "0", "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox["Pi", "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox["Pi", "3"], "]"}]}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", "Pi"}], "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", "Pi"}], "3"], "]"}]}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", "Pi"}], "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", "Pi"}], "3"], "]"}]}]}
          }], "\[NoBreak]", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], "4"], 
        SuperscriptBox["s", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "TODO", " ", "CONTINUE", " ", "ACTUALLY", " ", "COMPUTE", " ", 
            "THE", " ", "TRIANGLE", " ", "NORMALS", " ", "FROM", " ", "THE", 
            " ", 
            RowBox[{"POINTS", ".", " ", "1."}], " ", "eval", " ", 
            "worldspace", " ", "point", " ", "list"}], ",", " ", 
           RowBox[{
           "then", " ", "do", " ", "exactly", " ", "discrete", " ", "Lambda", 
            "\[IndentingNewLine]", "can", " ", "still", " ", "iterate", " ", 
            "through", " ", "edges", " ", "like", " ", "this"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"p", " ", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", " ", "@@", " ", 
             RowBox[{"P", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"get", " ", "world", " ", "space", " ", "points"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"n0", " ", "=", " ", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Cross]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "-", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"compute", " ", "world", " ", "space", " ", "normal"}], " ",
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "3"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "3"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"x0", " ", "=", 
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x1", " ", "=", 
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "3"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"xn", " ", "=", " ", 
             RowBox[{"p", "[", 
              RowBox[{"[", 
               RowBox[{"4", "+", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Ei", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"-", 
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"xn", "-", "x0"}], ")"}], "\[Cross]", 
               RowBox[{"(", 
                RowBox[{"x1", "-", "x0"}], ")"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", 
             RowBox[{"x1", "-", "x0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7773985751581707`*^9, 3.7773985766686974`*^9}, {
  3.777398700022371*^9, 3.7773987002323213`*^9}, {3.7773988013720007`*^9, 
  3.777398856900283*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"26d244b1-cb62-4bbd-9ec8-450d951a784c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], "=", 
   RowBox[{"MakeCyl", "[", 
    RowBox[{"1.3", ",", 
     RowBox[{"-", "0.5"}], ",", "1", ",", "5", ",", 
     RowBox[{"Pi", "/", "8"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0", " ", "=", " ", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
     RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"u", ",", "v"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"u", ",", "v"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n0", " ", "=", " ", 
   RowBox[{"n", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"n0", " ", "=", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"n", "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"duv", " ", "=", " ", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dN0", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"duv", ",", "v"}], "]"}], "-", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"-", "duv"}], ",", "v"}], "]"}]}], ",", 
         RowBox[{"v", "\[Rule]", " ", "0"}]}], "]"}], 
       RowBox[{"2", "duv"}]], ",", 
      FractionBox[
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "duv"}], "]"}], "-", 
          RowBox[{"n", "[", 
           RowBox[{"u", ",", 
            RowBox[{"-", "duv"}]}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], 
       RowBox[{"2", "duv"}]]}], "}"}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "could", " ", "also", " ", "speed", " ", "up", " ", "by", " ", "doing", 
    " ", "eps", " ", "instead", " ", "of", " ", "limit"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dN0", " ", "=", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{"n", "[", 
            RowBox[{"u", ",", "v"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
         RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";", "  ", "SLOW"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"II0", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"Transpose", "[", "dN0", "]"}], ".", "F0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", " ", "=", 
   RowBox[{
    RowBox[{"ApproxLambdaTri", "[", 
     RowBox[{"x", ",", "n", ",", "4", ",", 
      RowBox[{"1", "/", "1000"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"1", "/", "1000"}]}], ",", " ", 
      RowBox[{"v", "\[Rule]", " ", 
       RowBox[{"1", "/", "1000"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotL", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{
      RowBox[{"-", "plotL"}], "/", "2"}], ",", 
     RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{
      RowBox[{"-", "plotL"}], "/", "2"}], ",", 
     RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "plotL"}], " ", 
       RowBox[{"2", "/", "3"}]}], ",", 
      RowBox[{"plotL", " ", 
       RowBox[{"2", "/", "3"}]}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<II: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"II0", "//", " ", "MatrixForm"}], ",", "4"}], "]"}], ",", " ", 
   "\"\<    \[CapitalLambda]tri: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<n,u n,v: \>\"", ",", 
    RowBox[{
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"dN0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], "//", " ",
      "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"II0", "*", "35"}], " ", "//", " ", "MatrixForm"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Inverse", "[", 
           RowBox[{"F0", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", "2"}], ",", 
              RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"II0", "*", "35"}], ")"}], ".", 
         RowBox[{"Inverse", "[", 
          RowBox[{"F0", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "2"}], ",", 
             RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], " ", "//", 
        "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"ES", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Inverse", "[", 
          RowBox[{"F0", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "2"}], ",", 
             RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"II0", "*", "35"}], ")"}], ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{"F0", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "2"}], ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}]}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ES", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}], ",", " ", 
      RowBox[{
       RowBox[{"180", "/", "Pi"}], " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"ES", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"ES", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
     "]"}]}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7773985844482036`*^9, 3.777398605753406*^9}, {
  3.7773986612647514`*^9, 3.777398662288441*^9}, {3.7773987106080074`*^9, 
  3.7773987619615927`*^9}, {3.7773988738828583`*^9, 3.7773988797019944`*^9}, {
  3.777398969952022*^9, 3.7773990137250986`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"21abb9e5-e47c-417b-86f3-391b891a4603"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.004304964029979523`"}], ",", 
   RowBox[{"-", "0.0017831744867458528`"}], ",", "0.9999891437277958`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7773987629272795`*^9, {3.777398813230212*^9, 3.7773988801638355`*^9}, {
   3.777398959882338*^9, 3.777399014159956*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"1cac9076-1180-4927-a5a7-cb3d636e7f85"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0/XlUje//xY9nnqfMIZlCmYUQO1PmmcyZEgohMhSFJpkaVGZFhTTP87N5
Hk51qnMqVKYMyRCS8Ov7ez2vz2+t93f9/GOte7Xuc5/rel57P/Zeug3ZZbxm
T0sFBYUHHRUUWjX/rZH910w26y5N+TFV+rSsiD7vd6xrvF0M07cfBo229qV+
dZ8qenYoJVepfEztVwncFbe2GKDhQ97RskmXdsjJs9/7u2WK6dhxvuf7Tqsv
0ctNJ0+9Ky6jesNq956GUdhn6N7kvfkpOnf7Gv/HppyOzNhw8G/oA0i/q/U7
V5YIrZAehSPDyil1y54nI/4aIXLjAIsFj3PRpy71nUVUOb0yH+7bZ+ZJ1H+z
PHFjqhSqGfc6BdeXU/S08S9HrfKGonR631nzZDBZc/bXqbgK2rN6xM3yLrHo
PKb21y2DMhxuZzbo46rn5KGiqXzfKQP3Plxb8HJPGXyN208K3l1J1vYe8397
F8B+35Qgl/0yLLmjPbZr+2oyy5YMdhlWAr3u8QpqP6RYUqfipdT4kmY5X/v2
75MM0pPRzt2kElQ7Rvqs6/6Gsua8t79tK8d5q1tPI0sykaplNO2pUg0tvSzV
SSwoRWGX8ZtUYr0pZGtTo456HkldDcaGHi/Bh63KR759CKHE18+fXz9USIb7
rwyx6FsITdfA0Na+oaS+wi7Ys0FKKbfsnHxsM5GxoPZ+Y8gTmt9ze5LF/RKa
2nfgsbHpcbDcoLv4Y1sbtHbY6/PnRCnNfDIqY33iYyhetHeZ9DUC28yD+m6O
LaX02UP7LelriVMBPfS0ktKh3vmB76PEUpr3o8+egNKdyFjSb3v9sQKcX/z+
256aUjooV/8x5po7gjtOXBT5rBiX2+/Z1uaSjDydyzcvSI/AqsQUrXknZEiI
bq9jVSun55EfY48MTsOoz70qtn6RQa1KUWXQxAq6/med4oKzEkSZ1HSYr1eK
MdMdx8xZ8YK2fkucdn5OMdb26Xdvx3gpytuFW/22r6K1lvUPbMxl+KoeMyxC
RYIJU4rTx919SQVK+++fuimHdPjWCwFjM9DGb+pAff/X9C3IuDFKX4ZXxQn5
T3T8aeNSS822Tin0UfHh9FuapSgznhJ/eXwUnXP7XdXXOZvu3FrX12F8ESi5
OHBqXgy9ur58srq1hEqHab31bMqGru3ogHWvwujvhm5lTnqFlF4+OPSoeiI0
4t7NfmN/nzTtwvKP7Cyiht199g23DsCOCZq7JHceY4mSYVvdhCIa1uTVs0Jy
GR9Murr9KkrEWYmj7YXsIho0UU1rgMlEJJudUR+1KBdrrJdv319dRBt+Xe/Y
eZIbPmusdr21owiDQ4sbdHdJafGFqYanE0PQd2nWca0DJWhewUZnl2I6660S
bBaajLNKLzb13lWKBacmyN97lZJt6CjfJzfz0O6o9tSGWSVISXmq38eljFpl
D9x0bKkUGYNT/k3YVoQBL1SvHtF6TuM7+0w5/KkUX7ear5lRnoesoH3ff4+u
ojbbgxb3vyJH7KR5bXXvpKFssHrfJ3hJehH3c5dXyGB7TF0l5FEwbVm08Ofj
kjBqMVL7amV1KRKOTHu+UDGeOiTrj/yhkUQ1LdctsdeU4kUs/l3TTqSCUrUp
GzpnUJ5j7t7fRnlQ8uwZNtQ6nqTfb+0/PCKHJAH3VWfYJiNhl9YrrynBZFrT
XaGvdR6tjFFXnnYyBJZtA9ZcPGWI602bzw60zCfFcLdOfW1d4VK+8PGT1Ajc
/1Nm8vlpfvN6Vs7xrx+NW0q/+zldTseBod2aLifnk8RbRy3s9RX8tdGwM86V
wCUl40fWXAn1Ve3QvalNIDznf3JtrSPF/ZGW3d8uKiBJ/nsbkw2JCP68eolB
RDHabh16XlG1iHz/PL3aoJaD4Y9aW7VpV4xLJhNclr8uph62Fe8C5xVh0fX4
6ilnCjGn37tnD/bJySVVb19nnVL0W21WMeJwLrbWFcquH3pGNuvHZbjtkmP+
pbsxoYNSofLRsfBPXiWZWPbV2DVNDq2PLf9Nqg+joxrrBnR0vEA3MidI64/K
sL/ztKsNyxLJ3c/6Y51tEF1a+P3u7/HFmH16RZehu1PolcXUoZp1cfRmieTm
j70SDN15pNZvazKNy5g6efaJZOr7ovO+zV9SkVX/eGTZhFgyt/3pNHhKGo11
OBBTfDIC44YbLwl+60mjJnWo/XssnVSyI6dqqrnDfesTrWDJI3RYkT+5+VTQ
TxX9XxHqO/DTMtCkbWwidIwzI75npZPWv/nKVjWWiLC9Z1G7NAeBbUm+ckMG
3bFa2Elz5hPc6bm/cFObQlgtPXR2W9csshiqHfZsQDzs/qT9eve5CN3uHzM1
351LWx+3UZ0anonb9d3S6yOKcKi8Zvh5FFCj5pJRj8YUInG7/R21KwUoUaEz
ZrelZG7/Y9A7qxKoup/+97wxG70+ue9b0axXW455229SkmNl8rK6R77JODre
Uak4qoKOPcn7Ofi4HLdGZAbuUIyi1TcC5ri2CUJMTvdb59/KsEhpYKOLQTId
/rpLYYPkBC5fXa9/u2cJ+mZ0+NJrVTpt3/0o6+mkR7S60y81Q8cChJ5d53Ia
6VR8uuTCAv0w6vHsRI2yfgYO+s4c3fltEsn81yTrP4yhlYumNjVEx+B7p1wH
TYsw0tNp1M+Ojqetd1sdflzhBcv+8vYpwTOwsWWE9L07kfGxIypeMlPMyUnf
NjYiAgWjUjq9DSJyGpj3u3TMIXSfZhoEWRpUL7caNkczgfBmlFa+ykOg3cPg
I7r5yJhvH9HaPZHsLzrv9ImOQtchz/aYdy2EnmLws1+OKaR+b/HQCXPSYayX
l2+7shA5d33JeFEmHTdab/i+fQEubJh14rO9BIOufTGJbD5frgd2huT5FqNd
1xu16qZZoC1RT6c/LSLbDe/mdwiTYcvMByUf5iWhV0vPoO9FpXTIzmbK9+ty
KH7cXzylcyx117b9OFYnCR52TidNIUfxRL/AoE2ptPGp2sQqj1A8vJCbvLKq
BP4/H+aodcgiq+uJ17vcuw1Jvda1mwGF2Odhe/HY+yy6EzLq5lm9K6Qz8ZFv
vDwLF/YPnqhglU6aN8amZBp4kd8je8tFSgn429DeKGNoAkU0Lbzb8rkv6cw3
7mGw3BcZy94dOD3xEb2fpnP86aEA0j+4q6XDaRts/Gkx+m3iI5w/PiPkuF8A
ORxzTw2bvQLKact8Os1PhKFvwgXd5YE08uibP2tcbwPHu3UJO5KF3yoJs85d
CiadR8obvV3CMPDaVaeZ3SWQDKbI9gERVHB6SVFoQQoaDHtuic2RAJ0vW4SM
TKApvxd12xiejwNvoveOfJeHHaqNI0ZNTKO4TjqZMSSF47GBS35WZCA6q25F
xr1cMmxlusV1sgzXl3RpMfp5AoqVBtw/WVtIHlbnwlxd5Xj24cCnFh/jKc/o
bL/vXXPQbtbsuwqn5ZgYfWzMVrV0WlVwKvDBl2T4WhX6TXIrxaWLR1a4O+SQ
zM931SnHKJTsNLlSSUXoGBlUc2dbHt0y2GqeftwXYz+Z/dq/LBdVz+1sutZm
06th3d7r37uJmsA7h60PJqH9r08/dm5PJYW0GVaF2RZQvXf28Z3wIMT/ljk8
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
RHaKY6LNDjVzjp3G3R8zcqD1qa7HteRMMrDy7RcXUoK9yrPuP1dIxasB648r
l0rINqeyJHCsHEmP+/6YZJlMKdk3p+37mI42M1ults+XQbfr+1+LkUV3j02w
89NIQJZN6/UZlcVYMfqE+a+GXHqR2XnG7dMhcPcK2GCyvAA5Z+LORAbk0tau
xxsmxz3EzKAN/vaF6fBTndjQTSWTHk+za5TtvwqZuaLT/KhobLgonSRt1uEd
n0Pmus0zwtv7t7ztT3nizbyJCxPvPiJL+5Cbb46pYN6cw93zUo6K6+DrJK7z
fcD3IXEf/lzw55L4XH5O8HOSeE7+XuDvReJ78TqA14HEOvC6gdeNxLrxOhOv
M8Q6874Q7wvEvvA+Eu8jxD7yvhPvO8S+85wQzwnEnPBcEc8VxFzxHBLPIcQc
8twSzy3E3PKcg+ccYs75XIDPBcS54HMEPkcQ54jPHfjckTh3fE7B55TEOeVz
DT7XJM416wCxDkDoAOsGsW5A6AbrDLHOQOgM6xKxLkHoEusYsY5B6BjrHrHu
Qege6ySxTkLoJOsqsa5C6CrrMFiHIXSYdRus2xC6zToP1nkInWdfAPsChC+w
j4B9BMJH2HfAvkPCd9iniH0KwqfY14h9DcLX2AeJfRDCB9k3iX0TwjfZZ4l9
FsJn2ZeJfRnCl9nHiX0cwsfZ94l9H8L3mROIOQGCE5grwFwBwRXMIWAOgeAQ
5hYwt0BwC3MOmHMgOIe5CMxFEFzEHEXMURAcxdxFzF0Q3MWcRsxpEJzGXEfM
dRBcxxxIzIEQHMjcSMyNENzInEnMmRCcyVxKzKUQXMocS8yxEBzL3AvmXgju
ZU4GczIEJzNXg7kagquZw8EcDsHhzO1gbofgduZ8Ys6H4HzOBcS5ACIXcI4g
zhEQOYJzB3HugMgdnFOIcwpETuFcQ5xrIHIN5yDiHASRgzg3EecmiNzEOYs4
Z0HkLM5lxLkMIpdxjgPnOIgcx7kPnPsgch/nRHBOhMiJnCvBuRIiV3IOJc6h
EDmUcytxboXIrZxziXMuRM7lXEyciyFyMedo4hwNkaM5dxPnbojczTmdOKdD
5HTO9cS5HiLXcw9A3ANA9ADcGxD3BhC9AfcM4J4BomfgXgLcS0D0EtxjgHsM
iB6Dew9w7wHRexx6/evRyigv2lt/pnGafRGt0JO0u5EnRetZDpcnz8lGRpp/
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
YEAe2Tn2l7x8mvZ/7xc1Zl5K4/Ous6/J6qWzBDZLjqz4FCShKzlzBq1q5YeU
Q+GPfUZJkbS7LvJJq0JyqN+wwyA8Hn+7Km7QG9qcpwcE9n36r4h2mTZ0HNyY
AZfz9j/nGSRQjb6GUhvVYPptYFPQ06UYL1Y9N8xZkEzHgz4t0Y4jssjaFNvL
sAA2GuU2lyuTqO1ji4MPVqZSuIHjdmWVTPz4n/dzTmH93DRTzdk4Ixuqnb22
7tTKpM8Lw1vctfBGn/XzM18WFGDKiu3Zk12z6WLtiCevl0ejrIfRytvTpKiO
Pfkvuvl899+7fvcImzRk37PvGXsoiQ5nhVpc8zyIEf+G3j1uXII+Wxe/i2qT
Rp69jk0ZbuVDDivnaNVdLETwj/rn0tNpRDMsshplkbRep9XvEy7Z0GZekjIv
nWc/6jnezXi4Thpad/25ZcewRNLYFjM3PNIdqoaXdPVT85CnNeTQiunJ9OXt
uw2aKuHI3LcqTWliIZwmt3uldC6NMlv93nO4fwpemXyeY7gmhTIq9YZlKIci
N3ZHg+LkUmg0vNYKcc6gY7bdbjRcdEFtVPH6GXeK0JCy13nPs0wafr/7tiFO
t+nKyb5XhrTNw3rmJTvmpUPs78NG/VCf7ZWAtlcGXeo/LpjaaU0IszrpBpUP
Hi8UojIx+/XuqtrnYaSqcfjbrGnBCOv6tmllNwkWvtiWMiYjhrR29YmNjkps
zmXORy70TqPF1QfkoWHJ+P20t++g56Uoyx70dfPXLLp8ptR7zrhIvOqn/e7g
PSmaei6peN8+lxRiy7zamXmjc2wLe/WpEkz6//KSRazl9LnjKjKsYq++eLv0
uv3k6ROc2iyPkYahX8S6X7EbztGsI2tvjdh4FXtMqoa8OJeC1tRK+X60C73/
On7bXk0/2BcN2PHMKxsfR5xfseuYFwVuOhGkLY/HvvODr16MTafehS3ueu/N
RavCyY4tjGUo6HBKP3l4Lv3r4Gimey0VOnseVIy8WgwTk2Etnf/m09yyh4vG
X47D0AhX96k7C7CVecmMeSmI1zNHW+WM1X5PZO8M+Lr5ylOM9PupvQfncK7W
bMiyhfHQ/ef540SSF4yCtEfOCvDG7AHrXxT+SkN9iU3OTK8b0E4pNB5qHA3f
V+fk2ssyaUBlQ/19xyLkxics3fdKhqPbL5nvHZdP7x8HtjZuzq+dRwbFTdxf
glF50sw2OwqoOm1m306tMtBr03Rj43OFmMe8lMe85MHz2X5Vbc93oSdpaqzi
2XZP49CpVaP6+z7GyPgY9jtofgjOp6madu8VgyetpqYeqnbHlWntkp8PTGrO
WdqSxa/CMWtURceLCMeIQsfHnplZpF74aramiQwaRlkmWrPkGN7ZaKbjxeZ8
FZqesG+jFN/MVJusx5YiL2ZHRPyjQjJud8p9i48E51XDPo5p9uEG5iXOR5jH
5335out9+iT50NLdL7MnJ6dhkK7K7kWdV2HZngOmmh3cUS0bFBTumgqzFrpL
dpIblozKKfIaFo0nKuOi7WOTIX/e7/rGdcHonHHrbvn0nGY+VO95acMz9P1Q
Ndz3pBxK+Ta7nY0K6HbclqM71OX48jIkcJ28FFXTehQllxaRu1tlr1bbitHj
Ts37165S3GZeMmRekrF+jtj79WXRnCiyNDFVvOWfh4detm02TPWd3a/m9vmY
M5eo78Q3a5xv5EK6LKD13uyrGF5qcDjSOAAZ22K7Tvyeja2mn+u8D/oh7K6z
ufqDXFLU6WGSoFyFSyrdPqm5ytFilFef0yikPdM6dp3Q+jnMRox+3c5IhtFG
xY/ufJFSzfzR0fJ+ZdiWHtZrmm0xUpiXVjMvbWM/mirVKjvhmESRRV1dfi4r
wuAuyjqvjy5DuP7ynMGD/CkpVq1QktGc7xv3uSi7nUPKPrcWD384Y9I7ncac
roVIWuswvcMLb6QcSAv72C6fSp93GPnP8SU+Xn0yyMRFjnc5i+292xXRtdAu
92oPV6G9RvDahVUyTOreekSbn8UUNq6r/8hnz/Gj0MqpZlfJ/73fzJJ56TD7
u/ncTqMLzTOocfDed2HzSqGk8eP7TJ2DUHvx60p+bjTZRLVsakosgXIKtZze
8jC0WxY25HS6QSs9Gj6GDyjBm7v3DHQ7e2DdlTHVszUldNjEdNW31m/QYUJb
AxtTOda8/fLEJa2I/jVN6e1X9RLLrFZf/z1DDmOH3dbv3pWQrNMNGwdpFfat
aLXo28j/Hy8N/x9eyptv1PPxtjzSeXyzzEOrHDR/wjYzJ0vkDTEZbLM6mdxC
/8yqjixDfMujHjMUVmOdxYLuq+YE0QqPOsnMoWVoY9L4wKPtDeTFD260bONH
0sAbpZVKJTRCTVLxJaY5Py8dari2VSAlDDZJbpdSSpZTB2e3PJQFjYkzMhX3
+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
m1eXjNPFsHmTfcJ2pQic1k5s83bjFXCZ//n3h9sS6PXNbOV42xYc1uv9GGWF
CJyUPrXwvqRlT/ysfwOSFLx4qmBl+5bvTV53Q++gijTwcu6uPrwUMTxYL0Wt
RzJqfnO5dVwuCgJltvktgwCcrH3iyuNdKWj6Z4Nu82RvOPrlXPrCpzdAd5bx
b8e0FHzo1n2524ltMCLrsH19jxbef0ZSciH/f/r8slsXvTkCheqDdLy1suCT
Y2GvbwtSUfH04gPDKu6B7tp9WUeURTBFfso8pydpOH5I6pzW+2LhrrLOT50W
/ncvU6I2uUcW2ji2r+iUlQHXXH69LlIvAtMO38I7dsjHGU4TG90TRHC/2+sh
zmoiMNTpsnB/QSEeDM6rOzilBEx6uRpN2JEN7we2UZKEl2BFg8mYyC8SuGHy
pHewUjJsTG5bmvq0HC+GzU1zPVUGWcWS56JnyegrM6TmeJdr4OSkd2jUghJ4
0eekhaQoCvfJ/bTt8OwxzP5yc8FUmTJYGH67YFibDDwavMlr1cfrOH7nseWD
y0UQVzNO7vC4DHQG/4IT34Mw5/vXzcdbZUJGYOz5jj1TsCyywxHDHRH4c3vn
mCviWNjtkbr9+tRIdM3Kfv3gYTSmPzA3urzlPuh3q+o82dcBz5dNWfX4fgzK
ntli2T/4GEz0c86YnBwG91S+HD4QHYPdIjf88FDcAhtjR5v1PJQKjVky7Vds
jsUl69K1d0XehnHhvTuEDs0D9R25ddO7IZ646mNm6hcJXffnmNhfFsEpowl7
Jm9IwjZW6rucfdJAXHjz3Mp3IrB1HDFmbAto9VB8dmRpfAGcqg1sv3R+Aczt
5vLYQi8XGw61m7jzQDGMzvVN+ymfBVp70juKW3BEzzcyn7TcJNA4s2TXtleJ
kOpv1WeNRwn2MYnOU3cvA4tos9fOV1PRZmO/UKcOEdC3S/THjd9KoL/O6maz
bbHolHc9VPZEMix/M6nDFt0yqGjc+aZVUzzm7LDu+6lrDrSfOeuGzNEyqHFq
NyV5XRa6HB6a2P+gN3TPOR6wv7AQNHJUrzaszcYh/feLvvY5jM6Zs9+vVcmG
+IWGb1orZOCGJ+Gz85Vu4zXLfYbOmxJgyPjv38/nJOCG2wH7Q9N88ejCmWVD
VQKgt4KN3s1+D9F+amrSsv1+mDFvaPiCQWdgYKMbmGf5QPxK28FHIvxwouKM
dr1U58Ml/7IjFpcSYEvu0U5Lrvpjt/sHvtau94CtE96dlIgywSV5o8vdw0Go
pNgci70eg0OvNqvb3ciH+rdnD3nbPUaTjd9S959KgZ83fxRZeRSA24nAh2vl
4nGkhUVR2rZ8KDz1YvJFrzwwqDpg2atNKsY+fbYqxksMngPnuw3xzYBpHqMb
7bfmoEpZUa/jQyVQfWNA+IbgBJD9XaDgr1+I7YIvL3joUgbV9HlCAX2eKHye
VfTnsR39eRD+vCJ9L+BM3wsK38sb+n4xmb5fEL7fZ3S/gCXdLziH75frdN+h
Kd13INx3W2mPwUraYyjssX+9D473JPKeBGFP/v9+T5wjnxftWTfmPAB85/Ol
h9R74vZKvSduJ78nbuT/p/fEmdO5DOZ0LoNwLjfOHRo05Vsurpn64vE2rRqo
a39yS6dDZTCQzn3kcx+Ec9+7wPLMl8JCfN83YP2KqRVg0vb3J7UzpbD88LQB
G6yLsdZPX65XC24IaDsoxcG3CD6uPPPx7poStBpQLfYTi2Gw/cdjNr1y4fbK
ztet+xSj083Ve9fUF4Jdqkvf1dOS4OfrpMZ+6SJ8cXVWonuuCLwn7FRosykY
SqIbNtx5nIkuz25OPbBBBI0fxx5oLrkMyyQxYXYasXim2PxWZwMRtN3zfrZf
x+pZY2Rf1s7f54LHndTyomaLwFXvtKWM7hXI25h3qDnBH4Z0bJOpkl8Akz6p
bimSC4FRn7df2r4iBpod4m3fmubDwjb99hd5J0HTJSV5m3YJoH9o8k6d3dlw
WlVzwFy7XAgLPLJurm4sJEb0HHkuOhWajKsi+5UWQVvCUbCQcBQIOMrlxsB8
2cn5+LxTRO+ktDpo2zBXInulDMoJj6EP4TEQ8NjuPgbnmp1b8MRhtxPL99fA
xs312scUJDBJXPuh/5kSXHVuyBGHpArIGGSwJPKcGG4ue336QEYpynxwm/4g
XQKGQ+L0w9XzIeuncqbTuxL8M1F15omHJTDrmMuV4UtSYPghPe82rcW49XmR
k9eOYvDwqhlnEBsGqq9VCtVD81BB5K1t/FQMJjqaG+Ptr0GqrHhAO/1ktH+e
OuRDhhjKh/RwNImdC9EZPYekbgnEH12N2oWiGJwXKH7MXnQWtN63LdjU9irc
D9E5WbxFDA7qpgtKkgMgYE7/qBN+obB63N07BXuKoN3mdyXmbgkgfrB547Du
0TDmehfFwXdE8HnyPAw1yYYcW1O95ucREN/OuPDM81z4ZRYdUvmqEGoJ38JC
wrcg4Nt5IBfQfWoBbv0oM8Kt8Sk45Wb3bWjZSw9X1xzP0RXjkTM/ZBMldZA8
SMXF+IIEUsd8uJJlU4odb3bPkX1WA8qmi2OfGxfDm63HBpoOLcNLq8+5Lkqu
hM+p527V3ymAxKDr90LDJahRcrN56ZFyaN2u213bXWngNrpdcvToEox1DPmZ
3r0MgrUOBia08I3EivPfOuaJsEOr4xrO2yQwrPP1kMOatyFMe++FCycy8HHa
JgX72RIY6X0pZ0aFGTypcbfuvi0K/zyJVr0+QwK56t7Z9SetoMk09tWO7U5o
fvF57dzvpTDUx/jP/k/3Yb98H583G+9DZyXloCrlUjha+XCC47Q42Ga+SusJ
hsKbg6/t5jkUg3Xfsui30zKh2nCQ4x7NUEgb9+bR0dZFcNH+UTvHDyJIIx4B
44hHgMAj7k5SOWsxMgwdjp7znjq3GKuyllrPdc+CV807A44ufYgbTw/sUP67
BAMi8n7LxyDYaKVMG2l4HJoWHc02elmKdj/e5m245gcu+R9Tgy+EQ1anGw7+
0yQYvbCkskrFHhZu7Zg0QDYdrNalT2oECXZxU98Luw3+66scwH2VQn54+49u
yrttJZCx+PjUCbPLcfu+qVtUe6TCtIKkLl0mloHZ1ZD8m7sq8dGrK+JXn/LB
2OqNv1FeKUR86LF36OEarLuWX7msTAzr7Oe6DUtoub4ltUPvu9fh3HfHDFbO
lYCyzkNvu7gCMMkI/bHW9ykWfVU0F7uVgXNa1yfRyzJh89YtgTkxDbhp9PlR
Tdcl8Mzc/rmOfDh6la65K5YvQrPqKwumTU6GczqOnjs730HrZ0+cjs8Qo8HL
lFVqH0PAI/LHqNlr7oCjXnWGb5gYA4PWKFxeeRUKRq49nrsqAcJ3jVlUniFG
8dlN9x6M7Q/tuffSTKr3coTs5u5BaaWwJ12iVjZKglFzOn7reKKFV9xUHnFW
thTEu9e99Gwux9Nfak3lthbBrXuzNjrtbeFn48xDflhW4/TjCS5DjEvhUcho
0153C6B0efX49Nl1mJlintFxexk4Nb6e8PVrBjzQyby22ugp5h3e/Ugypgz2
1C96e2VwGMrJuOapHSvAfolbNv+IiASZe/1vLTBzwBmlGjZ9lEV4Mfj3qtaZ
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
Yc9waH92yef0J3748ExSeKfBtnC+dnTmswup8L31IskB1UCcOOlAg1/TA8jU
WLFr+5Rc6P/U4PU+lxDsutm47y7XeHCQb7pWfqTg/7V2pWFZllvX1NRyxKkc
EofCCSeOogfNRYbmUA6pOFXHWRPCITMsLcQ0RLMUcUhNUHCAUkQLBXLLoMzK
LCBHhsqULA0Th9I+Pva6/fF813t9P875C9f1vu897H3vvfZae6PVr5HHW086
LQX2QzqPvZ+CgS/8MLxB/0yc8PEdPTgzTtyDk4bWH5ONL0+9G7j+YRqyV67w
Kf4iWY403Dtjz5f5uOv08WfhWYlI7d3nlWyXTDnZ4vrspV0KEXf4mSonnwSJ
T9s1cOGNJDw5uM65BhcLMLlJxf1RSJXdy/v6fdP/LFLX152cXJqHsd3fX3X/
XoZcTmnksvuDEwgKPTbl3deyjF5e3KnHH0y9/NcO/e417Vid1wz0e1Dw9mYU
rGq+1e10NNw35Drlpp+VWrdODNvxsgd+3vflQf+VISh/ud8rcXsPSa11J3Zd
Xd4ReGlJswuJy/CL/h0+n9f8XUbw71P0cxChnyPmc47q9+Ksfq+Y72XfAMym
rt/8znG6Lvyg6xKzLnfdB+zTfRCzD/G6bziv+yZm36p0nyVF9xlmn/fouUim
ngvMuTjrOUqkniMm8xx57tJEzx35PPdkvSfSWu8JGvKe+Om9ktt6r9Cb96q1
3kN55FdzD3GQ93Cu3lsk6b1Fg4l6b3voPUem3nN05D13ULuAs9oFTtMuaEd4
Xu0IjWlHtLvquKjG7uQF2l1HtVMMVDuV5rRT2jXuqV2Lses16gfkVfUDMH7g
I/UbUqJ+A8ZvBKqfkS3qZ2D8TF31S1JX/RKMXwpXPyaz1Y/Bl34sSP2eFKvf
w2D6vXnqJ+Wq+kkso590UL8qddWvIop+dZX6YexUP4xu9MMR6rfRT/02rtJv
v6Z+Hp+on4fx8376LuA3fRdg3oUQfUcwflvNOwLzjnTSdwcu+u5IJd+dXvpO
STd9p2DeKVt11SJ976Suvncw752tuuqjejXvpnyt7ya+5rtpq65apO+vdNT3
F+b9tdZVJzFemqnvuCTrOw7zjtuqq36t8YCEaTyAVxkPWOutKxnvFWtcIQka
V2AT44pGlrqqL+PJAo1PpKfGJyhjfFLAuuo11lU3MF69pnEOKjXOwRLGOSss
9db5jIfPaLyE5RovVeeFGi8l26i3DtO4C74adyGVcZerpd4ayHg+TeM3ZGv8
hq8Yv9mqt47ROBDPaRyIjxgH2qq3/qXxJNprPAkTT9qqtzJeFcarMPEq415h
3AsT9zJ+FsbPMPEz43BhHA4ThzOel+kaz8PE88wLZIHmBchjXvCE5hcyTfML
jGF+cUPzFGGegmjmKQs03xHmO5jKfGeT5k3oq3kTTN6Up/kXmH/B5F/vax6H
FZrHweRxRzUfRJXmgzD5YDfNKxGteSVMXsk8VJiHwuShzFuFeStM3so8V5jn
wuS5zIuFeTFMXtxC82hhHg1n5tHMu8VL826YvJt5ujBPh8nTr2heL8zr8YB5
/RXFASRVcQD8RBzgWcUNJF5xAyQSN1iiOAOCFGeozhsVZ/hTcQlsUlwCBpcI
VBwDYYpjwOAYLop74EnFPXCbuIen4iRSojgJDE5SpLiKDFVcBb2Jq6xXHEaI
w8DgMJGK28g8xW1gcBviPEKcBwbnIS4kxIXQirhQjOJIQhwJMcSR3BV3khaK
O2EWcaf3FaeSq4pToZw4VbriWnJCcS3sJa5FHAzEwWBwMOJmIG4Gg5sRZwNx
NhicbZjicvhScTkYXI71TYzS+qb8yPpmkdZ5pa3WeeUc67yVWqcG69SSzDo1
692I1Hq3xLHe7an1fWF9X3axvt9EeQIyUnkCkkuewPfKcwB5DjKGPIdnlS+B
+cqXkGTyJci7wFjlXUgoeRdzlb8nLZW/B8PfW6p8RfFUviIGkK9InqeQ5wnD
81yu81ilQuexojHnsfoqf1XylL+K2+Sv9lcerNxQHiwyyIMNVd6vkPcLw/v9
RvnDslj5wzD84QydLyxeOl8YvpwvTF60lCovujoeVV70WuVXi4Pyq1F2WfnV
fsrTRqTytOFBnra71qNlvNajZT/r0RGh5yrHtPkSnvbfF19uUCAP3XoeGbwx
BIOmHLU7PjYWb2/Pnrvtxer8uqLStd3dZab+DtbfxYH19xWpk+udd7yEWsN7
RKf3LJVbr7Vz6nMlD4+S3uta+0IOpn28oPHWNuXyTeuGZXEZBTis/ASZpPwE
2U1+Qum+aS95vThHHqQUZtfzz5VbAcVyc/lBw9PAI+VpSGPyNO6tvjnqwa95
WLK26RPX9xWL+5xHw4O352Gp8ljkPeWxiJDH8qvyfHBBeT4ygzwfW3PDya8T
zsUTMxfPW3VV0kF1VWJ0VZwzCM4ZFDNnMEn1XLiiei5pST0XeYzCeYti5i1m
LZXYzhuTJeOfh7M2BH0j+9r8E7slDcGqO5Ny1Z3JaurOqFOT/qpTk0HUqXHe
JTjvUsy8y6633ed26JIFh/haPQLXxMndUcHde99KMLo5UDcnpdTNLVOdHc6q
zk5iqLMz84V/tcwXnjfvYkf7P1Jk0oyi8oM7Q5Hd4ZD088hB2cxaD3q8nyau
DfaNHuY6UU6ENdo/Y306flGdoMxUnaAYnaCph25mPdToKN1UbyjxqjeUh9Qb
lrJOmss6qdFj7lLdokxR3aJ8QN1iXdZPk1k/NbrO0xZ9aB/WQzkfFpwPK2Y+
7KOp959zzU3Gaf97r4Y2iZCkVv6V31+LxJmh2z95q/1FHPvzjQ86njgp9bu2
nN+6d4LRYyJM9Zhi9Ji26qrUdaKH6jrF6Dq5PzhsqbdSH4rNqg8Vow/dwDps
qaUO68g67CTWYY0ON0b51TJb+dXwIb86WtclYbou1OW6Hug+yEndB5zhPhQp
Lx2OykvHLfLSy/U+VMfLNfcBUbwP8/X+YK7eH8nj/SHPX5oqzx8R5Pk76H2W
znqfUcn7PEH1DihRvQO8qXfIUftCtNoXDtK+glQPImtUDwIv6kFqH6/Ry8BD
9TJwpV4mmnMGfSxzBr1UNy3UTeNd6qa3ce6eG+fujaBujnptPKV6bTxDvfZg
zq1rbJlbR78nXur3MJl+j7pyoa4cRlfuoDp0oQ4d0dShv8q5b/M5980uRnWL
PkE1fhj31A+jin7YV/XyoF4er1Ev/7Pq67FP9fWYSX29k2XOWjT1mE8k17wL
wncBR/ku8B0RviO4yXfkTe0PIOwPgHL2B2A/AWE/AZh+Auw/IOw/ANN/wMw7
Y78CfM5+BfU4p6wv55T145wyJ30HZaG+gwjhOxik76Z46LtZ/e7pu3lW+yrI
L9pXAd7sq3BD+zBgpvZhwBH2YTikfRuwTvs24DL7NiRb6qHfMQ5862rtqtsD
DqF+5MOGUfYFMuih/fOHL+/BudpuSQmDBRterxiSPLRAjmzo9N1Ly+aZuPdx
vXIX496pn7lOOFQdR06oldG/Q3CpTImd1XtWcj6cZ/fxchqfgwXey13rzCiX
w38vaT++XiE8WU8MZj2xmHF+39cLM9tFrEbZpujvwnfkyvHfXdwWPX/AZl3v
wvmN5W478lDSr8ujnc3/LfX7XE5r3iIflyx1sT+Zl1nrOwHMKw3+Od1GP9L+
ln6kP7IfqaulH+k89iM9+5r2I32b/UgNbjnT0o90LvuRetjoR5pkox9ptqUf
qcEb7Yg3Gpy5wU/flSVfy5B264JrJQ4+gYSbNyrXfHEW/Rf5ejikJMng9Btj
wmYdQ8w6j20f5UQghXigI/FAg6tX9Hn5/P2VaRjZvOWC753XyMhae16+6nIR
iadW5ASuSsGwFxfeLc09LOe2+jzT/O//i9d5E6/r4YCo50sy5aspn3eZ3j4O
w33q3I3dHY+xxM3WETfrQtyscW3f+N++Skb7Z97Y02NMOEJv+h9Nb5/xGHfq
TNypBXEng5+sJX5i6lbZjLuGMu6qx7grgPFVDOOrY4yvQhhH+TCOMnqQp/X3
iL3+Hgnn74lmXNSTcdFMxkVcL/bpegVcr604J0H3U4bofsLsJ/dfuun+w+y/
P+OH9xk/JDF+4PliuJ6vRPF8eR/QQe+DCO/DKRvvjrflfTFzXW29I+lqj1Kq
9ghjj+6Wd6GCenYftXehvSOM9m5rnib9idCfwPiTKep/hP4HU+l/Gln88ET6
4RT1b+Kn/g2b6d8WqT8U+kM40h+ynw+eJh+1A/moL7l80vtHuygZUtK105Hn
MuRq7qaZV3xz0I08zFbkYU4lD/P4/r77O1X/v55nsy05E/LkfkbUjjtbI4Fb
X73Zyy1GDgT0j+n0c6LEOW/s47ggF7EjX19SdUXEq9sDb7seqeJ4/dyyaW0y
TV+sx3zFq+QrbrtzsXX+kCxc7Tcv7NlTWdL08y8m35Oj+GPdgF6xS3Px6ytd
x3lvzJYRW/eWtHpFMIPz0RI5Hy2acyuCOB/NlfPRpnPORQjno/3O+WhPcj6a
rTllrTinrKdlTtlBzimLt8wpm7h+8bCpJfvl2oIH4fGBiRIwceKUDtd3IrdL
vQvjckNQu36zvJbJiTLvwwsRc89NRaukabcHeFbnbbGpdT8+kyPbNyQkj2p9
CTfWN24U65GKHTNcfljncklCA/ZeiOteCJ/ET99J/KkfPjq6IKvZsRhx6H/5
wnnfpfhi/Ur7ee1SUOJRejr8Trac9LzkMeJSARZRx0ccQGoRB5hPfKCFBR9g
n0CJJK9vOHl9fvr5UqqfjxP8/GXEB64RH2hEfID9HmU/eW5tyXPzSa75/eKt
vx8t+fuv63plu64XZr0tdX+kSvcHZn9s4QMvWHhiv5MnVqT7L3/Xq9l/uHD/
x+l54Uc9L2zkef2nc1uyOLdls2VuSwnntvy35qfQLoR2gdG0C9qR0I7wLO3o
jNojPNUeYexxtNovQtR+cYb2G6n2Lk+qveMR7X2E+g3Qb8D4DSdLvxET305g
PxD6T3lE/9n9gyLXfamJyPxXyaJxKdV29+3PTVwnzzD+GY0tfTyGxL6T797t
AnaHlx+5+1S5/OLW+srS/+0nYOm/YfIIu2muQ8e8GQq7trfmbxmdJTtufOgR
br8eEW+tmlLnH4K+nmHb7F7Pkk8nTkjbc6oHYtg3Y42lb8aKhQEpn/yehfSt
b4QMcyqWEv91XTcOrLajbzv8I/y3dNxJecptTmqJFAakf91nYyHOcC6ko425
kM6cC2nOl/dBGlnmQrJPI5LZB/gO+zR+xrmNRZa5jbyH4D2UDMvcRt5b+Yv3
dkHhG6OmLY4TnyGfOV93DZY+F9xcHtXNR06J88OYOuek1cTVxQMHnBS7Wwf6
L7HPRmdLv9xi2tcfkakyt2EKNp/PCerV+5x0+hC5YWsPYH7fvqt7jsvEsjNF
YZemnZcJ80KzMo9EYcnip+oM6JYgDb7ZeydmUBCc31oYERiTb/ixj/vE/hWl
fuPHS1HPOPRKxNi5x36IdYkVpwEz+oxauxetLH1NG9NfbbboiDMZV1RQ/3uT
+t8Kxi3RFt3uHMY//F4Zqd+Lwfzew9TbLqHe1uBU7+m6wHWJWVeARSd7nHEa
90eW6v7AnftTpfsp/rqf6M79zKe+1YX6VoO/5el5wU7PC015Xov0fOGt54te
PN//1nwr6/ypupw/ddgyf2o/50/Vssyfmvj/zJ+ao/YltC8Y+3pP7VEy1B5h
7JE6CAlgv81KxhXfqr0L7R12k9Te26p/kGbqH+BP/+Csfkb2qJ9BBf0M9SnS
gn0mFzAuclQ/JhfVj6E//Vi8pY9iV8Zd9UdeWwzPkxJWmp+05UGuNNjUuayw
Kg0nG7Q71Hb+MRk1oHWzuJB8ObRzdZudy+PxDvsKci65fMo8fUSw17Cdwwuw
e1H3PV89XSTPycLhL0QnYPyc5m/UcSnE64PEOyn9suzcWxFlPzwDf5140edK
dbx3zL9sTPC/s2X7oJcnhW9MtNmv70PHyvwrpy6h7K2AnPSyS/LOup9WPdEp
zSY+PMzCu0tj/mKL50a+gfiRV9aVeVOTqW0/r1wdJ6O7vb3txr1TMrU05S+n
M98+5nfVs/C7qpZ4Jkzyz8LOTSJdHFNk3rY3fbdUvx+GZ+VEnpXhhxx8ZddK
u6RzUtp0a4pfVIh4T3yi1/Q3T+Pwpkb1D1TEyt/+v410zj4igaHFVU/9EvqY
B9WcPCjDh1k8q03DsmmZyHXveGFyizgJGJ0XPCcsCxFls0bZL8zA8tyCboFy
Xla18M39Nqw6H9H8V5j/wov5r7fmy5Ko+TI2M1+erfm1zNf8GvuZX8/WPB0d
x9fk6TKdefoPmtfDT/N6yWVev1VxALyqOIBUEgfg75Rl+jthfqeXrkuydV3Y
xnWF6v6gSvcHW7g/3E8U6n5iKffzDz0X4blgAc+lsZ4vhuv5YhLPd5mlbh5I
fCPHUqe+TTzkI0tdeC1xlVV6b6VU7y0W894uZH2WuA3yids8ULvAUbULBNAu
TJ10oaVOSvsS2heCaF+0R9mp9gh72qMVZzN9QSNY3xzN+uZR4lr0AxipfgAH
6AcaqN/AEfUbeJJ+438AxStnjQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAXYFdXXxedO3XNG7G5REBVBBUHAAEQQFETCAhRQETEwsBNERVQMwO7u
7gQEO1HsFhFFsVDB/tbPdb/n/zwMs959z8ydO3POPnuvvc403few/qPTJEmW
qydJpn2VJ8ngIkm+EG4vQxttXwqvqc+vC0nytfA8bXO1cRyfP1tz+z103KZl
kszQ39vJfqu25WVfSudskvv8a+g8x1RJcrv+6Kv2G6v9E2q/tD5fRpv+Jf1k
30T2p2Sfr7+/SnzsQNlbyj5N9mP15Y9p/5Hsq+ucR+uct6nRR/p8nv6+RPZF
+nx9bTsID9OJz9PxTfX3xfr8drXbVvY/9XdLbbsI/6H9Jtr6CG+sNnvq924k
vLeOnaRj19Nnv2prpq2H7CNlnyr7hvr7F20baOsu+yjZL5K9hf4eITxFuLnw
wcIXC28kfLjw5dwvsH7LHdq/rWMPE75VeI7wb9oWa2uibYm237UtrW177quO
1+HJ2tqvo20p4aa65luDj1tTtrW06bYk68t+W/A51hU+Tsa7dI5u2lZUG92K
ZCfhprm/ax21OVZt7pRtkf7+WVvkPuvzNXLjR/XZ0zrnstwT/f1L4u/qJfu6
jevZQRe4gU5+n9oco9/1iPYfyt5V9vVlv0d/b6n2t2t/i7bOPB/Z7xJeT9dw
vE54tz4/Wsc+JNsHOnZPnXuGvncd/f2kPntFeBXhnjq2mY59QLiD8FrCNwl3
VZtlG/2KvvtN4vt2igw3CGypNmOFbxRuJ3ya8E3C7fk+4U+FDxF+T/gT4YOF
z9F3fq7ru0DnOVv4M+HzhY8Tflv4ROEzhD8WPlv4XOEvhC8U/kDX9aHwWcIP
6ZzP65y765ynq81Hsk+U/RHZX5B9D9mfFZ4tPFT4MeEXhfcUPlnt31X7sWr/
iuzvyL6/7EH3qqP2e9NXhLcT3ld4GeHOwvsJT1T729V+a/19nvCdwtvyu4Tv
EN5G+DXhd4VHCC+rY7tov7+OvUj2+2XfXn+/yFjUNRwk+yWyPyB7N8amrm2O
7CfIPkX2+2TvKvu9wjOF+wufojbvqc04tZkp+xuy7yP7DOHXhfcWvlOfP6bv
6K02NV3DFrINFN5Lbc4p3Acu1eeHq11r2Rfq77XwPcId1eYYtam4HuGrhDcT
PlL4CuFWwicJXy/cVvgo4SuFWwsPFj5XeN2andzm2g8ACrcR3k14K7U5Wm1i
zX7i0Lp9xe7CBwtvKDxC+DjhrYT3Ez5GuJ1wXefpoOOGCJ8q+/uynyY8Qee8
TefsxL2W/VjZ28u+i+yny76q7N9rW5uxgr9Vm0PUpgU+SvgI4c2E9xE+Unhz
fIWOPUnHLsfvle2K0vdqgbZvE4/9tWS/Pti2tvANwt8l3hZyvdo2TN3vDhdu
nrpvHib8hM7/ss6/l/6epZM9jt+UvVnqfj1a+AG1eU5tdtPfb6nNa2pzgOy3
yP607H3o58wDsu8l+62yT5N9F9mfYx6QfZDsN8v+lOy9Zb9c+CHh7sJXCD8s
3EP4PuFZwgPwpzr2DR17oI4dLftlhX39XbJfIXtXvkv4IuFthB8Uvlm4p/AJ
an9d4ec9R/bXZR8p+93CVwpvL3yB2txTeFy9I/ubso+S/R7hq4W7Cd+vNs+q
zUC1mSn7Y7LvwW8RvlC4k/CVavOI2uyoNq/IPkv2obK/Jvyc8HDayOmeJn84
WW1fST2euIevph6LXNtrqccfv3eAjr0497N4Wuf4OfheXaXzjNd5puqzw+Qb
Z2sbgV9V+xtyf1d7/JbavKnPthYudMxOOna68KLg+/yM8C/B1/y6vneHmn/7
QJ3n0tzPsZ32R+l3BX3WT20P1DFNZX9Xf2faVha+Se3Pl70jv0X4WeFh9A3h
KcJbMxfrPIfoPDUds5HwwThw4RbCBwn/qz9v0N+H6DpeF95C9iNkL2T7pGYf
sJbs72mfa1tF+B3tU20r4Yf1Xbfou3oJX6ZjHyz8e56W/X7Z+8t+oez3FvaD
ffU9Z2h/t+w/6fNPS8cbu8p+puz3MGaFT6evMcZ03F/aJuADdU/vCr7+uTrn
PNmPFL5Etm91rqv1UZDtb21nyT5Z9vmyXyb7pYxL4WuEf9CxC9XmeLW5TPaF
sl9LrMD90HY2v1v7f7RNFP5L7X8VHsfvF15NG5fRXddzh7ZV+S3afkxsJ3a7
Ojiu20F45dx+oKZzLNY2XufppP3ajBnhC9X2KzW4VG166refwpxOX1KbNdXm
Rv3dS/ZTtb9V9n90vt/02Wn6+w/hX4THEg9ov0bp57mJ8IrCVzFv6dgr8Ac6
dojwFOGnhAcLTyYWwAcKT+W5Ca/M89exF+jv1YRLxpvwisI5fU64lb53dOG+
eIbwrYXnzif1+b36LbvqPC1lP7RwXzld+JbCvvsRtblDbXZWm4eFbxPeSXg3
XcO5+vxh5gLhSbQVXp7vUbvz9PemwivhI4Sb6L59zz1Um41kXwH/wpytYy/H
L8q+vtr8LftDwpupzcrC1+izg9Tmeu1flX2U8HX4D3y42iyFX9Pf6wo3wRcI
NxVemr4qvIHwMoxV/IWOvVb7l3XsU8Rr+i39Gn7jBf09WPggXcMM/X2w8AHy
Bx2D47cj5Cc2EG6m852c24fiPw+XfQ3Z16B/C28i3Fr4MOHVhFcXHiO8qfDm
hZ/bupmf3RG5fTT+mZjgQ13fMY25ZozaHMG1Mf8Kj+Ga8TPCRxKP5f4NXD8x
xAc69mjho/RdW+Ov6I+6/g/wM8xPsq8i+6rE5bLPlf1Q2Q+VfVnZl5F9Z+Fx
+G38kPDSsi+Nj1D7H2U/ibFc8xy7AXOu7D8QB+JfhN+pe35sL7yAXIVnIfwJ
86BwF+HviZeE1xf+lLlGeBoxjH7XUYnn3rdTz7/MvXNSz78r6Dp+0u+9PXH8
97nsJyeO275gHBL76Zrf0nn7FPbxzCv4eWL4ofotWwgX+uxr2a8TfkFtjs0c
v22F/9b1zEh8vz7WOY8Tfkltjlebk4RfFD4uc9y7jtovoQ/hY2U/Wfbxwm8T
h2SOc4hlP9J5jk3sD5kbmjbmyiP09yG01/7w4GfNPEZswVzG/H545n5IfPFW
+r8Y40jZDxWeI3xi5tiSHOEAnadD4ns9Fx+UOI+4qvRvf1L4wNL2N4VPyBxX
99J9O1m/fbfc88KQ0nNrT9lPlH2gbDsJnyq8u/DelfvPR8KDKvex5zmu8jN9
K7df7RacFw+u3AfekH1p5ls9o97EUpX7DNe1G7ma8HjhgcI3khcxrws/L3yj
8D7CXwp/Iry78IPCk4T3EH6Y3ER4qPDXwvOEP9L3X1t3PPwxvl3fO0j4ednP
qjtHXhJ8/p2FFwSfkxyB51JG278NPj85xsfC19cdK38ZfM1b4VOEz607N/4k
+PqJ418VPq/uXPpd4cvqzr1fFD677rz9HeFLhDcWHl557CzgWQn/w2SkezWq
8oSVMh6Fj5K9h9p0Fz6aOV24m/AY4R2E20TfhzE658bR92208O7E18Kzdboe
an88/l/t+1a+zv2Ee1e+P0OFd6n8u/YlHhHOdQ25zrFr5Ws+RPY+lX/LcOHt
hPcnLxDuLDyK+y+8vfBh3FvhEcI/C/8mvG9ln/CT8AHCvwgvJt4RTvVdmb5r
pPBvsi+Rfb/KPmeR8P6V/dKvwsOEvxGeL9xVeDQxlXAX4YOE2wj3q3z/DxXu
X7lvHCM8oPIzPU54R+ETiIUaPvjthh8m7xtcOv4kVn4qdX60vdq+W9pX8N3H
Mq8ljld+Y/4W/lz2sTrPOcKfCZ+aOV/+VPiUzLkwz/s4YoDEv/nszHEOv3mC
8OWJ+8FZmWMnfOhi4oDEfWJi5niJfn8McX/icXIU82NiX7+AuC1xP/hWeELi
sXo48zVzh+w/pcY843My+0nmvCmZ5/pziKsyz9GM+UNKn5OxfZjwJOFvhU/L
zBsQ8/1ArCD8jezjMnMI9MsfU7dfSN4n+2Th74THZ+YQmFeWpL5+fM2Y0r+X
eeh32S8Wvlv2Z3R9/YiL1c87B/NsR2r/at3z5nDZ2wbHb+/pHG/hW/Dzsm8R
zJ8cKtwlmIs7THj7YH5vhHCHYK7mTn3XDPq+8MGyzazbh98u+3TZ+8o+Uu07
BXNBewlvFBz/7CncIjjG20N4w+D4h5zhQ22rJ54HXqy7v23CXKq/N048Ts7I
HHMyNs7MHCdfL/x44ZxltM7ZNZgzvFb2x2TvRdwi28t1xww3yf5EYZ92tfCj
wj2Fh+rYzYNj132ENwuOS4mxT4drShyHrpM5FiXeHk/OkDgGXLXRN/CPL6bm
YfDXh2TG8zJzQzxTOKgBjTkODoo8ihwKvmKX0rEoeeZLqTkceJhBpXNA4tGZ
qfkE8pOXU3M18Dl7lM6n4GH2Kp3rwfns2YgB8NHPpI7x4CT7yN438Xyzb2Yu
tCW5l+7V4/RJxlxw/8fXP5GaG8GnP5man2G+OSAzJt9+ODW/Ct/ST+ffPfH8
NCLzsfj9h1J/F7xc/9I5MnMTPBHzOBzOrqVzMbiavo0Yj3h9Vmq+C15r99K5
M1zKbsL7JM4FJpS+fuL/M8nDE8emF2bO14jnzs2cs5xM/8sck5PHxIadGP4M
Hfto4pziLDiLxDH+apnjfHK9ceQPiePdizPnJsS4lzT6CfnK2g07Pvok8qPE
vv4E4esT+/ETyYMS50qnkm8kzr/GCt+ZOKc7pRH7wUt+Tc6ZmK/8hhw1cT66
fOM3EuOenzknJX9dLnMOS4w7KXNeRn5WNTB52cnkNolz2WUbxxK7X9A4llz1
tEa8d5PGyJmaJ67TcZ3UX/LosXaD9mfIfk3DF36V27/tQbwQ7Qv3rHtuxv99
R2xbM0c6Wu2/zO0nd697zsZP45u/zu2Tv1f7I2qeO5gTvmnMC4eqzRe55xd8
w9cN/4DPmN/wGwuJqWuea+YJH1hz7If//ji3D58v+0E1x6576Rq2jJ4TDlKb
93Pfc+afBY056Ffm9uh7ybz3d+65b7e6cwzmnIHCLaKf1QDiguhniI+f1/Dz
B8MV536OX+kaRtU8FkbJ/m7uuLq/jr1I9/YrHbN05nyavsFz/qnxvC7T/k9t
04Q3yJzzzUycVw7U915Wsz9bv7BPu0Jt/s6ca1+u/V+Z81D63SqFz99Mx+4W
naOumTnPZizQf+uF+zDz9r+55+4VMvMf9JM1MuffjMfjS+ce+JPmOufu0Xl+
i8zzwAuyz5LtUv3GFmp3qex/NPLE1dV+l2gfvKZw3+g8cob2l6j9Wmq/XuY8
eHrisbikMe5WVfs+0WORcfl7Y2xeqf0/2p7n/mTOlZ9J7NfXK+zbm2bOp8mJ
6PvkPPyuRXoWraJ9xmS1+SWzH8CvfN/wIYyzHxrjq6P27bTNrLm2tae2TxPX
dEYUrqlQU9tL22eJa3ODCtfdqMm8WnMthnPMqnlepna2m7ZPEtfNnq+5dvZM
zXMg56FetoN+/wrCU0vHvsS9c7U9V/P5qdN1V5sVE1/HazXXdzYiH5K9eeKa
3d6Fv6euzz/AD+IDtX+/Zk6pOTGj2q8v/GLNNRjou40zz/8vJa4PDin8/S/V
zEPrspIW5FhwC4nrQb3hExLzV/uq/ffCL9fMU5MObKj/BgTn4NS/9i98n+C0
XqmZ16K2tVPwdQ6pO1cnniIe/CV3TEU89XPumOoX8tRao9aja/6uEX8SV37b
iC33rpsLIP4ixvwzd5x5nj7/MbP/XCozv4WvXgSfUXO81yQzJ4dvP1rH/p7b
d/1Knl2zHyDeXNiIOY9Qm+9zx4Tw9jsG86gf11yLWDMxh98zmOekZrdf4XtA
7W/n4JiKem6PYP7zUx23FHNS4nmS+Z6xObhuboKY+kjZf8wdtw8i54uO5Z/F
f6hjbAx/kjmOezExL9oyei6Ft51Tc3/L9J3bRs9L/6pNx+i55Vv6jraWjDt9
z8jC9cpm5HvCfzB+iXd0zLrCu+o8I4XXE/6OOFHbpol/3351/8ZewsPr7ofU
t4k/6W+r6pzDG/2nZWqeCI6IfrFv3X1jPWKYwrXUZeqOdfFFK5FTFe5zy5F7
F+7TFxFrqN1yifP7oXXn+KvVHTO/mTiv+aLw3LZI7VcK9qUrkJ8X7vfkoMSr
jMeV647b4bQZr8Pqvoer1B2Tv5GY09modC18J+ENS9dK4RFalK65Lqi5drQJ
41H25Ur77Q2Fly/tb+F4iHXxafBOr+mzIbK30X710jxjZ+ITeEPhLbRfrTTn
WK87NsbHwsu9qs8Gy96T/A4OV/hL4pCaxzJ83SuFOYd59Iua/clO5EFwo/p7
Z3IluE76dd35CH542bq5R/pYVXf+wlzWm/mwcC14Te2r0nPB79qvHey3/xRu
Cpch/IfwusHzHXzVWsE+HEdCDkJ8SMxLbsJY2Ja5pHSdfhvhdUvX6bcWXqd0
/boLMVvhmnhad47DnNgp9ZxPLEG8uagRj3VMPf8zvxPbfFg6d9tZn2+Qu9Z/
tWynERsJb6D97cFjYara/NaIOfn7T/pp4nz010be8YWOXVK3L8JHfay/bxL+
Uvu/6p6X5wr/UXd8smNqX4gP7J56fDPee6T2AfhDctLvCvsmuOse0bnvMnCr
0XkPcWssHLuulLn+wH1eMXNNg2dB/PhzI4as6dito2PSlTPXLnhGxMVLFY6N
V8/MnfNcllP7ntFx9zTtL5b/Wa5wjLxSYV9KXAw3ir+9SMcuzhy3t9Nvvax0
ve8a7U+nD9GvmFdLnxP+8MPCsSC85UeFYy+4wQ8Kc7OtUvOYcJh9dI73S/MG
m6bmrOGr4T8/Lhw7dk4d2xL3wnXMLRx3bpc6/iW+/ZlrDr7+LqljTOJbeJIv
C8e4cLNvCQ+vmXedI7xvzXzs28L74Uu5/8H37Vp4CGJW/CT3M7gPwBkvH3x/
WuvzS/R3K+FviMeC47cFxHLBzxH+4dvCc2Hb1FwqfGmb1FwzPPMWqTlo+Gc4
jW8Kc93wHgsKz3kdUse5xMzTgnl16tlv1Oxr0Z+gY+kTPJd1x49Gc70H6hm+
lDl/3EH2C/XcP9Tf3YQvgG8VfjN1nRn+YW9d/4O5OeGb1ObTYI7qnNQ+jLnj
bOGla55TRur4FzPzVwMZQ5nr6bsxzjLX089NPb6bNu7bYzpnE/29j77r4dxc
dA/8dDRPv53w+bq293T8HbJNQKeE/5P9z+Aa912ynyX7HbJ3lr2K5kzeTe0j
4T3g05aO1k7Azb+fmZ8fRl6buy7wRuq6N3qMHdV+xei6wezU9Wc486Hkr7lr
B22FO+WujbZS+0eD44AtGR+54wHitxN0bffp+04mMKx5Xjsl9bzOfLSF2rfP
HZvtkpnT5/60kb1D7ufYB5+X+Z430znv0Hf9lThmuye4vnZS6louc2grHbtJ
7vhzKx3XlpykcewIbesID8rM78Pt76H9Y5n1FVvo81nB80p7nadb7phwcur5
pIXwZmozPbhms3vmWgi1gHZq3zV3vLqXbE9k1m9MST23bCS8p2yPZ9ZmbKX2
3XPPa5vrnM8Ez3MdZN8x97x2Yeo5bUP8g9o8ElyT7iK8VDRv1lrtN80dj1Fn
uCd3reEefT6RGoD+Pljf+WpmTgMO6bXMPNI9Os9XwVzI3cLzgjmhg/T5K5m5
kWmptU7wSw/Vzd3DS8GpnJubV7lU3zVW33UmY0bHvZ6Za3outVZomPALOvb3
YA3G86m1QsNlfza1bgXuZafStcCezGXCp+aurW+lY8+hFsX9Fl4YzFd1FM6i
ObcOwueqzRziXWJD4at0/NOpdTrwQqP12RuZOa4ZqbVa6EOmp9ZwwZs9ovN8
F8yZ9dY1jMtdn0VTRH0C3muUzvFyZt7sMn3XOPj9BrdEHRF+aRu1n0Q9Ru36
EntG+7hdhKfK/oXs76WOd+AS+9Vd28M/HqDzvJrbH44Ufj23n/w0tc9m/H6W
2mdTO6Pu9FFm/gEu/PPMnAa1LLiwccIjdJ6Xc9fdLoJjoBYFN0YsHBu+WG0/
y8xpfJJ6roDX3U/Hzso9N/VW+zWi57CdiZej562XhP8I1uRsK3yezv8u/UzH
PpM34mRi5Oi4ebjs03PXKJkHqa1SJ9xf9udyz4+9ZJ9CDQy/lTquhH/uKftk
amCydxVuEs1Xz6459if+IQe8NzRq9Kl5YWL77WQ7ODru3Vb4oOhY9xadKzLv
Jv7syZo1onz2eM36w6dr5sLJkW9W+5C7zU3C9dxtWuuce0fHvcTTj9asP7xB
bQq1eUf4VX1+pa5/u8Kx4J016zavVZuUGFp4jtpcqza7qM02Oueo6PPdqDZl
7nM+WDMv/j4+XJ9fo/Y9CtcKvsyce6KZ7K7t3cRax50Lt39d7a9W+26FY9O7
a9aR3lszN097dJXbF75mNJm9tL0n/JqOvUrHdoHXqLmej/0FeB3Z28p+jb6/
lltj0ErXPyQ65ke727/wfX6H+6T2A/T39JprBfAYW2SuLZD7XCec5b4/56pv
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
ynk9evPf+a3R789Yov3U6Pfr/BPNr/L+nl+1fzL6nSiLtZ8c/c6etDI3yzuB
ftP+qeh3n/BeENYckP99Gt33eCcT/QEfx3qYb5n3o9+zhS6Dda3katTimCOZ
H7/R/t7o9bLoAliXzdzI+GCdKmMErSJrt+Gxv47mnFnzemPDNxIz8F4JtCPk
cYzz5pnzTXSsE6NjJLjRlo02aFjOjo5beKfHBaXzHeIU1mUTq+BHNsyc834S
7TN5Z8n8aD6c9bXfEUtEvzPso+hzsmYCX8KcjT9hrdn5wfrtD6OvhzUW+A/i
cnzIx9F+m/edfBA9RlgDsUD7+6Lf3TU3mrdnjey8aN6etbY/a/9Y9DvDFmr/
YPS7yr6M5upZd/sj1xj9PrPveSbR7/r6KpqrZw3uD9o/HP0+sFVK63CI+X+R
7Yno97FRF2yRWhPLekPeGTQssR/inPgi/BPnwUcxr9IHmFtPC76GMxLrC3hv
w3/vC6u7xkB9AY0u9QBqAcyf/BbmUOZw7jPzOO9EosZAfQG9LnUIahCseaSe
QS2DdyjxzhTmVnhHxj7cI9oEYlniWGJV1iMQr6KBpLZBXYP1krwHilpkk8rc
I2s70E+yvpp4A1+2YmqNKLEJ95/4hHc0UUugjsA7mqhhUL9Ab0xtY//Euj7W
gePb/27Mf/Rt1vtcGaz3Pjp4XKAVZL3PFcGacHIjxi/5EWshLw5eR0DdmDFO
7Zj4cvvUujVyL8YyMTDrHy8IXl/A2OuWen0TsWnX1HqnKcF+gDVQxIJbp9Yx
Eudtk1oPiSaT9dvMI8RB9E9iIXh9YjjiN9Yo4yuuS6xZfb20VhZ9I3UmakzU
WOhX1FlYf3pR8DoItBQPpn7vHGtUpwavoUAnSR+i/6CfHB+8pgOdKvUtalvU
avDh1GtYl4MWER0iWl/uKfeT9TToA4ndeFfhlNL80peNGJFcj/cX4rPwV6w1
QT+Gbo13LrFmD66JdSdo6ogVmSfbNGJLtN8nBeuXeJ8i+kS4JdYDoXVEC8l7
mSaX5utYx1NrzHu8ewndH3o43tuExg0ODB0y70EbmfgdTReW5gDJzbeprI1b
VTb0cvg5dLzU+ajx8a5HNIZwP3Dv21bW//FuSHSL8EmsrUFXiS6O9ziif6Q+
QlzWthG7Ni+tmcSOZp53yR2QeM0Tuk10lf8HlL9K8A==
           "]], Polygon3DBox[CompressedData["
1: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
1PuWqPLbfOz16IfP3Rj7R0Xqf4tXyUU/6qQ+ukAVbuStTuqJi1XJXT8EjwNe
Dnw4+OtO6osrVvHVP3RSr1y2ii/+yu/L8Rap4n/3KFLvXKYK1/Il9pP7yZ/X
5XzetxbQT767Dvg98LRcn5370YBcwLrj+9F7LM/yG9YyjF2qxA97Wj/sR2+l
luH1IvXqharktu9wvBnklqs8K9aA5jJ+rFJ7sQYzHfh/Ve5ta0DWA1epwk3+
6vzUDz+9Ffv/rEg9cI0q95Y1ipnBa1a5V6zxzApeq8q9Yk3IevLC4D3A73Zy
/uar+v+3i1wv8+9VwW8VqQevUIX7/d4cGLxSFV/6Yyf5+IJVuOC3O6lXrlrl
Xvqtk+u5ZJXna5/B9ZmvyvO5K/gwY+km85Gx767gsarEF2pXjpCrbDK/Gjsb
HzzahEtUe2e88WQTrYJasd3AY1fx72p1dvd+q+J/1XrsAZ6gSjyktuMQ8IVN
5lNz74Plspr4E7mxvcFTVfHn1gr38vpXiX/VfuwJnrBKvKuW4AzwI01qL2rD
vF/mr+Jvd5OrAj/YhNtTO+d8+2wTLsBa9DHgOav4Y2Mz78+lqsSr+4KPBs9R
xT/vCD4WPG+V+W0Xa1Pg2avMP+YCPm/LV5kfDihy/6xcZf46BHwa+P4m8521
2yPB1zfxH+ZC54Kfa8KNWBv3+X+lSS3YWvf5xspNtETW3s8DP9+Ei7F2bvz3
RBNtiNq9UZz7OO63reTvU3rvVZmLfud+mQq8Ovg0/TN4efBYdbRZI7LdcuAx
6tR+RxhcT+tr6gHH7eb7yE+oxxsRvKpcBuNvZfzocozgcepoD0cCzyffUKc2
ZI1oHnC7Tq3Umqn6rTuqcEn3dqKPus8aJ/ihTu4f80tz53PL6LkeqpKrPdKJ
HuyBKrndw+Alzd3raF/67P+gfvhV89GTjKOwD1+HC2qK1MfXruILrfn5e8h3
qc9csJvrrZ5L/cEixi4sz1tHizUN47cGz19HKzKd8Tx4vjralWmL/H5bNMmN
Fmf7TeQ+6mhVJh/cz/L3Q/UR2Bd2rqzi2+VAFpe7Yfxl4Bq8KHi9KtyLHMxq
ckt1tDRjFMktJqtTqzTHWNC5topvlwOZBvxjldq5NXSfR/lP8+VTyswX5r9y
DReC32P54iqxyXWd6FGur8KV3QZ+F3xhFd96Lfgl8KxVciM1Bq+AZ6uiRVCT
cEA/fK3822Hmef3wvfJtR5TRb1xXJVa6tZPnT32uWpvXivAh81Spxb+Kff9+
9KPy6XuX0TNcWsW3X4/9E/A14GXBt4BfA58Gng98GfjQfvgDuZPz2f51ls+o
Eltf3ol+7KwqsfIVnfA5c1Wprb7cyXxg8qCW76Ui84t6TLWGrxTRCz1RJbZ9
spP5Rf2o2sWXi+j9bq8Sm97TyXwsXy73enUZ/d5TVbicp4wXfNaqxK53D/if
uatoCV7pZH6RH1a7dS3bH94PH6UW6krwX96bVbirpxm/Xz96W+sV22MfzTip
iNZTzecExurg31rh00YyNwZ/3Qq/PnEveubXnU/lQ3rRa72nv9af9aJvVqun
Zq+owpdM302OWVbx/zN2k2NO04t+9n2W9+pER6Ne9oNW9DRT9aKXVVukxkht
zhVFdI9qdEbSF7C/Jbp5RiftRS/2pvM39kl60RO9Ad65Ex2oeibnV/WgY/ei
L3L+VUOrDlR9kvOtetBxetFzW3/fphNdrnp1tX/qc613qlXQN1svkz/euZe5
13qk9U+1C8Ya6nGM1fQh+g5r8NaTrb0bC6g/MhbRp+hLrJlbW7ceenCRGrv1
6R0Y/1Mn9Tv1HxsWeVbVa6q/UAvrs6Ae3mfFZ0ZeTz7Pevj2vcQa1gOtR1vr
N9azvqcOWT212kT1yNYa1KPsXaTmMHIv+i79qxrUohe9tv5ZDeXUZbTC+3fC
b9834ItXL6JBUwtlTGIsoiZKHal6dOMN9aT6Hn2QvlyNh1o09SzqvdSkPTPg
g9cuopFSm7RvP/opNUrWe9cp8qyrT1RfolbcZ1n9t9p060ny5vLl6mk2KDKX
qfdTr7J+Ea5YzvhX63vGQN34uO/B24KH78bn/ALe3hirG5+qLlX9+YOt6FPV
P2+NvexG36EOWn2/8YqaO3VW6u3Vrqi3+pbx2zB+uG58lrps9fdqWdRnq0NT
36/2RT2aOjP7JYzf1JupS1NvrzZFfdoovejvjDc27UQHaf/AQ63oIf+2vsbx
Ju3Gp/wM3s74vJuYQB2s+n61LOphh+mlX8D4Q42q9fZ1i8yd6j/VK2zBmE86
0ReZCxhzGWtZU5M/Vy+xM5/XOuGvrS06V1pPNxcwxjO2UwOuL9AnGIvZs2Eu
YMxrrGsPxu919AHyxPLD8t/bFFmWM9bX6HOs41pjtP5jbVdfY/3deqG1Un2b
emF9lT7Luq41RuvDmxaptVpztVYrf24d2JqtejS13OZW6jetnw4p4nus91sf
tzZtLK8e1FzAnMDcyZqcvkSfYmwpv+xc7pxurChfrv5G7b6+R/2nvkSfYqxq
T4K+Rx9kbCvfaL3B2oJzvfp4fYE+QZ5efl5fo88x9pcvVz9irdDcRb2B+je1
8f426h/Ur6k91/eqL7UeYq1Y36ReXf2RWnd9kXpT9Sxq98zN1Lea+5mzmKtY
87T+vlkRX6Z+x/q1tUNjQfWI1q7UT6oLtYalvvnYIrHbfu3oFY8v0stiT4v9
LycWiWUPbUfPaq3fWPSwdvTQ1r6MDfdvJ5Y1pjU2t+Zmb4n1FevS1qPV31ir
/aITvaj6lG16yY3VG6gXUltgLqzeRT2RtSRzX/Wk1pt36SXWVp9iP8QJRWLr
Q9qpx1tL1fer97BeeUyRWG/fdrRV6muOLhI/W++zFmLsqx7Y3NIc09zYmqix
mzGcuZ41DGNnY2hzL2s0xjrGPNY5rZlY37L2YeysXtZY2ZhZnYKaBGNDY0Rz
NWvk6nWsbcs1qD9UP2TtW25B/bF6Tmu3cgnqm63vWHsxlldfY61YfZE6T2vG
au3sB1HvZvztuV3chI/zHI1NjFHUyamPU38zL8und6IPsZauZtrfx99JrYcc
hb+Hv4u1PTkJfw9/F2vzciaev99DrZs5uP5Wv2utzRjT+9v7XG2gGkF9jT7H
2qU1zFM60Qio9VPzp6/R51gLdE7zefG5sTZnjObz4HNhLdAY0ufX59jaqDXS
UzvRFKglkLPxenpdP+OzpTFlNzmTtXk5AecP5xG1sXIgPl8+Z+Ya5hzmiuqz
zWXMacwtreHbT3JuEZv1KmsJ5vjm9vZsmOuY85hbqse2n0ctvLnMhe1wl+bU
5tLW9O2fUHtvbeGsdrQGciDOH84j1vLlmLwfvC/sV7E2b+5zdjt6eXsprD2c
2U5viP1O9m3ZI6KWX87K+dR51VqHOa+5rj0Un/qdjcG74XjMh9RrTtbN+egX
5Cvlm/QPzjvykVu2M//oR+Qv127Hn+hn5O/lq4b2HBXhM537/E31W9a35If0
X/sV4f+2b0eDuX8Rfm+HdjSXxm3ymXu0E78dVITP3K0dTeeBRfhEYzdjOONA
+cYd24kHjfPkB3dvJ97bvUj9a6N2NCX2ydjPpzbAfhn9iPWwIe2BxqNIfU3f
qw+2nmM/5Ezd/J7Wi+yfnFlusZ38WX3ACOBj28knrVlN3s3vZX6vfmoc8Cnt
1I/sh5mnm3qa+bB69uW6qeeYL9vPsXQ39TjnKeuB8pPOVyOwvJDXoJV6u/mz
/RfLdlNvNF9WzzFfN/VG61n2e8zbTT3PONR64RbtxKP2aspRyU3ZP2b/jL2h
1sI8X/t7rLuZG/v91D+oRTmuEz3Z5yxvxfZFN5yF+ge1Jcd2og9W3zGHvFMn
+jW1K3JWclVqWNQe2w9l36UaZHuPzCGNN4071dqboxqPG5er9ZWDcO5zDlRr
Zg5sPGJcohZdDlLuUU262mc5S/MH8wi10XKC5hvmHepR5uxFi6/eT+2XObvx
jHGNetp5sJ/WiZ5ObdE+/ej21Rip37C39fBO9Br2PsrpDeXyOtHT2xt7WCf6
DfWNzlvOX+r37AWVs5Ors9/HXkU5QrlB+79mZPyMvfSaqQectkxv4gGd6GnU
IskJygWqSVLLdEORviU1TerlZ2X8kZ3oDdUr2It3RCd6xenL9CYd2Il+U326
87TztXps+43sBbaWeXI797r3fH8QF6hdkpMy/jAOUbujhsf9exz7K+3VkOvx
eVHLo6bH6+V1k7uXw5O7sz9FLYqaFK+X181CpL1Nckfy3faHnVakV9aeWfvX
Ti9Sez2pnf4itedyO8e00z91chGu7eh2uCM5JLlQNaDWduVw5W7VpKs9t5/R
vls16GqX1DB5v3vf+yz7TI80iJPUIqlJ8n73vrcX0H4W+2rtCVSLIQdn/GEc
onZFTsH40jhTLYWcnPGEcYVaMTkO4xvjHLUYcnzGA8YFFmLlSIz3jfvVHg7l
PDqJK9WeW4MwHzUvtfZhDcQ+cXvmrI1YI1ELbw+e2iU1TP7+3gdqAdUEen95
n6ntUeNjPmpeOoZ1tDr349D7kn2d06ReaQxkbLF0FW2QMYa5w5lN6p/mEPY7
2qNr7m9N3v5Ge3jNle1ht9+vqsIVWKOXm5CjsF/Pvj31ccNX4U6sCdo/OmIV
rkLO0VzTnNP+OPvkrPVZ87N2Zl+ftTprdurb1LmZq5mz2W9o36G1Q2uI9gPa
F2i/hT2E1gbtIbJfxR4/a4P2XFlbtMaoPlKdpPq/EapwJXKicjdyOPajqnlR
W6LGRP2YOjK1KGpS1L+pg7uqF77N3EcOTm3oSVX0nNaC7Ve6opfeADWhckFy
QvYDWxNS39yqkqvKkdpPYQ+vXI09Y/Z32NNn7mqPt/0Y9vDK1ahxsB/EHlFz
b3vczW3Nce3Ps0/P/hF7WOUa5LitjVojVa+u5tnaqDVS9X/qAO3/sUdVX2uP
/53YpmfddK3EpMaKM1TR2hgz3gGerooWyDn3bufbKu868J0Hxn7TVtEGOYfe
771aRbsjP/IQeMZqoO0BP+uzWaWWL9/h3O0cbn/lrdz/T7N8dJXavz1hj4Bn
qqLtsefX2HWaKtpV58QnzS+raA3sAbzXeLuKNsh3EPi+hdGqcHnWJO33sAfA
WqUxjXpFe9zkGqwJqDe0J06uwXc26Ev1qb6PwPcSGKsZs9lfZp+Zsa0xrv3h
9omrd7TnVm7BdwTIpcip2M9rX69ci5yL/Zb2XcqNyJHYT2pfqXo/e9bkTnzn
gf089uzJjfgOBbkXORi5Fvsc1Rva8y6X4jsO1FaeUEWPrLbCuWPcKr2uziFq
pU+pcq+qdbCeLN9srqqmWr2BfK65sBq8B3upb5h7qxlUq7hHk344tSz2Y9rz
pfbLHme1jrs18d1qsYx9jIEmH8TN6gMf6+XdBGrw1PLdXIXbUIug3kD+3FxO
TZ16B/liuRQ1gHf2woebi1ljuasXPt9cUo2j2rurqui51YbYS3BPlWOphTCW
M6bTf+nHjPWM+fSH+sW1B/eXsYEa0HUG97exhJrCkRm/c5N+cLU79pLt0qSf
XG3cuoPnRV9uT5yxoDHh0FqKvrGX503fP34r/Zmnmme10qNvbGiMONkgLxky
uP+N1dToGqsas046yDuMfY2BJxjEicbGxsjjD+KEx3upL8nXj8r12aVO/Vw+
fXxjsjr1Wfn6CTrRh1n/MLayR8ReusOrcIdqE9SHzVIlVrKn6cxe6iPmss4h
cjNXN9G/yNGc3ct8IXdpzUJ9kM+r3KQ9dOp7nA/kdu35U99jvULuSk2zeiDn
A7lgewTVQ1ivkWtR1GQvwblV+hfUYthrcH4VbkstinpB5wO5PHtm7AU8tEr/
mlo5ewkPrqI3Vqv4Qi/1Cuvz4xgT1KnXWE+yX8d+sNt70bZ6j+1Wp35vvcJ+
tBd7qU9Y/x8X/FQv9T7rKaMZI9Spv1gPHMOYoE79w/rNmJ3oH50/5Xbt+VFf
Y/1KbsUeD7WoV1TpL1XrpPZ49yb9qGrN1CNZr7HeZP+WeivrQXKD9kAszvHG
qZKrPNlOrDEeePRWYg5zD3OQz8BXFXl/xU51vovfSf36HnW0X2oC1K8+28u5
+x3UQnkOHtseMvWo9jx57byGvm9mxzrX1musnt+eObUwagrUH7/cy73pPWps
Zox2RZnjq+VR02M/qz1N8obq0dxW/tB+jVd6uZe9p+03sGfQ38bfSP3Vlmz3
kvNbK+/PsefN8/WaqX1RA2P/lj059i/ag6e20xzN/kB74NR2moOrHVRDaD+b
fW32W+xfR1tkDq5WVM2o/WH2idnvYM+u2iJzdrU/aoDsn7Mnyf5fewDV1phD
229oD5naI3N2tT5qfuz/swdKbY4aHfv97FmzH8OeW7VMcgb2C9vzp7bHnH5F
47N+dJvqNdWbbWF9xLlqUC/brButo5rH4er4KH2T8XpZxwfpe+QjR6jj0/Rl
xvf/VvGR+kb5zE4dH6rvlM/8qUrMZ6wnP6hQUR+q75RPHLOOz9RXmj+MXSeG
NHY03xm9ToxobGi+MUmdmMhYSP5lkyp6U39j9XXz1IlZjVWtYf9cJaY0lpR/
/bVKTGosKp+q/mBD62ntoV+5tUadOd+5Xn3m6uCR+tGRqh+1PrRtN1pRNSXq
+TZ3HgEPaww+yP/UxaqHNX+0l+yNdp458z179V5vx0ebT25nvbGd991Yr9yg
m2eVf0P5hvW70YKyOLTeuZG1wvbQMLO1lPFuPzpQ9Z+L1KkvqgNV/6kWWU2y
/ZX25F04mA88ljmF/bb2XKpNloNRH/9ML3OVc5ZaQH20vlndu+8zUiOv1tIe
Mfth1cCrxXSOsr/cHky1b3JAatPUqNmPas+eXJec1xiDPNH3KdkjoFbTmrja
QudA5z773OwvswdAraIaeLVx+gR9gX1v9l/ZE6B20Zq8WjljHGMb+8bst7qn
F62kNXzfh7RVHd+oj7ya5Umr+GZzdHPjiav0EpgjywXICfi+pGuKcAtyDL5/
6Noi70PxHQrWetW4WRu0Rvgx9iuLvG9l9Cq1YTVx5uaTVNFGm6PLPchB+D6i
64rkulNU0eaa88rVyNn4fqEbi+TmE1XpVTFHl3uQg/B9NLdgv9G5oIqWWM7H
3HjyKr0y5sj2P9lzqTbUngbfz2XPntpNfar9ZfbUqhVVY+H7KOyRU/tqjOn7
ruxpU0trDV5trj5c321fku9rsEdPLa05k9pffZK+yL48379hj75adX2w72ew
R0gtsD0bvu/Hnn61kPps30dgz7DaRTlItcHGEMYOvjdALbKaZLXG9u2rRTbm
MNawb19tsTGFsYTvHfD9IL5TwN4Ee9jVyquZV0tvH7+9CPpkfbF9uL6vaus6
vlyf7vvB7GlU+2lPpf2QD/ei9VWzo1bXGNbY1T4WtbzG2MbW9rmotTemMpay
R1RtvjGYsZc9pPY6GMMYu9j36/sy7DlSS24M7vtP7DGy18EYwF4IY0ZjRfu6
fP+GPUZqzX2nhdp1Nez289qzav+8PdX2Hshp+j67M3rp3TOmdezMVbgnt9lw
kB/KJZoz21t9cJPfQq2rvdwHNeGD1Zr6rKsvtDbvM2/v9SFN5gK1o+b+6hmd
i+UAzPXVPw6tbXXi69QrWsvX5/kuj7pOrmOt2XcJ/VEl91c7bH/XN728G8F3
vG00yD+H9tq2kwurJ1LbYE78wiCetdfBd6zYa6+/Vx/7cZFec6/PUeAPi+TW
6q3UPphjW6u3Zu+9ukkZ7kH9k1oJOYjnBtfPXgFrLO/3ol/S913Gund70UNZ
W1PT5rvL+nXO3Vq572rp1ckFrZWbi6pH0/eak+5VR/9qLdV3Jtiv+UYv72qz
x8dYSX2ttU5jJt8VsleTeoBa573r6GutdfpOD9/H8FYvvZ5y9Pbe791k2d6V
w+voPa2N2XPv9dmnia+wl+XAOnyTtWN7qN/sRY9rLVZNqb5H/a21VH2Q78r6
p0qsYC3AdzX9VYWbUPttbq3eztjBHNvcWz2ssYI5uO9++q0KF6Q221hKvava
E2Oqg+roea1V+04C361wQJNYSC2z7zY4sEmspVbadxsY36nX/qTI/SpfIJf+
TZF3JxhPqb/9vMj97nxk7earIrGVMdaE4OuL5E/OX/IX65fJz53fvB82K5Of
Ov/av3BGGd+tD7c/5eoisYcxyBTgm4vEHsYgk4NvKpLPOH/Kr6xbJp9xPpO/
WbsMX+V87f29RZl8W/+pPv+YMnyA87N6t63K3M8nNunlsB4oPzN1lX4WOXa1
N6c26edQg2Nt8+Qm/UfWONUanNGkn0LNgfmK8cFSxhdl8jXny4XBO5fJ1/Q3
i4B3LZO/Gz8sbT5Shm9w/pIvupvjv92L/tPa9eGt8A3Of/I/dxZ594x8hPzT
7UXud+PtA8DvFJmvjEesRX5d5F1a8m/qUSbu5l1s8m3qVybs5l0e5if2a71Z
5HkwPjoS/EGRd5GYX2zh713mfvKdGfYyfFnkfjOeV8/9RZF398n/qT+Zrpv7
Vz7U8X+UeXei/OtD4Lm6me/kgy4GN93MD/I96iuHGeR/+gP5sruKzBfyRRdJ
Ow7mR/lS9d9/lXm+5EvVf/9T5t1w8lXW30bv5l1Q8l/2W4zazfMpXzhUH16G
7/AdOvJrtw2eh/2b1A/tJZDbfq2JnkyO2+s5fh1uUy2R/dDev8bOcij2Otnz
ZDxsXGwvkj1JxsPGxfLbS9aJb41zfX+kz4exrTGY77dcuk7vkzGY/eZr1ull
k1P0/Z7L1OmVMqby99yzydxoL4b96qf18m4s3zno9x+lDnen9sj+cp8/Y39j
Kp/vHZuMNYfyfVjG2MbWxnjmHva8mV+ag2xaJZ40F/m3ld9/qjq1a7V7ctH2
q1lLkZP2fnqxyrvcfMeN79PrV3mXoe8E7Vbpj7N24zsq7T83xzC3MCacvU4/
nLXMq/gMW0Wva+3Rd8b6PthF6/R+mePb2ynHJbdl36zcpPrjobXTTu7Hmesc
Wy2d71cc0xinnXeAynXbX2ctVs57mCr9etY2fSep/fzOh+aavmNy5Cr6Ymuj
vmPQ98V6P9lL6jv97D2VQ5M7850co1TRJ1uL9Z2H//aiD7aW6zsPfX4nrPP+
WLVg1ibUN1urtUbhfL5fk9zd3sx/etF7mys+0kpubn+I2g9zdLl19cjW3uXY
za3tV1ALY47t/LxDE22pOZa1DfXi1matcSxRh2/9qpUc0vc1/dXLuxA9x+UG
8bpaVHPE5Qf5hb1f5uDf9aKXNtdWk+7zOVqdXFft2gqDfMHeMO8xnw35G7Xy
PiPGL/s2qZfbm7raIP63lugzpv/YqUnt0hzW+XLXJtfeXt5VBvmBWkdzULkQ
9fdqg+RErM2orzc3t0ZzXJ3+E7VFvoNo1UG+Yi3UZ1huxH4QtTZyJHLd6tfl
CuS85cbV75vby5H7frR3enkXlHPK/wGI6C3c
           "]], Polygon3DBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$6669#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{833, 1039, 1374, 1040, 2519, 1581, 1066, 1389, 1067, 2525, 
       1589, 1089, 1404, 1090, 2529, 1597, 1112, 1419, 1113, 1605, 2686, 1135,
        1434, 1136, 1613, 2688, 1158, 1449, 1159, 1621, 2692, 1181, 1464, 
       1182, 2531, 1629, 1204, 1479, 1205, 2539, 1637, 1227, 1494, 1228, 2545,
        1645, 1250, 1509, 1251, 2549, 1653, 1273, 2609, 1524, 1274, 1661, 
       2710, 1296, 1539, 1297, 1669, 2712, 1319, 1554, 1320, 1677, 2716, 1342,
        1569, 1343, 1346}], 
      Line3DBox[{834, 1041, 1375, 1042, 2520, 1582, 1068, 1390, 1069, 2526, 
       1590, 1091, 1405, 2627, 1092, 1598, 1114, 2584, 1420, 1115, 1606, 1137,
        1435, 1138, 1614, 2689, 1160, 1450, 1161, 1622, 2693, 1183, 1465, 
       1184, 2532, 1630, 1206, 1480, 1207, 2540, 1638, 1229, 1495, 1230, 2546,
        1646, 1252, 1510, 2655, 1253, 1654, 1275, 2610, 1525, 1276, 1662, 
       1298, 1540, 1299, 1670, 2713, 1321, 1555, 1322, 1678, 2717, 1344, 1570,
        1345, 1349}], 
      Line3DBox[{835, 1043, 1376, 1044, 2521, 1583, 1070, 1391, 2623, 1071, 
       1591, 1093, 1406, 2628, 1094, 1599, 1116, 2585, 1421, 1117, 1607, 1139,
        2590, 1436, 1140, 1615, 1162, 1451, 1163, 1623, 2694, 1185, 1466, 
       1186, 2533, 1631, 1208, 1481, 1209, 2541, 1639, 1231, 1496, 2651, 1232,
        1647, 1254, 1511, 2656, 1255, 1655, 1277, 2611, 1526, 1278, 1663, 
       1300, 2616, 1541, 1301, 1671, 1323, 1556, 1324, 1679, 2718, 1347, 1571,
        1348, 1353}], 
      Line3DBox[{836, 1045, 1377, 1047, 1584, 1072, 1392, 2624, 1074, 1592, 
       1095, 1407, 2629, 1097, 1600, 1118, 2586, 1422, 1120, 1608, 1141, 2591,
        1437, 1143, 1616, 1164, 2594, 1452, 1166, 1624, 1187, 1467, 1189, 
       2534, 1632, 1210, 1482, 2649, 1212, 1640, 1233, 1497, 2652, 1235, 1648,
        1256, 1512, 2657, 1258, 1656, 1279, 2612, 1527, 1281, 1664, 1302, 
       2617, 1542, 1304, 1672, 1325, 2620, 1557, 1327, 1680, 2719, 1350, 1572,
        1352, 1355}], 
      Line3DBox[{841, 1055, 1382, 1056, 2522, 1585, 1078, 1397, 1079, 2527, 
       1593, 1101, 1412, 1102, 2530, 1601, 2685, 1124, 1427, 1125, 1609, 2687,
        1147, 1442, 1148, 1617, 2690, 1170, 1457, 1171, 1625, 2695, 1193, 
       1472, 1194, 2535, 1633, 1216, 1487, 1217, 2542, 1641, 1239, 1502, 1240,
        2547, 1649, 1262, 1517, 1263, 2550, 1657, 1285, 1532, 1286, 1665, 
       2711, 1308, 1547, 1309, 1673, 2714, 1331, 1562, 1332, 1681, 2720, 1358,
        1577, 1359, 1362}], 
      Line3DBox[{842, 1057, 1383, 1058, 2523, 1586, 1080, 1398, 1081, 2528, 
       1594, 1103, 1413, 2630, 1104, 1602, 1126, 2587, 1428, 1127, 1610, 1149,
        1443, 1150, 1618, 2691, 1172, 1458, 1173, 1626, 2696, 1195, 1473, 
       1196, 2536, 1634, 1218, 1488, 1219, 2543, 1642, 1241, 1503, 1242, 2548,
        1650, 1264, 1518, 2658, 1265, 1658, 1287, 2613, 1533, 1288, 1666, 
       1310, 1548, 1311, 1674, 2715, 1333, 1563, 1334, 1682, 2721, 1360, 1578,
        1361, 1365}], 
      Line3DBox[{843, 1059, 1384, 1060, 2524, 1587, 1082, 1399, 2625, 1083, 
       1595, 1105, 1414, 2631, 1106, 1603, 1128, 2588, 1429, 1129, 1611, 1151,
        2592, 1444, 1152, 1619, 1174, 1459, 1175, 1627, 2697, 1197, 1474, 
       1198, 2537, 1635, 1220, 1489, 1221, 2544, 1643, 1243, 1504, 2653, 1244,
        1651, 1266, 1519, 2659, 1267, 1659, 1289, 2614, 1534, 1290, 1667, 
       1312, 2618, 1549, 1313, 1675, 1335, 1564, 1336, 1683, 2722, 1363, 1579,
        1364, 1368}], 
      Line3DBox[{844, 1061, 1385, 2622, 1062, 1588, 1084, 1400, 2626, 1085, 
       1596, 1107, 1415, 2632, 1108, 1604, 1130, 2589, 1430, 1131, 1612, 1153,
        2593, 1445, 1154, 1620, 1176, 2595, 1460, 1177, 1628, 1199, 2596, 
       1475, 1200, 2538, 1636, 1222, 1490, 2650, 1223, 1644, 1245, 1505, 2654,
        1246, 1652, 1268, 1520, 2660, 1269, 1660, 1291, 2615, 1535, 1292, 
       1668, 1314, 2619, 1550, 1315, 1676, 1337, 2621, 1565, 1338, 1684, 1366,
        1580, 1367, 1369}], 
      Line3DBox[{929, 1027, 1566, 1339, 2569, 922, 1020, 1551, 2673, 1316, 
       915, 1013, 1536, 2668, 1293, 908, 1006, 1521, 2661, 1270, 901, 999, 
       2603, 1506, 1247, 894, 992, 2599, 1491, 1224, 887, 985, 2597, 1476, 
       1201, 880, 2698, 978, 1461, 1178, 2557, 873, 971, 1446, 2645, 1155, 
       866, 964, 1431, 2640, 1132, 859, 957, 1416, 2633, 1109, 852, 950, 2579,
        1401, 1086, 845, 943, 2576, 1386, 1063, 830, 936, 1371, 1034, 1370}], 
      Line3DBox[{930, 1028, 1567, 1340, 2570, 923, 1021, 1552, 1317, 2565, 
       916, 1014, 1537, 2669, 1294, 909, 1007, 1522, 2662, 1271, 902, 1000, 
       2604, 1507, 1248, 895, 993, 2600, 1492, 1225, 888, 2704, 986, 1477, 
       1202, 881, 2699, 979, 1462, 1179, 2558, 874, 972, 1447, 1156, 2553, 
       867, 965, 1432, 2641, 1133, 860, 958, 1417, 2634, 1110, 853, 951, 2580,
        1402, 1087, 846, 944, 1387, 1064, 831, 2677, 937, 1372, 1035, 1036}], 
      Line3DBox[{931, 1029, 1568, 1341, 2571, 924, 1022, 1553, 1318, 2566, 
       917, 1015, 1538, 1295, 2563, 910, 1008, 1523, 2663, 1272, 903, 1001, 
       2605, 1508, 1249, 896, 2708, 994, 1493, 1226, 889, 2705, 987, 1478, 
       1203, 882, 2700, 980, 1463, 1180, 2559, 875, 973, 1448, 1157, 2554, 
       868, 966, 1433, 1134, 2551, 861, 959, 1418, 2635, 1111, 854, 952, 1403,
        1088, 847, 2682, 945, 1388, 1065, 832, 2678, 938, 1373, 1037, 1038}], 
      Line3DBox[{932, 1030, 1573, 2676, 1351, 925, 1023, 1558, 2674, 1326, 
       918, 1016, 1543, 2670, 1303, 911, 1009, 1528, 2664, 1280, 904, 1002, 
       2606, 1513, 1257, 897, 995, 2601, 1498, 1234, 890, 988, 2598, 1483, 
       1211, 883, 981, 1468, 2648, 1188, 876, 974, 1453, 2646, 1165, 869, 967,
        1438, 2642, 1142, 862, 960, 1423, 2636, 1119, 855, 953, 2581, 1408, 
       1096, 848, 946, 2577, 1393, 1073, 837, 939, 2575, 1378, 1046, 1048}], 
      Line3DBox[{933, 1031, 1574, 1354, 2572, 926, 1024, 1559, 2675, 1328, 
       919, 1017, 1544, 2671, 1305, 912, 1010, 1529, 2665, 1282, 905, 1003, 
       2607, 1514, 1259, 898, 996, 2602, 1499, 1236, 891, 989, 1484, 1213, 
       884, 2701, 982, 1469, 1190, 2560, 877, 975, 1454, 2647, 1167, 870, 968,
        1439, 2643, 1144, 863, 961, 1424, 2637, 1121, 856, 954, 2582, 1409, 
       1098, 849, 947, 2578, 1394, 1075, 838, 2679, 940, 1379, 1049, 1050}], 
      Line3DBox[{934, 1032, 1575, 1356, 2573, 927, 1025, 1560, 1329, 2567, 
       920, 1018, 1545, 2672, 1306, 913, 1011, 1530, 2666, 1283, 906, 1004, 
       2608, 1515, 1260, 899, 997, 1500, 1237, 892, 2706, 990, 1485, 1214, 
       885, 2702, 983, 1470, 1191, 2561, 878, 976, 1455, 1168, 2555, 871, 969,
        1440, 2644, 1145, 864, 962, 1425, 2638, 1122, 857, 955, 2583, 1410, 
       1099, 850, 2683, 948, 1395, 1076, 839, 2680, 941, 1380, 1051, 1052}], 
      Line3DBox[{935, 1033, 1576, 1357, 2574, 928, 1026, 1561, 1330, 2568, 
       921, 1019, 1546, 1307, 2564, 914, 1012, 1531, 2667, 1284, 907, 1005, 
       1516, 1261, 900, 2709, 998, 1501, 1238, 893, 2707, 991, 1486, 1215, 
       886, 2703, 984, 1471, 1192, 2562, 879, 977, 1456, 1169, 2556, 872, 970,
        1441, 1146, 2552, 865, 963, 1426, 2639, 1123, 858, 956, 1411, 1100, 
       851, 2684, 949, 1396, 1077, 840, 2681, 942, 1381, 1053, 1054}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1685, 1886, 2206, 936, 2115, 1887, 2207, 2677, 1817, 2116, 
       1888, 2208, 2678, 1818, 2117, 2437, 2519, 2209, 1819, 2118, 2438, 2520,
        2210, 1820, 2119, 2439, 2521, 2211, 1821, 2120, 1047, 2212, 2416, 
       2575, 2121, 1889, 2213, 2679, 1822, 2122, 1890, 2214, 2680, 1823, 2123,
        1891, 2215, 2681, 1824, 2124, 2440, 2522, 2216, 1825, 2125, 2441, 
       2523, 2217, 1826, 2126, 2442, 2524, 2218, 1827, 2127, 2622, 1892, 2219,
        1828, 1893}], 
      Line3DBox[{1686, 1894, 2220, 2417, 2576, 2128, 1895, 2221, 944, 2129, 
       1896, 2222, 2682, 1829, 2130, 2443, 2525, 2223, 1830, 2131, 2444, 2526,
        2224, 1831, 2132, 2623, 1897, 2225, 1832, 2133, 2624, 1898, 2226, 
       2418, 2577, 2134, 1899, 2227, 2419, 2578, 2135, 1900, 2228, 2683, 1833,
        2136, 1901, 2229, 2684, 1834, 2137, 2445, 2527, 2230, 1835, 2138, 
       2446, 2528, 2231, 1836, 2139, 2625, 1902, 2232, 1837, 2140, 2626, 1903,
        2233, 1838, 1687}], 
      Line3DBox[{1688, 1904, 2234, 2420, 2579, 2141, 1905, 2236, 2421, 2580, 
       2142, 1906, 2238, 952, 2143, 2447, 2529, 2240, 1839, 2144, 2627, 1907, 
       2242, 1840, 2145, 2628, 1908, 2244, 1841, 2146, 2629, 1909, 2246, 2422,
        2581, 2147, 1910, 2248, 2423, 2582, 2148, 1911, 2250, 2424, 2583, 
       2149, 1912, 2252, 956, 2150, 2448, 2530, 2254, 1842, 2151, 2630, 1913, 
       2256, 1843, 2152, 2631, 1914, 2258, 1844, 2153, 2632, 1915, 2260, 1845,
        1689}], 
      Line3DBox[{1691, 1916, 2235, 1917, 2633, 1690, 1918, 2237, 1919, 2634, 
       1692, 1920, 2239, 1921, 2635, 1693, 1112, 2241, 1922, 1694, 2584, 1923,
        2243, 1924, 1695, 2585, 1925, 2245, 1926, 1696, 2586, 1927, 2247, 
       1928, 2636, 1697, 1929, 2249, 1930, 2637, 1698, 1931, 2251, 1932, 2638,
        1699, 1933, 2253, 1934, 2639, 1700, 2449, 2685, 2255, 1935, 1701, 
       2587, 1936, 2257, 1937, 1702, 2588, 1938, 2259, 1939, 1703, 2589, 1940,
        2261, 1941, 1704}], 
      Line3DBox[{1706, 1942, 2262, 1943, 2640, 1705, 1944, 2263, 1945, 2641, 
       1707, 1946, 2264, 2551, 2450, 1708, 2451, 2686, 2265, 1947, 1709, 1137,
        2266, 1948, 1710, 2590, 1949, 2267, 1950, 1711, 2591, 1951, 2268, 
       1952, 2642, 1712, 1953, 2269, 1954, 2643, 1713, 1955, 2270, 1956, 2644,
        1714, 1957, 2271, 2552, 2452, 1715, 2453, 2687, 2272, 1958, 1716, 
       1149, 2273, 1959, 1717, 2592, 1960, 2274, 1961, 1718, 2593, 1962, 2275,
        1963, 1719}], 
      Line3DBox[{1721, 1964, 2276, 1965, 2645, 1720, 1966, 2277, 2553, 2454, 
       1722, 1967, 2278, 2554, 2455, 1723, 2456, 2688, 2279, 1968, 1724, 2457,
        2689, 2280, 1969, 1725, 1162, 2281, 1970, 1726, 2594, 1971, 2282, 
       1972, 2646, 1727, 1973, 2283, 1974, 2647, 1728, 1975, 2284, 2555, 2458,
        1729, 1976, 2285, 2556, 2459, 1730, 2460, 2690, 2286, 1977, 1731, 
       2461, 2691, 2287, 1978, 1732, 1174, 2288, 1979, 1733, 2595, 1980, 2289,
        1981, 1734}], 
      Line3DBox[{1737, 1983, 2304, 2698, 1846, 2154, 1985, 2305, 2699, 1847, 
       2155, 1987, 2306, 2700, 1848, 2156, 2466, 2531, 2307, 1849, 2157, 2468,
        2532, 2308, 1850, 2158, 2470, 2533, 2309, 1851, 2159, 2471, 2534, 
       2310, 981, 2160, 1993, 2311, 2701, 1852, 2161, 1995, 2312, 2702, 1853, 
       2162, 1997, 2313, 2703, 1854, 2163, 2476, 2535, 2314, 1855, 2164, 2478,
        2536, 2315, 1856, 2165, 2480, 2537, 2316, 1857, 2166, 2481, 2538, 
       2317, 1858, 1751}], 
      Line3DBox[{1750, 2002, 2303, 2001, 2596, 1749, 2000, 2302, 2697, 2479, 
       1748, 1999, 2301, 2696, 2477, 1747, 1998, 2300, 2695, 2475, 1746, 2474,
        2562, 2299, 1996, 1745, 2473, 2561, 2298, 1994, 1744, 2472, 2560, 
       2297, 1992, 1743, 2648, 1991, 2296, 1187, 1742, 1990, 2295, 2694, 2469,
        1741, 1989, 2294, 2693, 2467, 1740, 1988, 2293, 2692, 2465, 1739, 
       2464, 2559, 2292, 1986, 1738, 2463, 2558, 2291, 1984, 1735, 2462, 2557,
        2290, 1982, 1736}], 
      Line3DBox[{1752, 2003, 2318, 2425, 2597, 2167, 2004, 2319, 2704, 1859, 
       2168, 2005, 2320, 2705, 1860, 2169, 2482, 2539, 2321, 1861, 2170, 2483,
        2540, 2322, 1862, 2171, 2484, 2541, 2323, 1863, 2172, 2649, 2006, 
       2324, 2426, 2598, 2173, 2007, 2325, 989, 2174, 2008, 2326, 2706, 1864, 
       2175, 2009, 2327, 2707, 1865, 2176, 2485, 2542, 2328, 1866, 2177, 2486,
        2543, 2329, 1867, 2178, 2487, 2544, 2330, 1868, 2179, 2650, 2010, 
       2331, 1869, 1753}], 
      Line3DBox[{1754, 2011, 2332, 2427, 2599, 2180, 2012, 2333, 2428, 2600, 
       2181, 2013, 2334, 2708, 1870, 2182, 2488, 2545, 2335, 1871, 2183, 2489,
        2546, 2336, 1872, 2184, 2651, 2014, 2337, 1873, 2185, 2652, 2015, 
       2338, 2429, 2601, 2186, 2016, 2339, 2430, 2602, 2187, 2017, 2340, 997, 
       2188, 2018, 2341, 2709, 1874, 2189, 2490, 2547, 2342, 1875, 2190, 2491,
        2548, 2343, 1876, 2191, 2653, 2019, 2344, 1877, 2192, 2654, 2020, 
       2345, 1878, 1755}], 
      Line3DBox[{1756, 2021, 2346, 2431, 2603, 2193, 2022, 2348, 2432, 2604, 
       2194, 2023, 2350, 2433, 2605, 2195, 2492, 2549, 2352, 1879, 2196, 2655,
        2024, 2354, 1880, 2197, 2656, 2025, 2356, 1881, 2198, 2657, 2026, 
       2358, 2434, 2606, 2199, 2027, 2360, 2435, 2607, 2200, 2028, 2362, 2436,
        2608, 2201, 2029, 2364, 1005, 2202, 2493, 2550, 2366, 1882, 2203, 
       2658, 2030, 2368, 1883, 2204, 2659, 2031, 2370, 1884, 2205, 2660, 2032,
        2372, 1885, 1757}], 
      Line3DBox[{1759, 2033, 2347, 2034, 2661, 1758, 2035, 2349, 2036, 2662, 
       1760, 2037, 2351, 2038, 2663, 1761, 2609, 2039, 2353, 2040, 1762, 2610,
        2041, 2355, 2042, 1763, 2611, 2043, 2357, 2044, 1764, 2612, 2045, 
       2359, 2046, 2664, 1765, 2047, 2361, 2048, 2665, 1766, 2049, 2363, 2050,
        2666, 1767, 2051, 2365, 2052, 2667, 1768, 1285, 2367, 2053, 1769, 
       2613, 2054, 2369, 2055, 1770, 2614, 2056, 2371, 2057, 1771, 2615, 2058,
        2373, 2059, 1772}], 
      Line3DBox[{1774, 2060, 2374, 2061, 2668, 1773, 2062, 2375, 2063, 2669, 
       1775, 2064, 2376, 2563, 2494, 1776, 2495, 2710, 2377, 2065, 1777, 1298,
        2378, 2066, 1778, 2616, 2067, 2379, 2068, 1779, 2617, 2069, 2380, 
       2070, 2670, 1780, 2071, 2381, 2072, 2671, 1781, 2073, 2382, 2074, 2672,
        1782, 2075, 2383, 2564, 2496, 1783, 2497, 2711, 2384, 2076, 1784, 
       1310, 2385, 2077, 1785, 2618, 2078, 2386, 2079, 1786, 2619, 2080, 2387,
        2081, 1787}], 
      Line3DBox[{1789, 2082, 2388, 2083, 2673, 1788, 2084, 2389, 2565, 2498, 
       1790, 2085, 2390, 2566, 2499, 1791, 2500, 2712, 2391, 2086, 1792, 2501,
        2713, 2392, 2087, 1793, 1323, 2393, 2088, 1794, 2620, 2089, 2394, 
       2090, 2674, 1795, 2091, 2395, 2092, 2675, 1796, 2093, 2396, 2567, 2502,
        1797, 2094, 2397, 2568, 2503, 1798, 2504, 2714, 2398, 2095, 1799, 
       2505, 2715, 2399, 2096, 1800, 1335, 2400, 2097, 1801, 2621, 2098, 2401,
        2099, 1802}], 
      Line3DBox[{1816, 2114, 2415, 1366, 1815, 2113, 2414, 2722, 2518, 1814, 
       2112, 2413, 2721, 2517, 1813, 2111, 2412, 2720, 2516, 1812, 2515, 2574,
        2411, 2110, 1811, 2514, 2573, 2410, 2109, 1810, 2513, 2572, 2409, 
       2108, 1809, 2676, 2107, 2408, 2719, 2512, 1808, 2106, 2407, 2718, 2511,
        1807, 2105, 2406, 2717, 2510, 1806, 2104, 2405, 2716, 2509, 1805, 
       2508, 2571, 2404, 2103, 1804, 2507, 2570, 2403, 2101, 1803, 2506, 2569,
        2402, 2100, 2102}]}}},
   VertexNormals->CompressedData["
1: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
EhPc3/C6lCrQIQO+Zpfq5oN4zloto5kRYF0UYGtKbAJJDsE8al/xu61X46lg
Dzz90rFmWXoFfFlUs+hE4xj825LwKtYgH+QLxMX1WuLhuPpKf2of4mLBTlts
WIeKJi+aLSVz8Nl7RwlqfyK61qHkyql+3HYqRsSOVYvhK5OFqH1Lzu3FuUJt
Y7jcdpwj41gLrrty/O+y0jbY/83rxW3iNZHd6ekdxGsmwzLU4+/pg3WhM+Pa
+Bje9t/zak65BYNjX3ZR+58MWbm18Xf6cbjaKySFtw6X9Ek9o/ZF53mt5F+u
68KvlzoO7WWU4a9PD45R+yWdXO6y43lZuOfzU96tTuGYki3URe2jUvh/gFlT
AygkFcuUSSGMmNNo1P6K/bfJp5KDA2BYWZ+Yh3UwaymaRe27nLjMzrvdGAfJ
xj1WYzEtcETj9mZqP7aPR1pJ/QUTspcPNDRb00F3e98pX49wWHHEVG3k1hg0
LH1lEUpvhjoTl2Rq/5bYvMRJ2agPhJPSNh9yqQGVAQclal8XP/Cg19+zCthD
IotDIzPhtn/7Nmq/9+Tv+yVQVIyPNpqY7udIwX6BqGPUPvCC62bRTo5e7Nh5
YEFVtgr9LF49oPaHJ+9qmbq8GEXBnOgtyWLNyFfxKozaN7IP1Qjb3mfiPx3M
Pq1FR+Er2QvmCtlw2vRWds3MOAYdSOTQEadhr7ErX2huE36+kNvbbjqIM4Jc
7SVF9bj9Kdyn9p9+YfwbWpxHoGW8rOyLahPYHDy/wqe7F+dMPjxUEGfCgeWd
l9ftosMGneM+L9uL8IbXgRUXTAfg7DrRY8e+10Fy7iJL1qZhfFem9rlPkwm3
4SX/0kt0cJG4GZ7v9g2ttGIl01wZ8Or6p1VvQ2nw6QhP09nSOnjUUJz3U4gB
NQ2cauHKNOiZ8NvWnN0IbDaKfyqyhiDVLn+svKEBStnp+StsBsA4SWHKtnwQ
BA+MC7mvaADmqcwgk5BBSGtt8urzb4XHcTFyBfuLga169YdmOgNCJw/w0dlo
cD/TTdF2VSEkxlqVhNkyYb7zQn5n0iuoKzFSirpgDwYxbedfLbDgy42yF4pF
Qaj/rqMhic0VxY+ruFv/ZcGutQ5bePxoeEZMx1jRvRA9DnZondBgAm/BxYBe
sTYcCGpi9sQV4+klVRNhKQwoWvxPIfbfIEqkNUUbyTagXvw9rNUehJ2PvrKv
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
N5B3Kw9XrjjGN3iBhb0PB4oeh74ErfyvmaFqTuC6rKqa1JcbBLS4RH73w0n5
sOP2Lg3AFnQ8RurUipJXF+9xZMF80bbyamL9SJh7BXBnxuOR5CUS+p8H4ePL
csMmJg1eZTeteOBGg920M+/raV3A43T2vat6DWR+DxCp+NoDyssvXze3rYdH
qwMM60eywfyX2ypSZ2dNN5kvao3HxY5/chSCgnFm2P4RqctL8d6qTPH9jsI3
r8pujy3Cu+9Vt5M6/rXIpN6u3F58d8VKZG9cHYocuPmM1P3L0womCphMtPTT
Sj46TkcOjV3x2valsDV9hHOWwURh97QCZjcdVyTs/0v2FcgnrM0Sf9aLfglF
rjzOdahTOtRI9iF0qciVmY004+PVOSUD64tQn//tXrJvQeNY6Va9kRgUOZq+
gaPKHy+0PRcj+x+KNlxeUfalDwJDeCaP2tRD4l/mJrKP4lr90lVOSizIS494
sFOBAXvurErf452HFxp4WBzWTDg+33bWwocOTy7dCiD7NGatm371PuoBlt5p
fruoWriyKSOV7Oto2PaGWc3XCHEvd5emYD6cj1vvQvaBvH/Nv1GRywnoueeb
Vj4yBcf9w/+nb2SfpN/fdgkGDk1tls/5k4fdT1p6yD4Tz0u0QantPRiQWCQn
aFyLpWy9/WRfSr/HAh9xXSZuainP/GZNx1uXLwiRfSwVHnO+cmix0Jlm6e2h
zkDZjD+7fMwI/tE5e/3EeB8mx3MbD8bUI1uHR1BvXTue3331Q6lIGx79uqt6
89dSPKY4aUn21VQbr3P1MszB82KjW8eLP2PRZofFZH9OIsXrX1K8ft1/0Td3
/Bd905fSN5dQ+mYBpW9OUPrmU0rfvEjpm+OUvvmU0jdnX/5H32yk9E0OjjVn
/8PTf/8PHzoNio/7/sPHkynefZXi3Wr/6J77Kd1T4L/onj8p3TOR0j3TKd3z
C6V7XqN0z0+U7nmT0j39ns1T2ufcDBOhkYdlSwph/2r/ZrJfzv8meMoY94JB
xgXHnIt14G+QKU321xlV0T8kljKhKO6t34omOvy2y2tgL6lARprtUM4kE/52
66oIcjJg0PqDTuL1Etgn5DZU2tcLF8u7TcIq6yDs0wodst/v8OeMrcFzf0Cl
nkV0F28xhIrRRcn+wN/x18T6fyQQdeg2Q9v2LRy+Wn+G7Cc8NJR+fsFsHS4L
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
    "]],
  AspectRatio->Full,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{367.7801966483334, 432.02240702985443`},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->NCache[{{
      Rational[-2, 3], 
      Rational[2, 3]}, {
      Rational[-2, 3], 
      Rational[2, 3]}, {
      Rational[-2, 3], 
      Rational[2, 3]}}, {{-0.6666666666666666, 
    0.6666666666666666}, {-0.6666666666666666, 
    0.6666666666666666}, {-0.6666666666666666, 0.6666666666666666}}],
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4671464837423123`, -2.382743087715613, 1.9026341143756555`},
  ViewVertical->{0.03673514031620953, -0.018925779278803026`, 
   0.9991458073497773}]], "Output",
 CellChangeTimes->{
  3.7773987629272795`*^9, {3.777398813230212*^9, 3.7773988801638355`*^9}, {
   3.777398959882338*^9, 3.77739901441986*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"0857234d-e70b-46f2-bc40-283e424eec97"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"II: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"7.213\"\>",
          7.2125257170087265`,
          AutoDelete->True], 
         InterpretationBox["\<\"-1.616\"\>",
          -1.6160525621134025`,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-1.616\"\>",
          -1.6160526543688645`,
          AutoDelete->True], 
         InterpretationBox["\<\"0.3621\"\>",
          0.36209590579956974`,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 4]& ], 
   "\[InvisibleSpace]", "\<\"    \[CapitalLambda]tri: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"6.4\"\>",
          6.4265148299172115`,
          AutoDelete->True], 
         InterpretationBox["\<\"-1.\"\>",
          -1.0042297051209101`,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-1.\"\>",
          -1.0042297051209101`,
          AutoDelete->True], 
         InterpretationBox["\<\"-0.33\"\>",
          -0.3338773788921264,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ]}],
  SequenceForm["II: ", 
   NumberForm[
    MatrixForm[{{
     7.2125257170087265`, -1.6160525621134025`}, {-1.6160526543688645`, 
     0.36209590579956974`}}], 4], "    \[CapitalLambda]tri: ", 
   NumberForm[
    MatrixForm[{{
     6.4265148299172115`, -1.0042297051209101`}, {-1.0042297051209101`, \
-0.3338773788921264}}], 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7773987646857324`*^9, {3.7773988133281813`*^9, 3.777398874876523*^9}, {
   3.7773989512500954`*^9, 3.7773990144258575`*^9}},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"f3e008d7-e118-4a1c-a564-7cae5f973818"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n,u n,v: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          InterpretationBox["\<\"-5.5\"\>",
           -5.548096705391329,
           AutoDelete->True], 
          InterpretationBox["\<\"1.2\"\>",
           1.2431174264375882`,
           AutoDelete->True]},
         {
          InterpretationBox["\<\"-2.3\"\>",
           -2.2980969007305725`,
           AutoDelete->True], 
          InterpretationBox["\<\"0.51\"\>",
           0.5149160976527873,
           AutoDelete->True]},
         {
          InterpretationBox["\<\"0.\"\>",
           0.,
           AutoDelete->True], 
          InterpretationBox["\<\"0.\"\>",
           0.,
           AutoDelete->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     NumberForm[#, 2]& ],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["n,u n,v: ", 
   MatrixForm[
    NumberForm[
     MatrixForm[{{-5.548096705391329, 
      1.2431174264375882`}, {-2.2980969007305725`, 0.5149160976527873}, {0., 
      0.}}], 2]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7773987646857324`*^9, {3.7773988133281813`*^9, 3.777398874876523*^9}, {
   3.7773989512500954`*^9, 3.7773990144298563`*^9}},
 CellLabel->
  "During evaluation of \
In[88]:=",ExpressionUUID->"c3f85439-8d04-43d0-aa01-f1555d04292d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"F0", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "2"}], ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], " ", ".", "L0", ".", 
   RowBox[{"Inverse", "[", "A", "]"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "F0", "]"}], ".", "F0"}], "]"}], ".", "L0", 
   ".", 
   RowBox[{"Transpose", "[", "F0", "]"}], ".", "F0"}], "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "F0", "]"}], ".", "F0", ".", "L0", ".", 
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "F0", "]"}], ".", "F0"}], "]"}]}], "//", " ", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.777382643611109*^9, 3.777382669155766*^9}, {
   3.777382707738428*^9, 3.777382766010648*^9}, {3.777397693218979*^9, 
   3.77739769372283*^9}, {3.7773979824627295`*^9, 3.7773980588333364`*^9}, {
   3.7773981220869966`*^9, 3.777398315084543*^9}, {3.777398352107914*^9, 
   3.7773983574161034`*^9}, {3.7773984012997046`*^9, 3.777398535826729*^9}, 
   3.7773986974682055`*^9, {3.7773990448561535`*^9, 3.7773992333489523`*^9}, {
   3.777399274414835*^9, 3.777399327382918*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"dc8d9b64-b260-4fdc-95fe-eb1033c4e35d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6.426514829917212`", "3.315995131597554`"},
     {
      RowBox[{"-", "3.882248519473733`"}], 
      RowBox[{"-", "2.493989797251359`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.777399068056728*^9, 3.7773991696812696`*^9}, 
   3.777399200759343*^9, 3.7773992341856713`*^9, {3.777399282983091*^9, 
   3.7773993279647245`*^9}},
 CellLabel->
  "Out[137]//MatrixForm=",ExpressionUUID->"d4a89a4a-2939-481d-a4fa-\
75534b05030b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9.888409859279758`", 
      RowBox[{"-", "5.807865115686101`"}]},
     {"5.919560353604181`", 
      RowBox[{"-", "3.795772408254672`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.777399068056728*^9, 3.7773991696812696`*^9}, 
   3.777399200759343*^9, 3.7773992341856713`*^9, {3.777399282983091*^9, 
   3.7773993279707127`*^9}},
 CellLabel->
  "Out[138]//MatrixForm=",ExpressionUUID->"f9ff31cc-8511-4992-84eb-\
1b7ae95e36d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9.888409859279756`", "5.919560353604179`"},
     {
      RowBox[{"-", "5.8078651156861`"}], 
      RowBox[{"-", "3.7957724082546713`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.777399068056728*^9, 3.7773991696812696`*^9}, 
   3.777399200759343*^9, 3.7773992341856713`*^9, {3.777399282983091*^9, 
   3.7773993279747114`*^9}},
 CellLabel->
  "Out[139]//MatrixForm=",ExpressionUUID->"702fda78-932b-4a3b-a6b7-\
1aeb2e01090e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"-", " ", "OLD"}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"COPIES", " ", "--"}], "--"}], "--"}], "--"}], 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", "-"}]}]}]}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7773976994120007`*^9, 
  3.777397718939777*^9}},ExpressionUUID->"288bc807-25c3-45a6-92e4-\
4b4c964d2239"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Angle", "[", 
     RowBox[{"u_", ",", "v_", ",", " ", "n_"}], "]"}], ":=", " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"u", ".", "v"}], ",", 
      RowBox[{"n", ".", " ", 
       RowBox[{"Cross", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", " ", "that", " ", "mathematica", " ", "arctan", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "vs", " ", "cpp", " ", "atan2", 
     RowBox[{"(", 
      RowBox[{"y", ",", "x"}], ")"}]}], ",", " ", 
    RowBox[{"assume", " ", "normalized", " ", "u", " ", "v", " ", "n"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x_", "\[CircleTimes]", "y_"}], ":=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", "x", ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaOLD", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dx", ",", "A", ",", "tx", ",", "ty", ",", " ", "\[Theta]R", ",", " ", 
       "\[Theta]L", ",", " ", "\[Theta]T", ",", "\[Theta]B", ",", 
       "\[CapitalLambda]"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Theta]0", " ", "=", 
        RowBox[{"-", 
         RowBox[{"Angle", "[", 
          RowBox[{"n", ",", "n0", ",", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"x1", "-", " ", "x0"}], "]"}]}], "]"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalLambda]", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]0", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest0", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l0"}], ")"}]}], 
          RowBox[{"tot", "[", "\"\<t0\>\"", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]1", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest1", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l1"}], ")"}]}], " ", 
          RowBox[{"tot", "[", "\"\<t1\>\"", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]2", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest2", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l2"}], ")"}]}], " ", 
          RowBox[{"tot", "[", "\"\<t2\>\"", "]"}]}]}]}], ";"}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       SuperscriptBox["dx", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ty", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "dx"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]R", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"u", "+", "dx"}], ",", "v"}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]T", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{"u", ",", 
            RowBox[{"v", "+", "dx"}]}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]L", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"u", "-", "dx"}], ",", "v"}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]B", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{"u", ",", 
            RowBox[{"v", "-", "dx"}]}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]R", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"tx", "\[CircleTimes]", "tx"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]T", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"ty", "\[CircleTimes]", "ty"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]L", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "tx"}], "\[CircleTimes]", 
           RowBox[{"-", "tx"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]B", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "ty"}], "\[CircleTimes]", 
           RowBox[{"-", "ty"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[CapitalLambda]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambda", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}], ",", 
     RowBox[{"off_:", "0"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "dx", ",", "P", ",", " ", "s", ",", "A", ",", "X0", 
       ",", "X1", ",", "XM", ",", "Ti", ",", "Ei", ",", "n0", ",", "ni", ",", 
       "ei", ",", "\[Theta]i", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}]},
            {
             RowBox[{"1", "/", "2"}], 
             RowBox[{"1", "/", "2"}]},
            {
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], 
             RowBox[{"1", "/", "2"}]},
            {
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}]}
           }], "\[NoBreak]", ")"}], ".", 
         RowBox[{"RotationMatrix", "[", "off", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       SuperscriptBox["s", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "4"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "4"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                RowBox[{"-", 
                 RowBox[{"Ei", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], " ", "*", " ", 
              "0.9"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"XM", " ", "=", " ", 
             FractionBox[
              RowBox[{"X0", "+", "X1"}], "2"]}], ";", "\[IndentingNewLine]", 
            RowBox[{"n0", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{"XM", " ", "-", " ", 
                RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{"XM", " ", "+", " ", 
                RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "@@", "X1"}], ")"}], " ", "-", " ", 
              RowBox[{"(", 
               RowBox[{"x", " ", "@@", "X0"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}], "  ", 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaCool", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dx", ",", "num", ",", "da", ",", " ", "daoff", ",", "R", ",", " ", "b",
        ",", "A", ",", "ti", ",", " ", "uvin", ",", " ", "uvout", ",", " ", 
       "ni", ",", " ", "nj", ",", "Ei", ",", "uv0", ",", "uv1", ",", "ei", 
       ",", " ", "\[Theta]", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ref", ".", "space"}], " ", "circley", " ", "ngon"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.001"}], ";", " ", 
      RowBox[{"R", " ", "=", " ", 
       FractionBox["dx", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"num", "=", " ", "4"}], ";", " ", 
      RowBox[{"da", "=", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", " ", "/", " ", "num"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"daoff", " ", "=", " ", 
       RowBox[{"da", "/", "3"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", 
       RowBox[{"dx", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["da", "2"], "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"opp", " ", "side", " ", "len"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", 
       RowBox[{"num", " ", "*", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], 
          SuperscriptBox["R", "2"], 
          RowBox[{"Sin", "[", "da", "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"i", "<", "num"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ti", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"i", " ", "da"}], " ", "+", "daoff"}], "]"}], ",", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"uvin", " ", "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"R", "-", 
              RowBox[{"b", "/", "2"}]}], ")"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], 
             "}"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"uvout", "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"R", "+", 
              RowBox[{"b", "/", "2"}]}], ")"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], 
             "}"}]}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ni", " ", "=", " ", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"uvin", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"uvin", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nj", " ", "=", " ", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"uvout", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"uvout", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Ei", " ", "=", " ", 
          RowBox[{"b", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"ti", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"ti", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"uv0", " ", "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
           RowBox[{"R", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], 
           " ", "-", " ", 
           RowBox[{"Ei", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"uv1", "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
           RowBox[{"R", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], 
           "+", 
           RowBox[{"Ei", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ei", " ", "=", " ", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{
             RowBox[{"uv1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"uv1", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{
             RowBox[{"uv0", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"uv0", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Theta]", "=", " ", 
          RowBox[{"-", 
           RowBox[{"Angle", "[", 
            RowBox[{"ni", ",", "nj", ",", 
             RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[CapitalLambda]", " ", "=", 
          RowBox[{"\[CapitalLambda]", " ", "+", " ", 
           RowBox[{
            RowBox[{"\[Theta]", "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", "A"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"ti", "\[CircleTimes]", "ti"}], ")"}], " ", "b"}]}]}], 
         "  ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[CapitalLambda]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaTri", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "dx", ",", "P", ",", " ", "s", ",", "A", ",", "X0", 
       ",", "X1", ",", "XM", ",", "Ti", ",", "Ei", ",", "n0", ",", "ni", ",", 
       "ei", ",", "\[Theta]i", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{"Cos", "[", "0", "]"}], 
            RowBox[{"Sin", "[", "0", "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}]}
          }], "\[NoBreak]", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], "4"], 
        SuperscriptBox["s", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "3"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "3"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "3"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Ei", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"-", 
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"XM", " ", "=", " ", 
             FractionBox[
              RowBox[{"X0", "+", "X1"}], "2"]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"n0", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "-", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ni", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "+", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"n0", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], " ", "+", " ", "Ti"}], 
               ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "@@", "X1"}], ")"}], " ", "-", " ", 
              RowBox[{"(", 
               RowBox[{"x", " ", "@@", "X0"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}]}]}], 
          "   ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"dx", "/", " ", "s"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7773978395427303`*^9, 
  3.777397839806639*^9}},ExpressionUUID->"360a4b16-3b73-4628-b6b4-\
4d03a2bc951a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"sx", 
        RowBox[{"sa", " ", "sy"}]},
       {"0", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
       {"0", "0"}
      }], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
      RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "\[Rule]", " ", "0.8"}], ",", " ", 
     RowBox[{"sa", "\[Rule]", " ", "0.3"}], ",", " ", 
     RowBox[{"sy", "\[Rule]", " ", "1.5"}]}], "}"}], "*)"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.0"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.0"}]}], "}"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", 
        RowBox[{"-", "0.05"}]}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
      RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
      RowBox[{"c", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", " ", "=", " ", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"II", " ", "=", " ", 
    RowBox[{"2", " ", "Q"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", "0"}], 
    ",", 
    RowBox[{"v", "=", 
     RowBox[{
      RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], ",", 
    " ", 
    RowBox[{"x_uv", " ", "=", " ", 
     RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"sx", 
        RowBox[{"sa", " ", "sy"}]},
       {"0", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
       {"0", "0"}
      }], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}], "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
      RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
      RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
      RowBox[{"c", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
     RowBox[{"b", "\[Rule]", " ", 
      RowBox[{"-", "0.05"}]}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.2"}]}], "}"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{"phi", ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"II", " ", "=", " ", 
   RowBox[{"2", " ", "Q"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", "0"}], 
    ",", 
    RowBox[{"v", "=", 
     RowBox[{
      RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], ",", 
    " ", 
    RowBox[{"x_uv", " ", "=", " ", 
     RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Lam", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "//", " ", "MatrixForm"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpx", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "phi"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpn", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "n"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", " ", "=", 
   RowBox[{
    RowBox[{"ApproxLambdaTri", "[", 
     RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
      RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NN", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
       "}"}], "\[Element]", "Reals"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\[CapitalLambda]tri: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
   "\"\<   II: \>\"", ",", 
   RowBox[{"II", " ", "//", " ", "MatrixForm"}], ",", " ", 
   "\"\<   \[CapitalLambda]: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ApproxLambda", "[", 
        RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
         RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], " ", "//", " ", 
      "MatrixForm"}], ",", "2"}], "]"}]}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<n,u n,v: \>\"", ",", 
   RowBox[{
    RowBox[{"NN", " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], " ", "//", " ", 
    "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"sx", 
        RowBox[{"sa", " ", "sy"}]},
       {"0", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
       {"0", "0"}
      }], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}], "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
      RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
      RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
      RowBox[{"c", "\[Rule]", " ", "0.0"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
     RowBox[{"b", "\[Rule]", " ", 
      RowBox[{"-", "0.05"}]}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.2"}]}], "}"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{"phi", ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"II", " ", "=", " ", 
   RowBox[{"2", " ", "Q"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", "0"}], 
    ",", 
    RowBox[{"v", "=", 
     RowBox[{
      RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], ",", 
    " ", 
    RowBox[{"x_uv", " ", "=", " ", 
     RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Lam", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "//", " ", "MatrixForm"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpx", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "phi"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpn", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "n"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", " ", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ApproxLambda", "[", 
       RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
       "}"}], "\[Element]", "Reals"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NN", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
       "}"}], "\[Element]", "Reals"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\[CapitalLambda]: \>\"", ",", 
   RowBox[{"L0", " ", "//", " ", "MatrixForm"}], ",", " ", "\"\<   II: \>\"", 
   ",", 
   RowBox[{"II", " ", "//", " ", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\[CapitalLambda]cool: \>\"", ",", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ApproxLambdaCool", "[", 
        RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
         RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
        "}"}], "\[Element]", "Reals"}]}], "]"}], " ", "//", " ", 
    "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<n,u n,v: \>\"", ",", 
   RowBox[{
    RowBox[{"NN", " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], " ", "//", " ", 
    "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.777397817896162*^9, 3.777397818347026*^9}, {
  3.7773978554256573`*^9, 
  3.777397855590612*^9}},ExpressionUUID->"3d6bbf2f-da90-44de-b1f1-\
021dcca09c18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"TESTING", " ", "ON", " ", "MY", " ", "CYLINDER"}], ",", " ", 
    RowBox[{"GET", " ", "II", " ", "AND", " ", 
     RowBox[{"dN", " ", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], "=", 
     RowBox[{"MakeCyl", "[", 
      RowBox[{"1.3", ",", 
       RowBox[{"-", "0.5"}], ",", "1", ",", "5", ",", 
       RowBox[{"Pi", "/", "8"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F0", " ", "=", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"u", ",", "v"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"u", ",", "v"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"n0", " ", "=", " ", 
    RowBox[{"n", "[", 
     RowBox[{
      RowBox[{"1", "/", "1000"}], ",", 
      RowBox[{"1", "/", "1000"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"n0", " ", "=", " ", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
        RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"duv", " ", "=", " ", "0.0001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dN0", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "[", 
             RowBox[{"duv", ",", "v"}], "]"}], "-", 
            RowBox[{"n", "[", 
             RowBox[{
              RowBox[{"-", "duv"}], ",", "v"}], "]"}]}], ",", 
           RowBox[{"v", "\[Rule]", " ", "0"}]}], "]"}], 
         RowBox[{"2", "duv"}]], ",", 
        FractionBox[
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "[", 
             RowBox[{"u", ",", "duv"}], "]"}], "-", 
            RowBox[{"n", "[", 
             RowBox[{"u", ",", 
              RowBox[{"-", "duv"}]}], "]"}]}], ",", 
           RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], 
         RowBox[{"2", "duv"}]]}], "}"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "could", " ", "also", " ", "speed", " ", "up", " ", "by", " ", "doing", 
      " ", "eps", " ", "instead", " ", "of", " ", "limit"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"dN0", " ", "=", " ", 
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{
             RowBox[{"n", "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
           RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
         RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";", "  ", "SLOW"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"II0", " ", "=", " ", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"Transpose", "[", "dN0", "]"}], ".", "F0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0", " ", "=", 
     RowBox[{
      RowBox[{"ApproxLambdaTri", "[", 
       RowBox[{"x", ",", "n"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0quad", " ", "=", 
     RowBox[{
      RowBox[{"ApproxLambda", "[", 
       RowBox[{"x", ",", "n", ",", "1"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotL", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{
        RowBox[{"-", "plotL"}], "/", "2"}], ",", 
       RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{
        RowBox[{"-", "plotL"}], "/", "2"}], ",", 
       RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "plotL"}], " ", 
         RowBox[{"2", "/", "3"}]}], ",", 
        RowBox[{"plotL", " ", 
         RowBox[{"2", "/", "3"}]}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<II: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"II0", "//", " ", "MatrixForm"}], ",", "4"}], "]"}], ",", " ", 
     "\"\<    \[CapitalLambda]tri: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
     "\"\<   \[CapitalLambda]quad: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"L0quad", "//", " ", "MatrixForm"}], ",", "2"}], "]"}]}], " ", 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<n,u n,v: \>\"", ",", 
     RowBox[{
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"dN0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], "//", 
      " ", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"II0", "*", "35"}], " ", "//", " ", "MatrixForm"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Inverse", "[", 
         RowBox[{"F0", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "2"}], ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"II0", "*", "35"}], ")"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{"F0", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], " ", "//", 
      "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ES", " ", "=", " ", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Inverse", "[", 
         RowBox[{"F0", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "2"}], ",", 
            RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"II0", "*", "35"}], ")"}], ".", 
       RowBox[{"Inverse", "[", 
        RowBox[{"F0", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ES", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}], ",", " ", 
     RowBox[{
      RowBox[{"180", "/", "Pi"}], " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"ES", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", " ", "1", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"ES", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", " ", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", " ", "=", " ", 
     RowBox[{"F0", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "2"}], ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"A0i", " ", "=", " ", 
     RowBox[{"Inverse", "[", "A0", "]"}]}], ";", " ", 
    RowBox[{"A0T", " ", "=", 
     RowBox[{"Transpose", "[", "A0", "]"}]}], ";", " ", 
    RowBox[{"A0iT", " ", "=", 
     RowBox[{"Transpose", "[", "A0i", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TMP", " ", "=", " ", 
     RowBox[{"L0", ".", "S", ".", 
      RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TMP", " ", "=", " ", 
     RowBox[{"S", ".", "L0", ".", 
      RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TMP", " ", "=", " ", 
     RowBox[{"S", ".", "L0", ".", 
      RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TMP", " ", "=", " ", 
     RowBox[{"A0i", ".", "A0iT", ".", "L0", ".", "A0iT", ".", "A0i"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], " ", "=", 
     RowBox[{"Eigenvalues", "[", "TMP", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rad", " ", "=", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Eigenvectors", "[", "TMP", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Eigenvectors", "[", "TMP", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2"}], "}"}], " ", "=", 
     RowBox[{"Eigenvalues", "[", "II0", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a2", ",", "b2"}], "}"}], "\n", 
   RowBox[{
    RowBox[{"rad2", " ", "=", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Eigenvectors", "[", "II0", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Eigenvectors", "[", "II0", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "b"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "b"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"-", "rad"}]}], "]"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{"a2", ",", "b2"}], "}"}]}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "a2"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "b2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "b2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"-", "rad2"}]}], "]"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}]}]], "Input",ExpressionUUID->"fc6807d3-d74d-4583-a8b6-\
36dd64b94523"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", " ", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", "0", "]"}], 
        RowBox[{"Sin", "[", "0", "]"}]},
       {
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], "Pi"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["2", "3"], "Pi"}], "]"}]},
       {
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["4", "3"], "Pi"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["4", "3"], "Pi"}], "]"}]},
       {
        RowBox[{"2", 
         RowBox[{"Cos", "[", 
          FractionBox["Pi", "3"], "]"}]}], 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          FractionBox["Pi", "3"], "]"}]}]},
       {
        RowBox[{"2", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"3", "Pi"}], "3"], "]"}]}], 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"3", "Pi"}], "3"], "]"}]}]},
       {
        RowBox[{"2", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"5", "Pi"}], "3"], "]"}]}], 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"5", "Pi"}], "3"], "]"}]}]}
      }], "\[NoBreak]", ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Transparent", ",", 
    RowBox[{"Triangle", "[", 
     RowBox[{"P", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"Triangle", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Triangle", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Triangle", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"P", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
  "]"}]}], "Input",ExpressionUUID->"7a469471-319d-4217-8e80-a966be26d1dc"]
},
WindowSize->{1536, 791},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 353, 5, 28, "Input",ExpressionUUID->"bff7917f-2396-4bc2-8ea3-049129c17f4b"],
Cell[914, 27, 13723, 357, 1123, "Input",ExpressionUUID->"26d244b1-cb62-4bbd-9ec8-450d951a784c"],
Cell[CellGroupData[{
Cell[14662, 388, 8255, 242, 400, "Input",ExpressionUUID->"21abb9e5-e47c-417b-86f3-391b891a4603"],
Cell[22920, 632, 407, 9, 32, "Output",ExpressionUUID->"1cac9076-1180-4927-a5a7-cb3d636e7f85"],
Cell[23330, 643, 182663, 2976, 482, "Output",ExpressionUUID->"0857234d-e70b-46f2-bc40-283e424eec97"],
Cell[CellGroupData[{
Cell[206018, 3623, 2883, 82, 35, "Print",ExpressionUUID->"f3e008d7-e118-4a1c-a564-7cae5f973818"],
Cell[208904, 3707, 1896, 56, 50, "Print",ExpressionUUID->"c3f85439-8d04-43d0-aa01-f1555d04292d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210849, 3769, 1489, 37, 86, "Input",ExpressionUUID->"dc8d9b64-b260-4fdc-95fe-eb1033c4e35d"],
Cell[212341, 3808, 964, 25, 62, "Output",ExpressionUUID->"d4a89a4a-2939-481d-a4fa-75534b05030b"],
Cell[213308, 3835, 964, 25, 62, "Output",ExpressionUUID->"f9ff31cc-8511-4992-84eb-1b7ae95e36d3"],
Cell[214275, 3862, 963, 25, 62, "Output",ExpressionUUID->"702fda78-932b-4a3b-a6b7-1aeb2e01090e"]
}, Open  ]],
Cell[215253, 3890, 786, 28, 28, "Input",ExpressionUUID->"288bc807-25c3-45a6-92e4-4b4c964d2239"],
Cell[216042, 3920, 27708, 723, 2124, "Input",ExpressionUUID->"360a4b16-3b73-4628-b6b4-4d03a2bc951a"],
Cell[243753, 4645, 17965, 551, 909, "Input",ExpressionUUID->"3d6bbf2f-da90-44de-b1f1-021dcca09c18"],
Cell[261721, 5198, 14133, 407, 666, "Input",ExpressionUUID->"fc6807d3-d74d-4583-a8b6-36dd64b94523"],
Cell[275857, 5607, 2604, 83, 207, "Input",ExpressionUUID->"7a469471-319d-4217-8e80-a966be26d1dc"]
}
]
*)

