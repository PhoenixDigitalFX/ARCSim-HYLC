(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    382723,       7970]
NotebookOptionsPosition[    375221,       7790]
NotebookOutlinePosition[    375557,       7805]
CellTagsIndexPosition[    375514,       7802]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{"Quit", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaOLD", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dx", ",", "A", ",", "tx", ",", "ty", ",", " ", "\[Theta]R", ",", " ", 
       "\[Theta]L", ",", " ", "\[Theta]T", ",", "\[Theta]B", ",", 
       "\[CapitalLambda]"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Theta]0", " ", "=", 
        RowBox[{"-", 
         RowBox[{"Angle", "[", 
          RowBox[{"n", ",", "n0", ",", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"x1", "-", " ", "x0"}], "]"}]}], "]"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalLambda]", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]0", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest0", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l0"}], ")"}]}], 
          RowBox[{"tot", "[", "\"\<t0\>\"", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]1", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest1", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l1"}], ")"}]}], " ", 
          RowBox[{"tot", "[", "\"\<t1\>\"", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", "\[Theta]2", "]"}], "-", 
             RowBox[{"phi", "[", "thetarest2", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "A", " ", "l2"}], ")"}]}], " ", 
          RowBox[{"tot", "[", "\"\<t2\>\"", "]"}]}]}]}], ";"}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       SuperscriptBox["dx", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ty", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "dx"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]R", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"u", "+", "dx"}], ",", "v"}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]T", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{"u", ",", 
            RowBox[{"v", "+", "dx"}]}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]L", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{
            RowBox[{"u", "-", "dx"}], ",", "v"}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "+", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Theta]B", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Angle", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"n", "[", 
           RowBox[{"u", ",", 
            RowBox[{"v", "-", "dx"}]}], "]"}], ",", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "+", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}], "-", 
            RowBox[{"x", "[", 
             RowBox[{
              RowBox[{"u", "-", 
               RowBox[{"dx", "/", "2"}]}], ",", 
              RowBox[{"v", "-", 
               RowBox[{"dx", "/", "2"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]R", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"tx", "\[CircleTimes]", "tx"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]T", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"ty", "\[CircleTimes]", "ty"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]L", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "tx"}], "\[CircleTimes]", 
           RowBox[{"-", "tx"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Theta]B", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "A", " ", "dx"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "ty"}], "\[CircleTimes]", 
           RowBox[{"-", "ty"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[CapitalLambda]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.777347742884466*^9, 3.777347744556012*^9}, {
  3.777362942060321*^9, 3.7773629424210453`*^9}, {3.7773775575471087`*^9, 
  3.777377570140028*^9}},ExpressionUUID->"bff7917f-2396-4bc2-8ea3-\
049129c17f4b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Angle", "[", 
    RowBox[{"u_", ",", "v_", ",", " ", "n_"}], "]"}], ":=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"u", ".", "v"}], ",", 
     RowBox[{"n", ".", " ", 
      RowBox[{"Cross", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", " ", "that", " ", "mathematica", " ", "arctan", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "vs", " ", "cpp", " ", "atan2", 
     RowBox[{"(", 
      RowBox[{"y", ",", "x"}], ")"}]}], ",", " ", 
    RowBox[{"assume", " ", "normalized", " ", "u", " ", "v", " ", "n"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x_", "\[CircleTimes]", "y_"}], ":=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", "x", ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambda", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}], ",", 
     RowBox[{"off_:", "0"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "dx", ",", "P", ",", " ", "s", ",", "A", ",", "X0", 
       ",", "X1", ",", "XM", ",", "Ti", ",", "Ei", ",", "n0", ",", "ni", ",", 
       "ei", ",", "\[Theta]i", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.01"}], ";", "\[IndentingNewLine]", 
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}]},
            {
             RowBox[{"1", "/", "2"}], 
             RowBox[{"1", "/", "2"}]},
            {
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], 
             RowBox[{"1", "/", "2"}]},
            {
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}]}
           }], "\[NoBreak]", ")"}], ".", 
         RowBox[{"RotationMatrix", "[", "off", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       SuperscriptBox["s", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "4"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "4"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                RowBox[{"-", 
                 RowBox[{"Ei", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], " ", "*", " ", 
              "0.9"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"XM", " ", "=", " ", 
             FractionBox[
              RowBox[{"X0", "+", "X1"}], "2"]}], ";", "\[IndentingNewLine]", 
            RowBox[{"n0", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{"XM", " ", "-", " ", 
                RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{"XM", " ", "+", " ", 
                RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "@@", "X1"}], ")"}], " ", "-", " ", 
              RowBox[{"(", 
               RowBox[{"x", " ", "@@", "X0"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}], "  ", 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7773624258980007`*^9, 3.777362426496764*^9}, {
  3.77736281707439*^9, 3.777362902827732*^9}, {3.7773629399740047`*^9, 
  3.77736294803118*^9}, {3.777362989440084*^9, 3.777363042797249*^9}, {
  3.7773634806967573`*^9, 3.7773634948401012`*^9}, {3.777374825235302*^9, 
  3.7773748509701242`*^9}, {3.777377420859641*^9, 
  3.777377431914383*^9}},ExpressionUUID->"f5069b01-694a-4861-89b5-\
11000104d577"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"sx", 
        RowBox[{"sa", " ", "sy"}]},
       {"0", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
       {"0", "0"}
      }], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
      RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sx", "\[Rule]", " ", "0.8"}], ",", " ", 
     RowBox[{"sa", "\[Rule]", " ", "0.3"}], ",", " ", 
     RowBox[{"sy", "\[Rule]", " ", "1.5"}]}], "}"}], "*)"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.0"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.0"}]}], "}"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", 
        RowBox[{"-", "0.05"}]}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
      RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
      RowBox[{"c", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", " ", "=", " ", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"II", " ", "=", " ", 
   RowBox[{"2", " ", "Q"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", "0"}], 
    ",", 
    RowBox[{"v", "=", 
     RowBox[{
      RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], ",", 
    " ", 
    RowBox[{"x_uv", " ", "=", " ", 
     RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Lam", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
     RowBox[{"F", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "//", " ", "MatrixForm"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpx", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "phi"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmpn", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "n"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", " ", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ApproxLambda", "[", 
       RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
       "}"}], "\[Element]", "Reals"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N0", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NN", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
       "}"}], "\[Element]", "Reals"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\[CapitalLambda]: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
   "\"\<   II: \>\"", ",", 
   RowBox[{"II", " ", "//", " ", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<n,u n,v: \>\"", ",", 
   RowBox[{
    RowBox[{"NN", " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], " ", "//", " ", 
    "MatrixForm"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.777279339396179*^9, 3.777279359900577*^9}, {
   3.777279405316272*^9, 3.777279473315688*^9}, {3.777279528098678*^9, 
   3.77727966667271*^9}, {3.777279732577499*^9, 3.7772798007089367`*^9}, {
   3.7772799320246553`*^9, 3.777280013188716*^9}, {3.777280054165427*^9, 
   3.777280099797677*^9}, {3.777280142819685*^9, 3.7772802885860167`*^9}, {
   3.7772803595930777`*^9, 3.777280375792728*^9}, {3.7772809269966173`*^9, 
   3.7772810026574917`*^9}, {3.777281643282772*^9, 3.777281724786928*^9}, {
   3.777281803034849*^9, 3.777281812226036*^9}, {3.777281845495867*^9, 
   3.777281847717857*^9}, {3.77728193313398*^9, 3.777281970946805*^9}, {
   3.777282030501708*^9, 3.777282266242338*^9}, {3.777282398229268*^9, 
   3.777282410707304*^9}, {3.777346829384296*^9, 3.7773468642228947`*^9}, {
   3.777346970974914*^9, 3.777347046751177*^9}, {3.777347104558144*^9, 
   3.777347193719716*^9}, {3.777347227524209*^9, 3.7773473223267307`*^9}, {
   3.777347353132992*^9, 3.777347361146256*^9}, {3.77734740159133*^9, 
   3.7773475049590397`*^9}, {3.777347572948586*^9, 3.777347573841235*^9}, {
   3.777347617440812*^9, 3.7773477122114573`*^9}, {3.777347780715424*^9, 
   3.7773477829435043`*^9}, {3.777347839145138*^9, 3.777348012789049*^9}, {
   3.77734805567693*^9, 3.7773481156500883`*^9}, {3.777351576127139*^9, 
   3.777351576347165*^9}, {3.7773516108693113`*^9, 3.777351611866309*^9}, {
   3.777351920314918*^9, 3.7773519205828743`*^9}, {3.7773533512300873`*^9, 
   3.777353373307781*^9}, {3.7773534686875677`*^9, 3.777353478154417*^9}, {
   3.777353526580492*^9, 3.777353552853671*^9}, {3.777353590284918*^9, 
   3.7773537626237288`*^9}, {3.777353995247096*^9, 3.777353996052689*^9}, {
   3.777354264156476*^9, 3.777354268113345*^9}, {3.777355280238744*^9, 
   3.777355280500733*^9}, 3.777362424861066*^9, {3.777362977523308*^9, 
   3.77736298004243*^9}, 3.777363045216008*^9, 
   3.777363466339155*^9},ExpressionUUID->"e00b5b3d-7fb2-4c3d-b0ad-\
0ce869d7d9c1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalLambda]: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"0.36\"\>",
          0.3644975333268353,
          AutoDelete->True], 
         InterpretationBox[
          RowBox[{"\<\"7.8\"\>", "\[Times]", 
           SuperscriptBox["10", "\<\"-18\"\>"]}],
          7.7683827327729*^-18,
          AutoDelete->True]},
        {
         InterpretationBox[
          RowBox[{"\<\"7.8\"\>", "\[Times]", 
           SuperscriptBox["10", "\<\"-18\"\>"]}],
          7.7683827327729*^-18,
          AutoDelete->True], 
         InterpretationBox["\<\"0.45\"\>",
          0.44549558177945964`,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ], "\[InvisibleSpace]", "\<\"   II: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.4`", "0.`"},
       {"0.`", "0.6`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\[CapitalLambda]: ", 
   NumberForm[
    MatrixForm[{{0.3644975333268353, 7.7683827327729*^-18}, {
     7.7683827327729*^-18, 0.44549558177945964`}}], 2], "   II: ", 
   MatrixForm[{{0.4, 0.}, {0., 0.6}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777347108882612*^9, 3.777347161891399*^9}, 
   3.777347194179328*^9, {3.777347230117392*^9, 3.7773473227670517`*^9}, {
   3.777347353874012*^9, 3.77734736147717*^9}, {3.7773474034768133`*^9, 
   3.777347505367927*^9}, 3.777347747704959*^9, 3.777347783474886*^9, 
   3.777347878429866*^9, {3.7773480055778313`*^9, 3.777348116154893*^9}, {
   3.777351558250671*^9, 3.777351576962269*^9}, 3.7773516142180347`*^9, 
   3.777351921297001*^9, {3.777353352027713*^9, 3.77735337413227*^9}, {
   3.777353469195656*^9, 3.777353478591701*^9}, {3.777353527267064*^9, 
   3.777353553229464*^9}, {3.77735359088552*^9, 3.777353641810857*^9}, {
   3.777353672826961*^9, 3.777353763051115*^9}, 3.7773539974686937`*^9, 
   3.777354268845743*^9, 3.7773551512505903`*^9, 3.7773552810882273`*^9, 
   3.7773569162055817`*^9, {3.777362959593183*^9, 3.77736304601547*^9}, {
   3.7773634671375523`*^9, 
   3.777363496929371*^9}},ExpressionUUID->"12c5dc23-5eff-4b8e-bef9-\
1dad7dd03b9e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n,u n,v: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.4`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.6`"}]},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["n,u n,v: ", 
   MatrixForm[{{-0.4, 0.}, {0., -0.6}, {0., 0.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777347108882612*^9, 3.777347161891399*^9}, 
   3.777347194179328*^9, {3.777347230117392*^9, 3.7773473227670517`*^9}, {
   3.777347353874012*^9, 3.77734736147717*^9}, {3.7773474034768133`*^9, 
   3.777347505367927*^9}, 3.777347747704959*^9, 3.777347783474886*^9, 
   3.777347878429866*^9, {3.7773480055778313`*^9, 3.777348116154893*^9}, {
   3.777351558250671*^9, 3.777351576962269*^9}, 3.7773516142180347`*^9, 
   3.777351921297001*^9, {3.777353352027713*^9, 3.77735337413227*^9}, {
   3.777353469195656*^9, 3.777353478591701*^9}, {3.777353527267064*^9, 
   3.777353553229464*^9}, {3.77735359088552*^9, 3.777353641810857*^9}, {
   3.777353672826961*^9, 3.777353763051115*^9}, 3.7773539974686937`*^9, 
   3.777354268845743*^9, 3.7773551512505903`*^9, 3.7773552810882273`*^9, 
   3.7773569162055817`*^9, {3.777362959593183*^9, 3.77736304601547*^9}, {
   3.7773634671375523`*^9, 
   3.7773634969314337`*^9}},ExpressionUUID->"aeacfbe0-0863-410a-bb54-\
f6d1326da29a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.777353025553911*^9, 
  3.7773530641624002`*^9}},ExpressionUUID->"d82291c7-c823-40be-90fe-\
240c5033271c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.3`"},
     {"0", "0.9539392014169457`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.77735306126761*^9},ExpressionUUID->"15e87032-5078-4a7b-b275-ca787f72b9cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"eq", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{"co", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}]}], "]"}], " ", ".", " ", "Lam"}], 
        " ", "\[Equal]", " ", "NN"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", "0"}], ",", 
         RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], " ", ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{"co", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"Solve", "[", "eq", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "//", "MatrixForm"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SA", " ", "=", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "sa"},
         {"0", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            SuperscriptBox["sa", "2"]}], "]"}]}
        }], "\[NoBreak]", ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"sa", "\[Rule]", "0.3"}], "}"}]}]}], ";", " ", 
    RowBox[{"SA", " ", "//", " ", "MatrixForm"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SA2", " ", "=", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "sa", "0"},
         {"0", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            SuperscriptBox["sa", "2"]}], "]"}], "0"},
         {"0", "0", "1"}
        }], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"sa", "\[Rule]", "0.3"}], "}"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Asub", " ", "=", " ", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "2"}], ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"Inverse", "[", "SA", "]"}], ".", "L0", ".", "SA"}]}], "//", 
    " ", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"A", ".", "L0", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
      RowBox[{"Transpose", "[", "A", "]"}]}]}], "//", " ", "MatrixForm"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"this", " ", "is", " ", "actually", " ", 
      RowBox[{"close", ".", " ", "but"}], " ", "its", " ", "missing", " ", 
      "n"}], ",", 
     RowBox[{"2", " ", "xcord", " ", "*", " ", 
      RowBox[{"-", "sa"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"A", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", "L0", 
      ".", 
      RowBox[{"Transpose", "[", "A", "]"}]}]}], "//", " ", "MatrixForm"}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Asub", ".", "L0", ".", 
     RowBox[{"Inverse", "[", "Asub", "]"}]}], "//", " ", "MatrixForm"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.777282335946218*^9, 3.777282375384902*^9}, 
   3.777347638830497*^9, {3.777347735184416*^9, 3.7773477353296547`*^9}, {
   3.77735178572862*^9, 3.7773517934226713`*^9}, {3.777351886934396*^9, 
   3.77735189038955*^9}, {3.7773519767162*^9, 3.777352050139612*^9}, {
   3.777352149635388*^9, 3.777352256064086*^9}, {3.777352312951901*^9, 
   3.777352342351335*^9}, {3.777352383992496*^9, 3.777352410728572*^9}, {
   3.777352460229013*^9, 3.777352678522202*^9}, {3.777352714530593*^9, 
   3.777352755202588*^9}, {3.7773527959463377`*^9, 3.777352832050331*^9}, {
   3.777352863416293*^9, 3.777353010493634*^9}, 3.777353065536125*^9, {
   3.7773531018852587`*^9, 3.777353288484508*^9}, {3.777353955797669*^9, 
   3.77735396926755*^9}, {3.777355169686638*^9, 
   3.7773552391912003`*^9}},ExpressionUUID->"1ae9cbd9-9552-4d16-b456-\
9ecbbf7588d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.3`"},
     {"0", "0.9539392014169457`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7773530661791487`*^9, {3.777353102214191*^9, 3.777353165704191*^9}, {
   3.777353212540811*^9, 3.777353288748497*^9}, 3.777353931997573*^9, 
   3.7773539702698107`*^9, 3.7773540262455597`*^9, {3.7773551539034433`*^9, 
   3.777355240209503*^9}, 
   3.7773552874564466`*^9},ExpressionUUID->"37ea00f3-881a-4d09-ac6f-\
ecf374d6286b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.5241376186010799`"}], 
      RowBox[{"-", "0.03144784242118606`"}]},
     {"0.`", 
      RowBox[{"-", "0.4193114771971263`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7773530661791487`*^9, {3.777353102214191*^9, 3.777353165704191*^9}, {
   3.777353212540811*^9, 3.777353288748497*^9}, 3.777353931997573*^9, 
   3.7773539702698107`*^9, 3.7773540262455597`*^9, {3.7773551539034433`*^9, 
   3.777355240209503*^9}, 
   3.777355287458832*^9},ExpressionUUID->"f634436b-642e-4432-bc04-\
8b1491c2707a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.5241376186010798`"}], "0.03296629635774962`", "0.`"},
     {"2.7755575615628914`*^-17", 
      RowBox[{"-", "0.41931147719712636`"}], "0.`"},
     {"0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7773530661791487`*^9, {3.777353102214191*^9, 3.777353165704191*^9}, {
   3.777353212540811*^9, 3.777353288748497*^9}, 3.777353931997573*^9, 
   3.7773539702698107`*^9, 3.7773540262455597`*^9, {3.7773551539034433`*^9, 
   3.777355240209503*^9}, 
   3.777355287460746*^9},ExpressionUUID->"23e56bb6-9a03-4a86-a46b-\
1d163c72a4ec"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.5241376186010798`"}], "0.`", "0.`"},
     {"0.03296629635774964`", 
      RowBox[{"-", "0.4193114771971264`"}], "0.`"},
     {"0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7773530661791487`*^9, {3.777353102214191*^9, 3.777353165704191*^9}, {
   3.777353212540811*^9, 3.777353288748497*^9}, 3.777353931997573*^9, 
   3.7773539702698107`*^9, 3.7773540262455597`*^9, {3.7773551539034433`*^9, 
   3.777355240209503*^9}, 
   3.77735528746271*^9},ExpressionUUID->"86b34064-a9f9-4cbd-9e89-\
8a14238b99b9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5241376186010799`", 
      RowBox[{"-", "0.03296629635774967`"}]},
     {"0.`", "0.4193114771971263`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7773530661791487`*^9, {3.777353102214191*^9, 3.777353165704191*^9}, {
   3.777353212540811*^9, 3.777353288748497*^9}, 3.777353931997573*^9, 
   3.7773539702698107`*^9, 3.7773540262455597`*^9, {3.7773551539034433`*^9, 
   3.777355240209503*^9}, 
   3.7773552874645576`*^9},ExpressionUUID->"6571933b-a3b0-4cd2-8eb2-\
8bd695527e88"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7773524796280937`*^9, 
  3.7773524806362886`*^9}},ExpressionUUID->"879de49f-95eb-4bab-a64c-\
587425df1840"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "TODO", " ", "now", " ", "try", " ", "and", " ", "compare", " ", "that", 
     " ", "Lambda", " ", "to", " ", "something", " ", "else"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "by"}], " ", "doing", " ", "N"}], " ", 
     "=", " ", 
     RowBox[{"-", 
      RowBox[{"??", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Lambda", ".", " ", "NOTE"}], " ", "that", " ", "dx"}], "=", 
        
        RowBox[{"0.1", " ", "is", " ", "not", " ", "tested"}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Inverse", "[", 
        RowBox[{"A", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", 
           RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
      "L0"}]}], "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"L0", ".", 
      RowBox[{"A", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], " ", "//", " ", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"L0", ".", 
      RowBox[{"Transpose", "[", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"A", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}]}], " ", "//", " ", 
    "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ".", 
      RowBox[{"A", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ".", "L0"}]}], " ", "//", 
    " ", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.777352411554266*^9, 
  3.777352414333403*^9}},ExpressionUUID->"0b8987fd-7646-4365-ac96-\
8d1443e2ff19"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.10482833007774905`"}], "0.`"},
     {"0.032966984663815355`", 
      RowBox[{"-", "0.19535968648783547`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.777351725519889*^9, 3.7773517937597837`*^9, 3.777351896032502*^9, 
   3.777351933122487*^9, {3.7773519816536694`*^9, 3.77735205036777*^9}, {
   3.7773521545151863`*^9, 3.777352246682369*^9}, {3.777352306786311*^9, 
   3.7773523435419073`*^9}, {3.7773523842546673`*^9, 
   3.777352412109469*^9}},ExpressionUUID->"4b1dd17d-efd9-43e0-b11c-\
40dba251a950"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.4193133203109962`"}], 
      RowBox[{"-", "0.09434549706997414`"}]},
     {"0.`", 
      RowBox[{"-", "0.39999895808384317`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.777351725519889*^9, 3.7773517937597837`*^9, 3.777351896032502*^9, 
   3.777351933122487*^9, {3.7773519816536694`*^9, 3.77735205036777*^9}, {
   3.7773521545151863`*^9, 3.777352246682369*^9}, {3.777352306786311*^9, 
   3.7773523435419073`*^9}, {3.7773523842546673`*^9, 
   3.777352412111747*^9}},ExpressionUUID->"cd8ad57c-483c-4831-a312-\
ebe3c7240fd8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.8386266406219924`"}], 
      RowBox[{"-", "0.18869099413994828`"}]},
     {
      RowBox[{"-", "0.2515877054783154`"}], 
      RowBox[{"-", "0.6289692636957885`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.777351725519889*^9, 3.7773517937597837`*^9, 3.777351896032502*^9, 
   3.777351933122487*^9, {3.7773519816536694`*^9, 3.77735205036777*^9}, {
   3.7773521545151863`*^9, 3.777352246682369*^9}, {3.777352306786311*^9, 
   3.7773523435419073`*^9}, {3.7773523842546673`*^9, 
   3.7773524121134357`*^9}},ExpressionUUID->"f716cb52-1bfd-4cef-94be-\
822c59de59c6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.8386266406219924`"}], 
      RowBox[{"-", "0.2515877054783154`"}]},
     {
      RowBox[{"-", "0.18869099413994828`"}], 
      RowBox[{"-", "0.6289692636957885`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.777351725519889*^9, 3.7773517937597837`*^9, 3.777351896032502*^9, 
   3.777351933122487*^9, {3.7773519816536694`*^9, 3.77735205036777*^9}, {
   3.7773521545151863`*^9, 3.777352246682369*^9}, {3.777352306786311*^9, 
   3.7773523435419073`*^9}, {3.7773523842546673`*^9, 
   3.77735241211489*^9}},ExpressionUUID->"f53ebdd2-611f-464f-b5ff-\
36a62cced812"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ApproxLambdaCool", "[", 
      RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dx", ",", "num", ",", "da", ",", " ", "daoff", ",", "R", ",", " ", 
         "b", ",", "A", ",", "ti", ",", " ", "uvin", ",", " ", "uvout", ",", 
         " ", "ni", ",", " ", "nj", ",", "Ei", ",", "uv0", ",", "uv1", ",", 
         "ei", ",", " ", "\[Theta]", ",", "\[CapitalLambda]"}], " ", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ref", ".", "space"}], " ", "circley", " ", "ngon"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dx", " ", "=", " ", "0.001"}], ";", " ", 
        RowBox[{"R", " ", "=", " ", 
         FractionBox["dx", "2"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"num", "=", " ", "4"}], ";", " ", 
        RowBox[{"da", "=", " ", 
         RowBox[{"2", " ", 
          RowBox[{"Pi", " ", "/", " ", "num"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"daoff", " ", "=", " ", 
         RowBox[{"da", "/", "3"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"dx", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["da", "2"], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"opp", " ", "side", " ", "len"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"A", " ", "=", 
         RowBox[{"num", " ", "*", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "2"], 
            SuperscriptBox["R", "2"], 
            RowBox[{"Sin", "[", "da", "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[CapitalLambda]", " ", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "0"}], ",", 
          RowBox[{"i", "<", "num"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ti", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], " ", "+", "daoff"}], "]"}], ",", 
              " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"uvin", " ", "=", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"R", "-", 
                RowBox[{"b", "/", "2"}]}], ")"}], 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], 
               "}"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"uvout", "=", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"R", "+", 
                RowBox[{"b", "/", "2"}]}], ")"}], 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], 
               "}"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ni", " ", "=", " ", 
            RowBox[{"n", "[", 
             RowBox[{
              RowBox[{"uvin", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"uvin", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nj", " ", "=", " ", 
            RowBox[{"n", "[", 
             RowBox[{
              RowBox[{"uvout", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"uvout", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Ei", " ", "=", " ", 
            RowBox[{"b", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"ti", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"ti", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"uv0", " ", "=", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
             RowBox[{"R", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], 
             " ", "-", " ", 
             RowBox[{"Ei", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"uv1", "=", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}], " ", "+", " ", 
             RowBox[{"R", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}], ",", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"i", " ", "da"}], "+", "daoff"}], "]"}]}], "}"}]}], 
             "+", 
             RowBox[{"Ei", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ei", " ", "=", " ", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{
               RowBox[{"uv1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"uv1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
             RowBox[{"x", "[", 
              RowBox[{
               RowBox[{"uv0", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"uv0", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", " ", 
            RowBox[{"-", 
             RowBox[{"Angle", "[", 
              RowBox[{"ni", ",", "nj", ",", 
               RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[CapitalLambda]", " ", "=", 
            RowBox[{"\[CapitalLambda]", " ", "+", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", "A"}], ")"}]}], 
              RowBox[{"(", 
               RowBox[{"ti", "\[CircleTimes]", "ti"}], ")"}], " ", "b"}]}]}], 
           "  ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[CapitalLambda]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"sx", 
          RowBox[{"sa", " ", "sy"}]},
         {"0", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
         {"0", "0"}
        }], "\[NoBreak]", ")"}], "/.", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
         RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}], "*)"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
        RowBox[{"c", "\[Rule]", " ", "0.0"}]}], "}"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", 
        RowBox[{"-", "0.05"}]}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.2"}]}], "}"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi", " ", "=", " ", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"II", " ", "=", " ", 
     RowBox[{"2", " ", "Q"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", 
       "0"}], ",", 
      RowBox[{"v", "=", 
       RowBox[{
        RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], 
      ",", " ", 
      RowBox[{"x_uv", " ", "=", " ", 
       RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Lam", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{"phi", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{"phi", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
       RowBox[{"F", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    
    RowBox[{"(*", " ", 
     RowBox[{"n", " ", "//", " ", "MatrixForm"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"NN", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tmpx", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "phi"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tmpn", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0", " ", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ApproxLambda", "[", 
         RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
          RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
         "}"}], "\[Element]", "Reals"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N0", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"NN", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
          RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
         "}"}], "\[Element]", "Reals"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[CapitalLambda]: \>\"", ",", 
     RowBox[{"L0", " ", "//", " ", "MatrixForm"}], ",", " ", 
     "\"\<   II: \>\"", ",", 
     RowBox[{"II", " ", "//", " ", "MatrixForm"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[CapitalLambda]cool: \>\"", ",", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ApproxLambdaCool", "[", 
          RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
           RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
          "}"}], "\[Element]", "Reals"}]}], "]"}], " ", "//", " ", 
      "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<n,u n,v: \>\"", ",", 
     RowBox[{
      RowBox[{"NN", " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", "0"}], ",", 
         RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], " ", "//", " ", 
      "MatrixForm"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQzev8M2aHyhtHm4M/M0F0CP+xXBC9rW92HoiWW9Ve
AqI11u0sA9ERggy7wPTuuYdAdNEqtzsg+oHi8scgetXbk69AdFCywRuwfLLg
B7C5Jgf/gGgGlyUMO4F0mCkDC4j2kZATB9HHOC8rgujZEa/VQfTWBHFNEJ2y
pNoQRD+y+OgEoqfuLPQE0bUs7dEgWu7jjHgQbX7EOwNE5y1QKgDRKzo/VoDo
xpf5jSD6hF9/M4h+t2RXB9j+/wo9IFqAdf8sEL3uc/UcEB2k67EGRNtrmu8D
0U2sNw+D6IAmv+Mg+uFWp0sgWuruhOsgWijmgvtuIL2XZ4U3iJ4qYxsFohk+
PkkD0VpztuWBaMFg4UIQPXvu9FIQPcPuOZgGANFFvt0=
  
  "],ExpressionUUID->"3f8b8e21-970d-408d-b843-624646ceaced"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHvwXVV1x2PCL0E6QrHlUSGWWKHhYUoz1ML4M/uAyENBOjgISoo0EGIo
RadaHjOt0g6piCBOsUMEVAZDdTBBMEB+BTFRAYGBAMPLlCsQHoHEAySEHyHJ
CWl7z/rsM/u7zso/d34fNvuu/bnrrHvOPuvcaXO+eOLciRMmTPjgyIQJk/7v
9TdXTNlz67R3r+D1R9fMvOBD/7k9/ft7DjzsqUtHMv/pnK3zph2yKX38m5/6
3NKN78r8d599buYeU9enHd/74lvv/+9mOfyMib++Zep1L9o848vLeZ6y8bWM
v9v4QPiiNMH+wfnbxicdb/Mnnd/iSf3xNEnjt/VWul7zU6kf+7tSn/yNV/XM
q3qGq2e4ei7n6TyX4zvPJe88w9Wzjsezzo/n/niapPHjWdeLZ/WDZ/WJZ/yp
Z7h65lU9w9VzOU/nuRzfeS555xmunnU8nnV+PPfH0ySNH8+6XjyrHzyrTzzj
ST3D1TNcPfOqnst5Os/l+M5zyTvPcPWs4/Gs8+O5P54mafx41vXiWf3gWX2W
dWPceYb3141x5xneXzfGnedyvNaNcecZ3l83xp1nnb+sGxpPkzT+sm6MO8/q
p6wb484z6+7P5zrI5zrI5zrI5zrI5zrI5zrI5zrI5zrI5zrIZ42nSRp/mc91
kM91kM914HkQeB4EngeB50HgeRB4HgSeB4HnQeB5EHgeBJ41niZp/KXnQeB5
EHgeOM/ErZ7h6hmunuHquZyn81yO7zyXvPOs//Cs4/Gs8+O5P55Gxneedb14
Vj94Vp+SzynI5xTkcwryOQX5nIJ8TkE+pyCf3d86XvI5BfmcgnxOQT6nIJ9T
kM8pqM+B5zrwXAee68BzHXiuA8914LkOPNeB5zrwrPE0SeOX+hx4rgPPtfPM
+wfnG84zPDjfcJ7Ledz5hvNccne+4TzreDnfcJ7742mSxi/nG86z+pHzjSCf
myCfmyCfmyCfmyCfmyCfmyCfmyCfmyCfmyCfmyCfNZ4mafxy/hzkcxPkc+M8
M19wPVgF14NVcD1YBdeDVXA9WAXXg1VwPVipZx2PZ51frgcr9azxy/VgFVwP
VupZfcr+hvMMD/Y3nGd4sL/hPJfj3f6G86zf82XdGHGedX7Z33CeNX7Z33Ce
1Y/sbzjP/Pdgv855hgf7dc5zOY/br3OeS+7265xnHY9nnV/265xnjV/265xn
9SP7ddnnf33qu9Pnf2bKCl73vXDpIfM+sjX7h8v4KhhfBeOZpwrm13gqHc/f
vI/wvE8bjFe+QueR+HM8H/7i3+wzc3THFby+OP3qo7f87TZ4FXDGV8H4zImP
/0/eN8ev8xOvzJPn1/h1Hhnv9ruCeSp935Xfm3zbndu6fd2Dlk9+5MMz3k5P
/GTkxH9eNTG/7+XnX3vl2l9vyJzx8LEvv/uZC8/envfDr/7Gywu+ufiVzBkP
v3c4bnMev2gY57OZMx7++PB938jjLxu+76OZMx5+93Dc2jz+uuE8yzNnPPyX
Q74qj1845D/InPHwtkqMjTJ+5YP//2/2YQ+14/PnsEzGM4+OhzP+gTbOPM9N
Fiec8fCnWg95/H+YBzjj4fe3nvP4JeYZznj4ne3nmMd/3z5HOOPhT7Z5kvP/
CssTOOPhD7d5mMfPsDyEMx5O3vK9oXkL1/yEax7CNd/gmldwzR+45glcP3e4
fu5w/Xzh+jnC9fOC6+cCV/9w9cz3sHqGq2e4eoarZ7h6hqtnuHqGq2e4eoar
Z7h6hqtnuHqGq2e4eua8Rj3D1TNcPcPVM1w9w9UzXD3D++vYuPMMV89w9QxX
z3D1DFfP8P58roN8roN8roN8roN8roN8roN8roN8roN8roN8roN8roN8roN8
roN8roN8rgPPg8DzIPA8CDwPAs+DwPMg8DwIPA8Cz4PA8yDwPAg8DwLPg8Dz
IPA8cJ65blHPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMD/I5
BfmcgnxOQT6nIJ9TkM8pyOcU5HMK8jkF+ZyCfE5BPqcgn1OQzynI5xTU58Bz
HXiuA8914LkOPNeB5zrwXAee68BzHXiuA8914LkOPNeB59p5Zt8iON9wnuHB
+YbzDA/ON5xneHC+4TzDg/MN5xkenG84z/DgfMN5hgfnz0E+N0E+N0E+N0E+
N0E+N0E+N0E+N0E+N0E+N0E+N0E+N0E+N0E+N0E+N84z+2rB9WAVXA9WwfVg
FVwPVsH1YBVcD1bB9WAVXA9WwfVgFVwPVsH1YBVcD1bB9WAVXA9W/XVjxHmG
99eNEecZ3l83RpxneH/dGHGe4cF+i/MM768bI84zvL9ujDjP8P66MeI8s18X
7Ms5z/Bgn815hgf7Zs4zPNgHc57hwb6W8wwP9qmcZ3iw75Q945NX9bn7jOcP
vu5Lk91+0Wm/uGvxxS9MdvtF7EOrz9ee+cqi4++f4vaL2KdVn1/dfuC1u/90
R7dfdG+wr/iQxa8+iV99Er/6JH71Sfzqk/jV5+V7HfDkVWdNdD55VZ9TR1c/
dPpxk5zPuQ/+/NiPL5/kfC6ZvfCe/Wfu4HyO118+fOcbdnA+P/ovJ9z1xh5+
n3ZBsO96mcWvPh+3+NXn3ha/+jzT4lefiy1+9Un8WgeIX+vAwpnXvPby97e5
6+jpnz5xzc0Xv+Ouo3lVzx/8xHNnT5s+wXk+53/uXDNyzQTn+dazr5qz7j1+
n7PZ8o/PrLzI73MeGexzXmXxq+c/t/jV8zKLXz0Tv3omfvVM/OqZ+NVzexy9
5Ty3x8sm57k9Lt52nnlVz5+5+Re73D1li9uvWPPIP025/NUtbr/ivA0HbT/p
sa1uv2JysM+5m8Wvnm+w+NXzX1n86vkei189n2Txq2fiV8/Er57bvH3NeW4/
3/XOc/s5bnCe23zb4Dzzqp7b43Sj8/zm8Hh803m+ONjn3M/iV89/ZvGr56UW
v3r+mMWvnh+z+NUz8atn4lfPrc/nnOfW22rnuZ3/Bee59fCS87xomFcvO8+8
qucXh3myznkeCfY5P2Dxq+cjLH71PMfiV8//ZvGr5+stfvVM/OqZ+N3+2zD+
xc5zy3/uPF80jOce5/ldw/EPOs/VcL2POs/tPE84z7yq54nBPudvd23jV8/r
d23jV88XWPzq+e1d2/jV86jFr56JXz2vsPjV830Wr3q+pJ3HXUcf076vu47e
pfXsrqO/3a7LXUf/afs5uuvoQ9vP3V1H8+rO3+xVPV9m8avn4yx+9bynxa+e
F1r86pn41XNl8avnV9o8d57vs3jV84/b48h5bj+Xl5znL7THqfPcfl6rnefp
bR1wnncO9jnXWfzqmVf1fKPFr54vtfjV89kWv3omfvVM/Or5rbZuO89ntXXe
eX7S4lXPR7XfI87z7e33jvO8X/s95Twf1H6vOc9/EOxzbrL41fM8i18986qe
j7b41fMyi189E796Jn71fEF7HuI8t3m+xXk+pT3PcZ7vs3jV86HteZTz3B4X
m5znPdvzNOf5kmCf80KLXz2vtfjV82ctfvXMq3o+zOJXz8SvnolfPW9rz6vd
fsVt7Xm426/4h/a83e1X7Nue57v9ijssXvV8QHsd4Txf3V53OM87Bfuc71j8
6vl2i189n2vxq+f9LH71zKt6Jn71TPzqeVZ7neg8t/VkB+f5pvY61Hlu68wk
5/n97XWu2xciXvX8rfY62u0LHRXscyaLXz0Tv3omfvVM/OqZ+NUzr+qZ+NXz
19r9Gef5r62fTj2/3u6fOM8/sr5E9fz5dn/Ged6j3c9xnolXPX892Oe8yOJX
z4da/Op5vcWvnn9s8avn0y1+9Uz8ul9kPvN+EethH0z7vuzVXaevpN73j690
HpvfcfYJg33XHGfu27P/Ln25mdNvmfu9jGs/M1z7mcv5u37mcnzXz1zyrp9Z
+wLy/WAZn+9fyvz5fltvPE3S+PP9DFlv3n8Xb/jkeFKfcPUJV59w9VnO3/ks
x3c+S9751H4KfOp4fOr8+OyPp0kaPz51vfgMvFXqDc/UJ/UMV89w9QxXz+X8
nedyfOe55J1n7U/Bs47Hs86P5/54mqTx41nXi+fAW6Xe8Ey9V8/5e0A8w9Uz
XD2X83eey/Gd55J3nrXfB886Hs86P57742mSxo9nXS+eA2+VesMz35/qGa6e
4eoZrp7L+TvP5fjOc8k7z9o/hWcdj2edH8/98TRJ48ezrhfPgbdKveGZ8xH1
DFfPcPUMV8/l/J3ncnznueSdZ+1Hw7OOx7POj+f+eJqk8eNZ14vnwFul3vDM
+Z16hqtnuHqGq+dy/s5zOb7zXPLOs/b34VnH41nnx3N/PE3S+PGs68Vz4K1S
b3jmfFnPQzhfVv+M1+drGK+fC+OJE874/t8rGBtlvXDG9/+OAfE/lXkZv/6+
AfPfnXk5v/7uAeMXZV6O199D6Po6+ad9neRJMH/S+cmfIP6k8ZNXgZ/U76eR
+bP/pP7L513d51vp51s+t+nyrQryLY+XfKs038hbruc0b+Gan3DNQ7jmWzl/
l1fl+C5/St7lifbz8rnreD5fnZ/PsT+eJmn8fC66XvwH3ir1hmeuj9UzXD3D
1TNcPZfzd57L8Z3nkneetT8azzoezzo/nvvjaZLGj2ddL54Db5V6wzP7DeoZ
rp7h6hmunsv5O8/l+M5zyTvP2m+OZx2PZ50fz/3xNEnjx7OuF8+Bt0q94Zn9
G/UMV89w9QxXz+X8nedyfOe55J1n7d/Hs47Hs86P5/54mqTx41nXi+fAW6Xe
8Mx+mHqGq2e4eoar53L+znM5vvNc8s6zPg+BZx2PZ50fz/3xNEnjx7OuF8+B
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
7HP/X++l8FM=
   "], {{{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{
          TagBox[{Polygon3DBox[CompressedData["
1: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
4yWfZ30RHUN0zvVldL2pntKpydyjs/gyvnpv9FnDH9E9E51N/BVd330WfP3r
Yv7c7PpTNeaE5N6meO/G6H6OuPqv0T0B1dTXJO9T1dRXJ/dLVZc9E90nVw07
J/ocpyP/qwb4lJLru5ejz9HE+beAjy65lnw2um8v3r4puseiun5ycuxSXX9t
cpxRHnwgu6+tc4q/o3tB6rF3Y84teofgPKlvpDOLf6LrXJ2h/BbdA1Hv/UTm
Tym5xzg4eZ1Vt16XHBvVl5gbfY6memRrdD9EdVW75B61+o1Dknmyznr+5FrH
InYpTmovbyj2mPapeol7J/NV9TQ+ij5n3BX718j+0b3Bxsm8VP2K+dgal9yv
2z+ZJ+uMKSWvrfr2eyXzZPHiHZL7LXrmuOwzD8W077O5jvpv69AnlNx7bJTM
f0YH51v9LvVFmydzV3HvnRTXSu45HwoeXXIf9cBkTqu+0MLs762eZ9Nkfqs+
at3kWklnCjWT+bn2p2Ka8pd6qrWTayj1YOsn83P1In6JPq85I3htFHtVN1RI
7uOpr/Jp9JmLeoAx+ZxRZ3M5udeh76Ceg76FeoPbmd+j5L7B8cn9Z9WqP0T3
HtW3+SD6fFl9jxOS+9iK4YqZ+o7qAW6LPl9Tj/T76N6m8s4nRXw+PJjXyM9V
g24uuJl42vIiN6kn9nP0+ZRq5NXROUjf4fpsHjQpmOPIV8WXxmTX3uqPfRh9
rq1ezWfRdff/AEbb49M=
             "]], Polygon3DBox[CompressedData["
1:eJwtmgW4ZMXVRe+tex8M7jL4CO7OoIOE4GEGd3eHBHd3d3d3dw1OEiAEd08g
BJcE+df6d30fzevV1a9fT9+qvfc5p4dsvsvonUvTNJvxv56fi3dNcw53jmib
5gR4Mfhs+HD4eHhR+Cz4MPg4eGH4DPgQ+Bj4a17nIHgleDT8JTwltxXg1eER
PP9M1g+Fj4W/Yu1AeEV4FPwevBc8Al4aXornr8djx8Anw29wf0/WF4AXgydk
fREe2xbeFX6J+7uxPge8APwa/Ed4PngE/E94f3gZeEX4VXgPeF54EfhdeBC3
ReCR8Kfc34/1peEV4PfhveFF4WXgD+B94MXgZeEleD/nwkfCJ8Kvs/4neH54
Ufhf8AHwsvBKcMvzD4PXgzeDG3gWnrMuvCm4A3wn67fD98OD4CPgzeBt4R95
7iHwKHhd+DzWN4ev4/EP4VXhK+EzWb8QPtHP2vcM783tJ+4fymOjub8e62Py
/Hl4bFN4G3hD+CbWr4BvgO9ibQN4DHhyeF/W74Ufg5+t7//1Ptd7VP33+e9Z
se4H3+8/6ufp5/8b/Br8+7o/foVfhZeH/wD/Ar8C/w5eDf4f/DK8HLwqvC6v
fx18CXwN/APrL8Ej6/XalPWb4WvhW+CHWH8Q/i/3J+K2Cev78Ng1rN9c96P7
dUS9vu7f5/vsB/djx/PfgFeB14Qnh/8Fb1I/r8ngf8Ibw1vDE8MfwxvAW8BT
wJ/1+Xy9flPCn9fruR28PnwDfBl8HTwp/Cm8EbwVPAC/Ba8Grw1/y/t7AV4C
/h08CeufwBvCW8Lfs/53eCn49/B/4L/BC9f9/R38IrwkvDy8Ab9/I3w5fL26
AN/ifoJvhTeHb4Wvh2+DD4bvg5+BX4Bv4vVu5PapZ43bQeoJ/DTrz8Orw1fx
/HPhS+A/wNuxfg58MTwt/AXrW8A7wvvA98CPws/Au8J3wffCj8BHwZf4GcCv
wbvBd7N+H/wovAt8DOv3wA/De8OnwI/AT8M3e+25ve/ZdE9UPfE8bg6Pgq/m
9c6DL4XXgK+FL4Avh9eDr4cvha+FV4QvhU+Fz4W3hW+Db4HvgbeH74Bvg++D
t4Nvh2+F74VHw9fA58OXwSvBl8GnwefBy8AXwsfDp8GrwFfAZ8AXwCv4ecCn
wOfAK8OXw6fD58PLwhfBJ8Cnw8vBF8MnwmdUPf2oj/6oRxPAH8LrVD0aVPVh
VNWLWbpoilpyMPwAa5vBk8LTwM/CO8LD4dnh5+EfuT8Lt3ng5+CdWJ8RngN+
Bt4BHgbP5h7i9V9rc14n5HYoPHyAz5znPQ7fy8+Nef74PGcwfL/aBU8MTw3f
rpZqbPAk/LgFXhv+uZ7/2+B14F89q9zugzeBJ+T5U8EvwrvAs8HzwU/D28ND
4VnhP8Nbw9PAw+HH4W3gaeEZ4b/Du8Kzw/PX/XUkvB28G3w0fD/8Ivw6/ALP
3xmeFZ4XfgzeCp4aHgav1UffJ4enhZ9ifTt4iJ8pvCSvdx58FHwS/CjrW8JT
wUOr/n3K/Sm5zQA/Am/B+mB4iP6g/tQz/C58h2eB9cL6pPCd8PpwD08Gfw7/
BV4QXhL+Av4rvBC8FPxXzxo8Rf17L9TrP7i+H/fDo33ez5D673kYHrdez/F4
P+/Da8Ebw2PD78JrwBtWv3oHXr363/jwB/Da8CbwGPDb8B/gdeBx4ffgNeGN
4B5+E14VXgu+h7+/Uf37U9bPx8/r57o/XoYfY316Hpu5SV4xL8xa98cr3P8z
6zPU6/EO/CQ8c93vI/l758PHwqfAb7H+BDwTPDf8JPwQPHb9++aTx+v1db8t
ze9fAB8Hnwp/pLbCc8ELNckvT/U5X+6fj+Fn4LnhheFP4GfhedrkHfPNczX/
jKj//gfgQfBY8PT8vf/AW8I7wXezviE8FjxFE294t4sX6BF67TtdvELPVRvf
7OJlaqTe8Z6a11QPgd/von1qpF7+Rhct1dPNHmYQs8ufSrzxrS7epEd61j3z
4/pZtPGut7tkFT1MLVKTxvOzaLM33aNmicn4OYTnfsljW7G2c5Oz4plRK/7V
RutfV2ObaL5a/FIXLVWT1c4XzLRNNPQJsyiPTcf9mZpo/Yddspua7974vsve
cY/oZR918So9Te1/rYu36AF6z6tdvEAPMsuZ6TzbW5d4zd+7eIOeoxe8XD8v
PUEveLGLF+kJesE/uniFnqD3fNDFi/Qg99oPXfaue86z4J5wL7zfRhvVyHHg
D+Evql7o/y820VI1lYebN3jsGO5Mh17/mfvPNdESNWXAvd9G//Rv/d38eCw8
PYuPw39pot1quBL+ZhvtVsP5r3m9Ta1hzWH2noqfn1d/OI/7HzepLcx0ZrnB
JY8/y+993mT9Wngy+LMmeVkv0VPG5v4HPH48rzeE13uS+3+r+jhsIHnGvKN3
6WFq8XdtvEGP0Du+buN9eqBe+G0brVVT1JJ/ttF2NV5t/Qw+jtefgdd/wr3a
xAv1RL3smzZeo+f8v/bCJ/D8oTz/qTb5Si9QQ9XOr9potZo9Bvx2G2/So8zu
/26T5c30Y6pVbWodNUEtmKhq04/8jbmaaJTa8t8uWqbGHOv5gg+A/+j1dH/A
+8G7t6n1nupSK1rzWUs+06W2tKa0lny6S21pTWnt+WyX2ska1Kzzty5Z5fj6
/m7pUjtYQxzl9YL3hXeD9/W88b4XVOtLaskbu1x/M721201d9os1nLXbzfBy
TWo4a8XrutRq1ozWcs/V82ZNp3b/pYv2quEneT3hQ+F93e/qEbw/vEebbGRG
mpnbCryfk9UX7h/G+n56gNcfPhzev00t/WSX2tia+jj4QfhA9c/rDT/cJWvt
1cbrl6y8Dq9/PPwQfBC8J+unw0/AR8EH6RnuH/gI+AD4NPeDmcSz0sarfuri
RXqWtev1XWpta1hr51u71K7W0Gbtj+HHmmRus/onXc6yZ9radYeqx4dXb1FP
9Lb32tQOn3bRDjXELHR0/f1LS2rLfat+nlazxDdqRJNMoRfryXrfr22yw9dd
Xl8P1/t+7rKuB5o1vu2SRcwceqceau00Xklv4QbWF2/SY9CL9WT1+j9tvPOX
Ll6qh5rlzHTWCiNK9OgOeI0mPRBr9Xu61HbWeNb+t8ErN+kBqE+3d6mNrZGt
Tb/sknXNvIfDpb7ebCW1+l3w+k1qdrP8812yu5neXsLd9f1Yw5gV/tqlVjAz
2Cu4s0t2N8Mf7OdZsv+nrlng1y7ZYN76fu1ZeP0nKfl9a3jP3xB+Du+y59xr
7tGhXfase1VN8HqZAd1P39froz7pL1/W62EGVE9+qP9+M6rX5xN4hi4ao7Z4
pmbqcgbc++7x2bqcQc/eIfB0Xc6gZ08NmqPLmfOseUbn6XIG3Pueubm6nEHP
nmdyqi4apnapKe4fM5S18fj181Ef7S1MWOKf29V8c2iJn+9a88+xJflm25pn
DinZ7wdXvz+3JB9sX/PMYTWbmdGs1ScoOV+71Xx1XNVjM6NZe6BmPTPfSHjM
kvO3T/XzU2v2NIOaxceo2dSM6v79rfq9GdPrram6f9q6H2fVt7porNq6T5P9
PKjun3lL8tBKVb+3KNGvhasejyrR/xHVD0aX6P2iVR/XKPGDxap/rFmit0tU
/Vq7RG9HVn1dv+adFaufbF7iD8tU/dywJO+sUPXTnqbnY9mqdxuVnIelq/5u
UJLflqv6tzE8XxdNVAv9Hf1o8aq/a5Xkp5Wrf21Zks9G1fO1Q0n+WqX611Yl
+XGNej53Ksm/m9d8t39J3htd/W1HeIEumq1W+57slaxe/Wb7kjy9Xs17u5fk
3Q1qnvtjSX5et+a93WpetqdkXt2jJJ/bE7tUvyrJ7/Z4LtOPqr7YE1Tfh/Jz
G9bGIl9c3Ka/tjU8CL7IbNrkvdm/0Qt9j/ZzDHf2a61v1oJb+CS9H14e/sUz
0KZfvBr8m5rfpr/rtfu1j/d5Db329n/3red3Tvh71nfUq+Fh8Ffw1vAuTf7t
3UCyrp/BrPC3njF4dz0A/gHeSW+DZ4e/06PgPeAZ4a/hbdr0k4+Ap+b1HjL7
NOk3TTuQ/pH9KPOCPWZ7FaWkV2DPYJj63aa37PmydmtL/NMetPli4pJa35p4
KPyT15zXn4bXf7hNf8regT2E4dz/X/Vje8r2Urqab6xBrT3HKul92wO39/Bz
zTv2rO09jF39zR66vZa+JP/Yw7ZXPk6JVo09kNpLzTK3fNOnv26/Yn74J3gX
eK8mWmd/zVpPzdsZHo/fv7pNP/UAeHL4Lr20ST9wyoH04x6BD4SngO9u059T
G+0XWgupke5V+7P2C92z9mvHGEi/8BLPDDwOfCV8o2cYHoDPbtNP3BIeE74Q
vsozCI8LXwXfpCbAPXyWXqqmwT/y79sZ3tMzCk/G+p16k2cEnhS+A34AXgcu
8Mlt+m2Hw1PBD5qlmmjh/6p+qokLwv/VI7w2TeYbP/fpx+tfh8GD+f0H4Cea
9CsnGUhtbI28JzwRfJPZyzMNTwDfYNZqov32N63l9AD7n+MPpL9t/3sveGL4
5jb9yD+ZNeAb4bua9HJ+47ElmvR01J9Xql54DdSCRfucfTXh36x91qWW+qRJ
PXgSt3836QFbb1u86Vf2hOzn3cr7+6CpPdcuM4sPuf9Rk96NPRxr8QVLtERN
8VpuW9K7sYdjb3j+kt6kPUrP/kIl9eKpXeope37Wo6d0qeft8Vm7WcO9y/2r
S2o7a7y34StLai9rsLfgK0qupdf0ZfiCktrUGvVN+PKSeva0LvWYPTK1Qs14
Bb6wpDazRntHLS/RDjXEXvXFJWfdM/8qfFFJr8uel72WBUrqt9O71Gv23Ox9
2QPbAZ6vpPdlD8zZw9wlsxeL7009uyWzFvOavbEZSmYjzkjshU1fMttwxuHs
ZYqSWYwzGXtnM5XMXpzB2CsbXjKbcUZjL27Gkr3tHlfLVy+ZzTijsTc3rGTW
4MzBWc7kJbMIZxLOLqYrmT04g7D3Nm3JLMSZiGdjZMksw5mG2rxYSW/aHrXa
vHDJLMWZilq0VMksxpmMZ3fJklmMMxm1fomSXp89vy3hOUp6g/YIndXMVTJr
ceaityxeMmtx5uLsZc6S3pc9sEHwu23q7Uu66Lv9Euv/S7v4gT1itUMNsZdx
Ron2qYHW6meXaJ8aaG/hrKrf13SpX51hqp1qqL2AM0u0QE3QG04uOcueab3p
pBItUpM8n7uUaLma7lk/uEQ71BC16cQS7VBD7KUfX6KNaqRad6T7h9vuvKc5
27wnaxFrkvXb1BjWDtYQK7epUay9rcEXb1NTDFYLzDxt9qy9GXv4LzXpxag9
apBad0KJd+ghesVRJdqlhukNR5d4ux5vFtm1JFuYMdR2B9nqk5lFbTyoRPv1
ALXxgJL+x8VdenP26O2nXNTFL+3h24+5sIvf2nPXn6/s4q/2ePX3q7r4qTMB
e332/OyFftGmX3NZF392hmH/5/IufusMxH7RFfCcTWYe9tPO7tLfcebwa82v
esmmJf2os7r0k5xx2K85o8vfcwarF+qJeu3eJd6nB+pte5VkNTOb2n5gibfo
Mf+Azy/pR53fJX/Yk7f/eUGX/OLMwP7qOV36V85UnD2o19M1mUHYXz23S//L
mY/9wjO79J+sv816Zj6z3yYl/buTu/S/7Knby3O+4wxOuTfLDeuj/2Y6s9jw
PvpuJrPec35tpjPbmd1m6pPtzHDq6ap9zoMZSi+ftc/519PNMjP20Q8zjf4x
eR+9c8alPg30qfecmao3U/TRU2di6tsgbqs0mUHrV5P10UNnDurtmH3qQ/tT
6u0Yfeo5Z9Jmz1n66IsZ1N7z0D56bw9a/Zqmjx45U1bfpu2j786M9Z/V+/RS
7ZGqB8v1Od9mBM/a9Ny2b3LmzJ/XdunnWc+rh1P30TNn1M6mnVH7+S1a/W9U
H72yB2nvf0gfv3UG4Gx2hj5n2Rmt+jy4z2zbmbP6OVUffXVmrb73fforzpj1
t0n7+IkzHf2h7VOfOpPWn9fso4/2WNXLFfucfzOjfrpGH72056k/r9xHP8xc
+vnoPnppz9b9vlIffTNTqbcr9NEXM6dZzkzn53l6iX+v0kcfzfzq67J99MTM
ZC/bnvYb8GUl+r58nyx4Z9Xr3/fRTzOv/jhHn9rZDGj2m72v2blNlp6tj1+Z
qfXXsfvMJ/wOhH48Th//9DsS+vFYfb774Hci9O/Sp/73Owp+F8DvBPjdhGlK
8sLE3DZoMjMzP03Sx5+dgZkXxu3j/35nw+82+B0Hr+fs1S/H7/N6zsj0wwn6
+LXfQdA/J+zj587YzCMT9ckXzuT08+n6fNfB/pf+s0wfPTLDWsvN3MffrenM
R6v18TdrLP1gyT56Zk1hVjYzWyuuW3XAvqrzVGs8a0lrSrP8NiV6OneffGJN
qV/Mp6Y2qUnVp7m4Hd2kJtVfFuijv9aQ+uNI+I4mGVs9HdHHb6yBzafz9nk/
1rz62dJ9/MZMbW1hjWFtsmeJXi/cJ89aw6jXC/V5v9Ys+t1SffTczK5/LQJf
2aSG0Yv1ZP3rlzZ53Rms+2HS6veL9fFHazhrI2sk9+cR1d+X6PN+rIHMC/P3
0WdrGOvNq7vUg86s/w9NQLQy
             "]], Polygon3DBox[CompressedData["
1:eJwt13n8lVMaAPDbvbdoRVpmKqGEaWO00UrraBEtzKQyKlsrrUaLKBWV0qax
xFiqsc8gDSojZYtop81Yh3ZJk1TzfT7n/vF0nud7znt/977vec85nd1nSJfB
2Uwm85EoKu7LZzJn5TKZM0U1eWudH4on1QeLZDJlRRXj8gY30D9C3zz2oLjR
mMbsTvai+jXjerIdYjibyxawD+RPsB/Vp4rK7H32N3ZAXUZUYrepvxH36XuW
vcwe9vl1xB/ZFDZZTFVXM+5sUV3eRt8N8ovlY+XPG/Nq/Eb50/yQuoKoyvqp
LzFunL4X2BK2Rv4U/0ldTpzBVrPH2R51MVGRrXDdAbZXXVyUEF8b9xIrqa2t
bmDcV3E/WAltLVafbZT/nf0any/OZevZIvZL3BNxTtwXf+MoK6WvDqsrvozv
yopra6rrGXe9eqe4gz3MnmR3qf8rHmJvsJXse/k/2Gnai1hj9qZ8PvtafYoo
xd5hC9gudVaUZ6vYY2y3Oh/3kC1nD7Fv1afHs2N91F+I0foeYU+xyX5HFVY5
5pb8Mn3LxF/jGRtzmiht3Dq2kB2JOSCqs7bqC1zzZ30z2Xz2dnw2/159XH26
WMkeZT+wTDw7TTt1Xddep29GzFPWl/1HjInx7Gk2NH6DmMqeY6+wOa6rz+qJ
WvLO+q6VbxfD5HOMe9S4mfpqxxhxnryDvlPkFeWN5DcZN8S4CuwM1oINYSPZ
DHVN/jtxrry9vnJxn+TN5IOMG25cWfZb1oQNYEPjN7NKrCkbyIaxWeoL437F
Z8o76Zuk/Y1oLO9v3C1itvoiY34vasqv0FdeXkXeXD7YmBE+rzQrzxrEO8UG
sWIxf9gF7Lp479mf2FZxG5vFHmY91NvEUDabPcLKqCu4tiG7kQ1mFVlVdim7
lY2K9YWdEu8668X6sRwrE/ea9WR9WSlWLp4T68cGxjrGTmV1WW92A5uirhT3
UJwlb6nvavlF8lgAFxi30Lju8bzZkJjrbBF7ID6L1xHnyzvqKyE/XV5P3te4
AcYNiHdITIj1gz3PSlonmxo3Mdae+BviYmNqsyvZePUU47qxz8Ugdj+bx6Yb
cy6rESFvp+9ebdWYR7HeyVuxadpzYu0T58jbsi7yLWJA9Pu8OT5vYcwNcVM2
rdexbvcypiEbFWuP+gXj7mDfiVnsZfYm66/+StwdewF7jt2i/lLcFes5e5a9
mE/7wshs+q3xm6+IecZujnVG/Zhx5dyXNmw2eyXWZ3GNcfXZrbHWqhcb15V9
Jgay6Wwu661uZNztbDF7Me4zKxtzmvVh/dlg1oJNYUvZilgj1If4sVj/xZni
kP6icV+1V6i7G3csnjGroe0e94kdl5eMZxJzh/VmP8nz7AxtJ9aN/Swvxs7U
dmZXs/HqXKyBrCPrIPbIT8T81bZWdzRur7yIcRW0bePeZdJ7+k4uvcv/y6d3
Nt7xlbk0Fw/n0/u+OzZyeXltG9d2Uh6VF4/5oe3GerJf5Sez6tqu7NpMmt9v
59La9XM+zfWhhXt1vLDvxP7zrf5j8W5qW6jbunZXzJN4H7T1WVO2Ob4Xy2gv
ZI2km+Kz2Qn1BaIhO8KWxFzWtmTt4xL10li/WHvWlb0l3x/zMvbeeG5sH8v6
jhW17Vhndlh+UpxhtFfGnGLfyY/HmqC9lLVjv8hfY9W0reJ5ZNJavyqX1sIj
+bTunyi8Mzdm01kjzhwfy3/Sd1h+XvwW116uXieu13d3nElYe/V60YdNYNNY
B/UG0ZdNZNPjjOTz98WeVDhDxFniXf0/sv3ys+LvGHdz4byxrzBvY/7GuWdZ
Lp3T9ufTGeh88VYurRcH2XnyNuJT0Zvd6brJmXTOezOX1pB9+XTmu0S8K65i
Q40bbVxD9epc2v9+ifc71npt6di7smkux5zuxDeJG2LPUc9wbWv1J6IXG8cm
sebqNeJqNoqNZ5epPxI92Gg2ga2N789+jvNRzMGYu4Xz3zX6bmd/Ec2M+VB0
ZyPVd2bSfvzvXNpPD+XT3txYvCe6sGHGjTGulXqt6MnGsntYR/VG0Y/dw+5n
LdUfi2vZGDaRNVG/L7qy4Wwsa6r+QHRjI9i42FPy6ZwUZ6NntM/Gs411L/Yj
bWPjWsW6WzjrlWbN4j2K/UzdjE+K90S9zLjRrC2by1axNewm1oSNZy+xpWxJ
Pu0992TT+hrr7G7jdsV6Eue+WMezae9Ynkvn5gP5tI+Mifkjn8dWF0n/P3hZ
PjP2KfXR2I/FOP9cbtx8fe/xtWws+wN7kL0b7wsbxJqzyfHeseXs9XzaA+aw
d9jKOOsYdymblk3fL77nqJjfbCZ7i73Htsqf47n4/qw2+0z+DCuircZqsg2x
R7Cj6iqiBvs8ngHLaquzWmyb/HmW19aItY69Eftk7Hvq0qJkfGc2L/a9qON9
ZSPjHfL9ZuhbEe9u7N0xB9hitoXtZCNYS3Y/W85Ws2WFd/8L9UniZDFMfRmf
btwy9SrjpsU8Y4vYZraDTY25zBayTWw7e0X+QLyf6mNpO8gUV/8r9uA4F/Ae
7Cr1ZtGfTWWzWVV7cmcXPJFNzyKeybeFs+MlrEfsFUXSOer1XDrD78mnM1Wc
Sd7IpXPV3nw6n+yM9UJ7kraR61r4G9/If2VltM1ZG3ZCXirWKe017Dq2PdZg
44ppG7Lm7GDMY1ZJ24S1Zp8W9tXK2fS+xHuzI/ZJ44pqG4QZ94P8n6ysth5r
wibG/unaBexjtoktlc+N764uGs+DvcpmsW3qE5n0/+QlbDbbzoqIYuw1Noft
UOfiecbfKKyTtbLp3sU9vC/WV/Y026jeFu9iPt37J9l6ti7WIuM6scfYWvVm
4ybF/sQeZ5+wLWxC7NvsUfYR28jujrWPPcLWsA3sXnYle4ptYFsz6Xy5IpfO
jD/m01nz/2bF4Jc=
             "]]},
           Annotation[#, "Charting`Private`Tag$2395#1"]& ]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}}, {}, {}, {}, {}}, {{}, {}, {}, {
      {GrayLevel[0.2], 
       Line3DBox[{251, 474, 1110, 252, 488, 280, 1218, 503, 295, 1223, 518, 
        310, 1230, 533, 325, 1239, 548, 340, 1249, 563, 355, 1262, 578, 1160, 
        370, 593, 1173, 385, 1278, 608, 400, 1282, 623, 415, 1288, 638, 430, 
        1296, 653, 445, 1305, 668, 460}], 
       Line3DBox[{253, 475, 1111, 254, 489, 1123, 281, 504, 296, 1224, 519, 
        311, 1231, 534, 326, 1240, 549, 341, 1250, 564, 356, 1263, 579, 1161, 
        371, 594, 1174, 386, 609, 1185, 401, 1283, 624, 416, 1289, 639, 431, 
        1297, 654, 446, 1306, 669, 461}], 
       Line3DBox[{255, 476, 1112, 256, 490, 1124, 282, 505, 1134, 297, 520, 
        312, 1232, 535, 327, 1241, 550, 342, 1251, 565, 357, 1264, 580, 1162, 
        372, 595, 1175, 387, 610, 1186, 402, 625, 1195, 417, 1290, 640, 432, 
        1298, 655, 447, 1307, 670, 462}], 
       Line3DBox[{257, 477, 1113, 258, 491, 1125, 283, 506, 1135, 298, 521, 
        1143, 313, 536, 328, 1242, 551, 343, 1252, 566, 358, 1265, 581, 1163, 
        373, 596, 1176, 388, 611, 1187, 403, 626, 1196, 418, 641, 1203, 433, 
        1299, 656, 448, 1308, 671, 463}], 
       Line3DBox[{259, 478, 1114, 260, 492, 1126, 284, 507, 1136, 299, 522, 
        1144, 314, 537, 1150, 329, 552, 344, 1253, 567, 359, 1266, 582, 1164, 
        374, 597, 1177, 389, 612, 1188, 404, 627, 1197, 419, 642, 1204, 434, 
        657, 449, 1309, 672, 464}], 
       Line3DBox[{261, 479, 1115, 262, 493, 1127, 285, 508, 1137, 300, 523, 
        1145, 315, 538, 1151, 330, 553, 1155, 345, 568, 360, 1267, 583, 1165, 
        375, 598, 1178, 390, 613, 1189, 405, 628, 1198, 420, 643, 1205, 435, 
        658, 1209, 450, 673, 465}], 
       Line3DBox[{263, 480, 1116, 265, 494, 1128, 286, 509, 1138, 301, 524, 
        1146, 316, 539, 1152, 331, 554, 1156, 346, 569, 1158, 361, 584, 1166, 
        376, 599, 1179, 391, 614, 1190, 406, 629, 1199, 421, 644, 1206, 436, 
        659, 1210, 451, 674, 1212, 466}], 
       Line3DBox[{267, 482, 1117, 268, 1216, 496, 288, 1220, 511, 303, 1226, 
        526, 318, 1234, 541, 333, 1244, 556, 348, 1255, 571, 363, 1269, 586, 
        1167, 378, 601, 393, 1280, 616, 408, 1285, 631, 423, 1292, 646, 438, 
        1301, 661, 453, 1311, 676, 468}], 
       Line3DBox[{269, 483, 1118, 270, 497, 1129, 289, 1221, 512, 304, 1227, 
        527, 319, 1235, 542, 334, 1245, 557, 349, 1256, 572, 364, 1270, 587, 
        1168, 379, 602, 1180, 394, 617, 409, 1286, 632, 424, 1293, 647, 439, 
        1302, 662, 454, 1312, 677, 469}], 
       Line3DBox[{271, 484, 1119, 272, 498, 1130, 290, 513, 1139, 305, 1228, 
        528, 320, 1236, 543, 335, 1246, 558, 350, 1257, 573, 365, 1271, 588, 
        1169, 380, 603, 1181, 395, 618, 1191, 410, 633, 425, 1294, 648, 440, 
        1303, 663, 455, 1313, 678, 470}], 
       Line3DBox[{273, 485, 1120, 274, 499, 1131, 291, 514, 1140, 306, 529, 
        1147, 321, 1237, 544, 336, 1247, 559, 351, 1258, 574, 366, 1272, 589, 
        1170, 381, 604, 1182, 396, 619, 1192, 411, 634, 1200, 426, 649, 441, 
        1304, 664, 456, 1314, 679, 471}], 
       Line3DBox[{275, 486, 1121, 276, 500, 1132, 292, 515, 1141, 307, 530, 
        1148, 322, 545, 1153, 337, 560, 352, 1259, 575, 367, 1273, 590, 1171, 
        382, 605, 1183, 397, 620, 1193, 412, 635, 1201, 427, 650, 1207, 442, 
        665, 457, 1315, 680, 472}], 
       Line3DBox[{277, 682, 683, 1122, 278, 501, 1133, 293, 516, 1142, 308, 
        531, 1149, 323, 546, 1154, 338, 561, 1157, 353, 1260, 576, 368, 1274, 
        591, 1172, 383, 606, 1184, 398, 621, 1194, 413, 636, 1202, 428, 651, 
        1208, 443, 666, 1211, 458, 685, 686, 687}], 
       Line3DBox[{459, 667, 1316, 684, 444, 652, 1295, 429, 637, 1287, 414, 
        622, 1281, 399, 607, 1277, 384, 592, 1275, 369, 1159, 577, 1261, 354, 
        562, 1248, 339, 547, 1238, 324, 532, 1229, 309, 517, 1222, 294, 502, 
        1217, 279, 487, 1214, 250, 473, 681, 688}], 
       Line3DBox[{467, 675, 1310, 452, 660, 1300, 437, 645, 1291, 422, 630, 
        1284, 407, 615, 1279, 392, 600, 1276, 377, 585, 1268, 362, 570, 1254, 
        347, 555, 1243, 332, 540, 1233, 317, 525, 1225, 302, 510, 1219, 287, 
        495, 1215, 266, 481, 1213, 264}]}}, {
      {GrayLevel[0.2], 
       Line3DBox[{690, 1001, 473, 689, 1110, 912, 691, 1111, 913, 692, 1112, 
        914, 693, 1113, 915, 694, 1114, 916, 695, 1115, 917, 696, 1116, 1007, 
        1213, 697, 1117, 918, 698, 1118, 919, 699, 1119, 920, 700, 1120, 921, 
        701, 1121, 922, 702, 1109, 1122, 923, 1002}], 
       Line3DBox[{704, 1008, 1214, 703, 488, 705, 1123, 924, 706, 1124, 925, 
        707, 1125, 926, 708, 1126, 927, 709, 1127, 928, 710, 1128, 1009, 1215,
         711, 1010, 1216, 712, 1129, 929, 713, 1130, 930, 714, 1131, 931, 715,
         1132, 932, 716, 1133, 933, 717}], 
       Line3DBox[{719, 1011, 1217, 718, 1012, 1218, 720, 504, 721, 1134, 934, 
        722, 1135, 935, 723, 1136, 936, 724, 1137, 937, 725, 1138, 1013, 1219,
         726, 1014, 1220, 727, 1015, 1221, 728, 1139, 938, 729, 1140, 939, 
        730, 1141, 940, 731, 1142, 941, 732}], 
       Line3DBox[{734, 1016, 1222, 733, 1017, 1223, 735, 1018, 1224, 736, 520,
         737, 1143, 942, 738, 1144, 943, 739, 1145, 944, 740, 1146, 1019, 
        1225, 741, 1020, 1226, 742, 1021, 1227, 743, 1022, 1228, 744, 1147, 
        945, 745, 1148, 946, 746, 1149, 947, 747}], 
       Line3DBox[{749, 1023, 1229, 748, 1024, 1230, 750, 1025, 1231, 751, 
        1026, 1232, 752, 536, 753, 1150, 948, 754, 1151, 949, 755, 1152, 1027,
         1233, 756, 1028, 1234, 757, 1029, 1235, 758, 1030, 1236, 759, 1031, 
        1237, 760, 1153, 950, 761, 1154, 951, 762}], 
       Line3DBox[{764, 1032, 1238, 763, 1033, 1239, 765, 1034, 1240, 766, 
        1035, 1241, 767, 1036, 1242, 768, 552, 769, 1155, 952, 770, 1156, 
        1037, 1243, 771, 1038, 1244, 772, 1039, 1245, 773, 1040, 1246, 774, 
        1041, 1247, 775, 560, 776, 1157, 953, 777}], 
       Line3DBox[{779, 1042, 1248, 778, 1043, 1249, 780, 1044, 1250, 781, 
        1045, 1251, 782, 1046, 1252, 783, 1047, 1253, 784, 568, 785, 1158, 
        1048, 1254, 786, 1049, 1255, 787, 1050, 1256, 788, 1051, 1257, 789, 
        1052, 1258, 790, 1053, 1259, 791, 1054, 1260, 792}], 
       Line3DBox[{796, 1159, 954, 794, 1160, 955, 798, 1161, 956, 800, 1162, 
        957, 802, 1163, 958, 804, 1164, 959, 806, 1165, 960, 808, 1166, 585, 
        810, 1167, 961, 812, 1168, 962, 814, 1169, 963, 816, 1170, 964, 818, 
        1171, 965, 820, 1172, 966, 822}], 
       Line3DBox[{821, 1274, 1067, 819, 1273, 1066, 817, 1272, 1065, 815, 
        1271, 1064, 813, 1270, 1063, 811, 1269, 1062, 809, 1268, 584, 807, 
        1267, 1061, 805, 1266, 1060, 803, 1265, 1059, 801, 1264, 1058, 799, 
        1263, 1057, 797, 1262, 1056, 793, 1261, 1055, 795}], 
       Line3DBox[{824, 1068, 1275, 823, 1173, 967, 825, 1174, 968, 826, 1175, 
        969, 827, 1176, 970, 828, 1177, 971, 829, 1178, 972, 830, 1179, 1069, 
        1276, 831, 601, 832, 1180, 973, 833, 1181, 974, 834, 1182, 975, 835, 
        1183, 976, 836, 1184, 977, 837}], 
       Line3DBox[{839, 1070, 1277, 838, 1071, 1278, 840, 1185, 978, 841, 1186,
         979, 842, 1187, 980, 843, 1188, 981, 844, 1189, 982, 845, 1190, 1072,
         1279, 846, 1073, 1280, 847, 617, 848, 1191, 983, 849, 1192, 984, 850,
         1193, 985, 851, 1194, 986, 852}], 
       Line3DBox[{854, 1074, 1281, 853, 1075, 1282, 855, 1076, 1283, 856, 
        1195, 987, 857, 1196, 988, 858, 1197, 989, 859, 1198, 990, 860, 1199, 
        1077, 1284, 861, 1078, 1285, 862, 1079, 1286, 863, 633, 864, 1200, 
        991, 865, 1201, 992, 866, 1202, 993, 867}], 
       Line3DBox[{869, 1080, 1287, 868, 1081, 1288, 870, 1082, 1289, 871, 
        1083, 1290, 872, 1203, 994, 873, 1204, 995, 874, 1205, 996, 875, 1206,
         1084, 1291, 876, 1085, 1292, 877, 1086, 1293, 878, 1087, 1294, 879, 
        649, 880, 1207, 997, 881, 1208, 998, 882}], 
       Line3DBox[{884, 1088, 1295, 883, 1089, 1296, 885, 1090, 1297, 886, 
        1091, 1298, 887, 1092, 1299, 888, 657, 889, 1209, 999, 890, 1210, 
        1093, 1300, 891, 1094, 1301, 892, 1095, 1302, 893, 1096, 1303, 894, 
        1097, 1304, 895, 665, 896, 1211, 1000, 897}], 
       Line3DBox[{911, 1006, 685, 910, 1315, 1108, 909, 1314, 1107, 908, 1313,
         1106, 907, 1312, 1105, 906, 1311, 1104, 905, 1310, 1103, 1212, 904, 
        673, 903, 1309, 1102, 902, 1308, 1101, 901, 1307, 1100, 900, 1306, 
        1099, 899, 1305, 1098, 898, 1316, 1004, 1003, 1005}]}}}},
   VertexNormals->CompressedData["
1:eJztnH9QlVUax29aUq6aP9A1TBlIAgWpUSrBxaNdgUKgFksSBfKyW2Y6Sohm
yqauPwZ1Yk3CykXJTSpqLGY0sChQsUJAQX5lgBg/7wUul9JWBMF1es95znDs
CV72Epc6/OP4nTOH5/2+z/mc59zzXOx0qwL/Pkij0Uy+Q6MZfPPfh+zX+4wa
aiAa5WdT8cy2F1qbqknn2Osf7IqsB/3wj24uqadrSc7gf0wb+Wwt6C3bdPuD
8uvJRtvni6cnV4G+Kf54oUOngaxujS1Mf+Yi6CGD7q/Y7tJE6uOyDFGJxaB3
VAW/O2FSM8lqmxjTkvAV6Impm4/ZvGpi/xd+Wtj4DKaw8XR+0Nn8NB7QWTw0
ftBZ/PR5QWfPS/0BnflD/QSd+Sl9lj5Ln6XP0mfps/RZ+ix9lj5Ln6XP0mfp
s/RZ+ix9lj5Lny3H59CODNsAPz0819O7t27/7HwN6j8dD/MI4/ts/m70W+ZX
Ox6Lf01Gq03gET6+eO3qla6hNUzn47vqPR6P+aB2frXxq113WDzuNovf9nkf
1qOm4/E9p0N315KF7al3+xpgPWrWB3zhHRhYj+rasKovdceqQT8R5Jyvf8iA
6vNiqzK9rlwCvfXlytrj9zWiutbLreRrhzLQlwQf2RPd1oTqr2ft23hxfCHo
O+cuezJ3ZzOqx0069kjL+VOg33ji1DXHBBOuF/kXltceStd0+WkhCcp48Lmz
l+PjlThBj6FxYrqP4gPoi6kPmO6l+Az6Veozps9T3iPomew9IjrNE9CF/LlF
bxq0xepQMuceqYy/JzumluUn5y3NT7V5qzYP1eaVufJE7ftV+74w/6XP0mfp
s/RZ+ix9lj5Ln6XP0mfps/RZ+ix9lj7/9j7Tz0PguebQz0Okz73zWfrZJ3kr
OSB5K32WPkufpc/SZ+mz9Fn6LH2WPkufpc/SZ+nzgPVZfl7023z+hvV9daOb
a54ez3+ja9+yJqlrXy7orN9S6GeG/t7orv3Mms20Hziiaz+zJpT2D+u79jNr
On+5n1nT235mvdDPzOaPEPqZWTzRQj/z5m76mW8I/czMN+mnef3E+oGlz9Jn
6bP0WfosfZY+3+qzWv/Vvhe170vte1T7ftW+d7X5gOlYnqjNH7V5pTbf1OZh
L+veHuet5IZlckP6LH2WPkufpc+W6bP0s3d+Oj8aX3LnYe6bzeCc/LQ99WRO
2MFyp9v559sR4d4PHEg3kIq91+tySCXoC3a1RtgYG8mUnNBzrhkloI+YFts8
yWAk/lbnxhz0zAZ97w9jMh3CTOSS3VcxWz+J5z7/Z4FtR8dNPw3pc3NDivhz
nZxlNXlhM7GOdVy4xLcCdPudyY6pkU3k1Wry447Z3J/zHq6DnXwbyHeNrVZp
w7g/E/e/dtTeRk+iHPQeJ2dwf75f3rzx3bvqSHv6yTeWl/Hvy08N25Y9zLGG
LNqUPdQzhPsw2zlySPl6A/FwDd4bOZp/zh+zYsrunA8biceGgjyX8lLQ/2v9
YsKyFCMZbe346PtlOaBXBLzXnjjLRPLzvFK0nyaBHu7pm2S6ejNPpvl/7ONe
DvEE3juu9G9pTWT+mA2j3ir4HnQ//y87o+IaSEmu/71Pp9WArnO3DSvS6UnO
Cs8I58t1oK/prM6r9KsjRz8vqCx9jz/vrrfHaO94roZ8tnLT/JZ/8ueK1105
k7SskYTZf7Td/uq3oDtb+7sMWWck0xbNueC07izo604Hn46zNhGP0K1Hyoam
gB656Ex6odFEGhJfTNwQzuPP8BmSpKloIMe8Dk+4rOPxz7y8/OrSZD1xmdge
nZfC40+snjNTF1tHHFeEnfo2isc//cLlly6+U0OGv3nJKevu7+D3hpiuESsP
I1lXsS374I580BcfCBgxvKGZHIr+RD/5+KegX6nKdUiuNJGd3mscDgzj8ey9
LfmpEy16orM9d/bIKh7PuLGD/uRQUEfaimzdfLQ8HteVAetnV9SQM88U++0o
KID555fue/ye9GbiPXdfQlF4OuhO2kzty3kmcnGtcWiJC5/fe/mCs3aj68m/
lo1LvX8kn//ZAw+72Y2vJc+99dTz4bef4BzKenLEY6kmMj6oovmVcp7nZVEP
/ntLYC3xEO4TO+n911SBAxMoB2YjHChHOOCIcMAX4UAmwoHbBA6YKAfGChyw
oxzYbCYO2G/R3jf3AvfZyW7/5NQpNSRIuAd8hd5zYXxwR/gwE+HDCIQPJxE+
GAQ+/JXywU/gw3zKh1KED7kCHyK74QN275mGcCME4cZUhBvT/09uPNJLbngJ
97bX6L3nMJU82d9DnrzeDU/aEZ6I98gh9N72G4QzBOFMpcAZLzNzhu6nMJ7t
p1gd0iaMd6bjjcj9LFZXtwn7OJvnTeF+nN2n0/hhHhb/C8rzwnj2vHHCfTq7
r6e+wTzMN8pz0BnPn1DeC+cMfS+5ynvk65e+R/G+nvUP0H0H5md5slTJK9BZ
XtE8BD2O5uGHSt7C/CxvNyh5DnowzfORyroAna0LsX+A9T/QdQe/dwZdd3Sd
8rqartOjyroGndUDBoUDoGdSDmgVbnCOUW7MUDgD+lrKGZ3CJZ4nlEu0/gH9
DcoxrP+BchLiYZykdRforO6idRrnOeUwretAZ3VdncJ50FkdaFD2BYiH7Qvj
lH0E9HK6j/xF2XdAZ/vOLGWfAp3tU8HKvga6J93X7JT9kfOE7o9rlP0U9Cq6
n15Q9l/QJ9H9l9btoBfS/XqUsr+Dzur8Dv3P9QDo7Fxwp/3P9QPEyeqHBUq9
wes3Wm84K/UJ6MNpfVKp1DO83qb1DD0Hgc7qH3puAp2dmzyE/iJWX2G86ul5
9odf/vt4cB5chZxn65DzbAZynv0GObcakL+D91IPz63d/R087NyK8Xm1wOcb
pxQ+xwocXtoNh4MQDp8VOOxLOdxT3v6Z8jYG4W0KwttohLejBN4uobzFuOos
cPUdhKvuCFdPUK76IFx1U8nVzxGu9hc/LyH8HI/w01Pg50+95Gdfc/I6wkmN
hXFS7MdjdR12zsLOHVjdPg+pk83Vb7kPqQMfQ+o0b6QuwuqKIKGvkvlgRHyz
NH/62gdsn+2v5+3r5+rr+M0Vp7niUft71c6PzvPr44k4XvKqd3kyUHzrL38s
zYffK7cHCp8tjYfY900wTmLjMS6p5a3a+bF1bS7OmysebN319X7U1/Fj666/
9tk/2vNiXOovH9TyzdJ8w3g70P1Uy3lz8dnSODzQeftH46rk569/D/d/MhyE
ZQ==
    "]],
  AspectRatio->Full,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{347.8423870530524, 366.115723249137},
  Method->{},
  PlotRange->{{-5, 5}, {-5, 5}, {-3, 3}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3086263547258494`, -2.871194973317875, 1.2221851287391376`},
  ViewVertical->{0.05787359235453449, -0.2598912009106526, 
   1.6065034590317915`}]], "Output",
 CellChangeTimes->{{3.777348364889824*^9, 3.777348376293563*^9}, {
   3.777350243712562*^9, 3.777350358775181*^9}, {3.777350422375967*^9, 
   3.7773504603437443`*^9}, {3.777350529503138*^9, 3.777350555857239*^9}, 
   3.77735064261826*^9, 3.7773506853487997`*^9, {3.777350729605919*^9, 
   3.7773507533033113`*^9}, {3.777350872297529*^9, 3.7773508844956827`*^9}, {
   3.777351101569656*^9, 3.7773511546791162`*^9}, {3.777351205797243*^9, 
   3.777351226839305*^9}, 3.777351284665691*^9, {3.7773513147909117`*^9, 
   3.777351356868216*^9}, 3.777354303899846*^9, 3.7773543340792017`*^9, {
   3.7773544502894783`*^9, 3.777354459817204*^9}, 3.777354553082872*^9, {
   3.777354620825478*^9, 3.777354632990219*^9}, 3.777354671612051*^9, 
   3.7773569243558483`*^9},ExpressionUUID->"aca312d1-ee87-4db5-92f6-\
37ce62c1b7f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalLambda]: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.3999978666871465`", "0.`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"   II: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.4`", "0.`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\[CapitalLambda]: ", 
   MatrixForm[{{0.3999978666871465, 0.}, {0., 0.}}], "   II: ", 
   MatrixForm[{{0.4, 0.}, {0., 0.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777348364987996*^9, 3.777348376346963*^9}, {
   3.777350243765173*^9, 3.777350358828005*^9}, {3.777350422428714*^9, 
   3.777350460395163*^9}, {3.777350529593679*^9, 3.777350555911366*^9}, 
   3.777350642672984*^9, 3.777350685445189*^9, {3.7773507296511517`*^9, 
   3.777350753344968*^9}, {3.777350872339939*^9, 3.7773508845387983`*^9}, {
   3.777351101614748*^9, 3.777351154721899*^9}, {3.777351205839305*^9, 
   3.777351226882771*^9}, 3.777351284736514*^9, {3.777351314836548*^9, 
   3.7773513569063883`*^9}, 3.7773543039459763`*^9, 3.777354334115532*^9, {
   3.777354450333197*^9, 3.777354459859228*^9}, 3.777354553126464*^9, {
   3.777354620870393*^9, 3.777354633040765*^9}, 3.7773546716534357`*^9, 
   3.7773569243985643`*^9},ExpressionUUID->"2dfbff28-1412-45d4-8315-\
2d10865f387d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalLambda]cool: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.24999999214583368`", "0.08660253644524533`"},
       {"0.08660253644524533`", "0.14999999668750014`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\[CapitalLambda]cool: ", 
   MatrixForm[{{0.24999999214583368`, 0.08660253644524533}, {
    0.08660253644524533, 0.14999999668750014`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777348364987996*^9, 3.777348376346963*^9}, {
   3.777350243765173*^9, 3.777350358828005*^9}, {3.777350422428714*^9, 
   3.777350460395163*^9}, {3.777350529593679*^9, 3.777350555911366*^9}, 
   3.777350642672984*^9, 3.777350685445189*^9, {3.7773507296511517`*^9, 
   3.777350753344968*^9}, {3.777350872339939*^9, 3.7773508845387983`*^9}, {
   3.777351101614748*^9, 3.777351154721899*^9}, {3.777351205839305*^9, 
   3.777351226882771*^9}, 3.777351284736514*^9, {3.777351314836548*^9, 
   3.7773513569063883`*^9}, 3.7773543039459763`*^9, 3.777354334115532*^9, {
   3.777354450333197*^9, 3.777354459859228*^9}, 3.777354553126464*^9, {
   3.777354620870393*^9, 3.777354633040765*^9}, 3.7773546716534357`*^9, 
   3.777356924425487*^9},ExpressionUUID->"0c81b2c7-3213-4f9e-8389-\
98e169c63df8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n,u n,v: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.4`"}], "0"},
       {"0", "0"},
       {"0.`", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["n,u n,v: ", 
   MatrixForm[{{-0.4, 0}, {0, 0}, {0., 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777348364987996*^9, 3.777348376346963*^9}, {
   3.777350243765173*^9, 3.777350358828005*^9}, {3.777350422428714*^9, 
   3.777350460395163*^9}, {3.777350529593679*^9, 3.777350555911366*^9}, 
   3.777350642672984*^9, 3.777350685445189*^9, {3.7773507296511517`*^9, 
   3.777350753344968*^9}, {3.777350872339939*^9, 3.7773508845387983`*^9}, {
   3.777351101614748*^9, 3.777351154721899*^9}, {3.777351205839305*^9, 
   3.777351226882771*^9}, 3.777351284736514*^9, {3.777351314836548*^9, 
   3.7773513569063883`*^9}, 3.7773543039459763`*^9, 3.777354334115532*^9, {
   3.777354450333197*^9, 3.777354459859228*^9}, 3.777354553126464*^9, {
   3.777354620870393*^9, 3.777354633040765*^9}, 3.7773546716534357`*^9, 
   3.777356924426517*^9},ExpressionUUID->"e736b416-64b5-4212-90b7-\
d60d0b0de16b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Mod", "[", 
   RowBox[{"6", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7773564273148117`*^9, 
  3.777356453579486*^9}},ExpressionUUID->"725cd7e0-00e7-4967-8329-\
24b337ba20e2"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.777356430123892*^9, 
  3.777356453893033*^9}},ExpressionUUID->"ba00c44a-e29b-4558-bd8f-\
efc37c1968ff"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Angle", "[", 
    RowBox[{"u_", ",", "v_", ",", " ", "n_"}], "]"}], ":=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"u", ".", "v"}], ",", 
     RowBox[{"n", ".", " ", 
      RowBox[{"Cross", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", " ", "that", " ", "mathematica", " ", "arctan", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}], " ", "vs", " ", "cpp", " ", "atan2", 
     RowBox[{"(", 
      RowBox[{"y", ",", "x"}], ")"}]}], ",", " ", 
    RowBox[{"assume", " ", "normalized", " ", "u", " ", "v", " ", "n"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x_", "\[CircleTimes]", "y_"}], ":=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", "x", ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaTri", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "dx", ",", "P", ",", " ", "s", ",", "A", ",", "X0", 
       ",", "X1", ",", "XM", ",", "Ti", ",", "Ei", ",", "n0", ",", "ni", ",", 
       "ei", ",", "\[Theta]i", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dx", " ", "=", " ", "0.001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{"Cos", "[", "0", "]"}], 
            RowBox[{"Sin", "[", "0", "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}]}
          }], "\[NoBreak]", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], "4"], 
        SuperscriptBox["s", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "3"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "3"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "3"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Ei", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"-", 
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"XM", " ", "=", " ", 
             FractionBox[
              RowBox[{"X0", "+", "X1"}], "2"]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"n0", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "-", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ni", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "+", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"n0", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], " ", "+", " ", "Ti"}], 
               ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "@@", "X1"}], ")"}], " ", "-", " ", 
              RowBox[{"(", 
               RowBox[{"x", " ", "@@", "X0"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}]}]}], 
          "   ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"dx", "/", " ", "s"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7773708441973867`*^9, 3.777370847423802*^9}, 
   3.777371068927812*^9, {3.777375120535714*^9, 3.777375126662138*^9}, {
   3.777377803428556*^9, 
   3.777377824639226*^9}},ExpressionUUID->"fdcdeaaf-36d2-4029-90cc-\
d06cc68effed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"sx", 
          RowBox[{"sa", " ", "sy"}]},
         {"0", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
         {"0", "0"}
        }], "\[NoBreak]", ")"}], "/.", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
         RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
         RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}], "*)"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sx", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"sa", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"sy", "\[Rule]", " ", "1"}]}], "}"}]}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
        RowBox[{"b", "\[Rule]", " ", "0.0"}], ",", " ", 
        RowBox[{"c", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.1"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", 
        RowBox[{"-", "0.05"}]}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.12"}]}], "}"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"b", "\[Rule]", " ", "0.2"}], ",", " ", 
       RowBox[{"c", "\[Rule]", " ", "0.2"}]}], "}"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi", " ", "=", " ", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}], ".", "Q", ".", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Compute", ":", " ", "N"}], ",", " ", "S", ",", " ", "Lambda"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"II", " ", "=", " ", 
     RowBox[{"2", " ", "Q"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", ".", " ", "xuv"}], " ", "at", " ", "u"}], "=", 
       "0"}], ",", 
      RowBox[{"v", "=", 
       RowBox[{
        RowBox[{"0", " ", "\[Rule]", " ", "n"}], " ", "=", " ", "001"}]}], 
      ",", " ", 
      RowBox[{"x_uv", " ", "=", " ", 
       RowBox[{"2", "Q"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Lam", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{"phi", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{"phi", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
       RowBox[{"F", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    
    RowBox[{"(*", " ", 
     RowBox[{"n", " ", "//", " ", "MatrixForm"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"NN", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tmpx", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "phi"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tmpn", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", "n"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0", " ", "=", 
     RowBox[{
      RowBox[{"ApproxLambdaTri", "[", 
       RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N0", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"NN", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
          RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "sx", ",", "sa", ",", "sy"}], 
         "}"}], "\[Element]", "Reals"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\[CapitalLambda]tri: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
     "\"\<   II: \>\"", ",", 
     RowBox[{"II", " ", "//", " ", "MatrixForm"}], ",", " ", 
     "\"\<   \[CapitalLambda]: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ApproxLambda", "[", 
          RowBox[{"tmpx", ",", "tmpn"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"u", "\[Rule]", " ", "0"}], ",", " ", 
           RowBox[{"v", "\[Rule]", " ", "0"}]}], "}"}]}], " ", "//", " ", 
        "MatrixForm"}], ",", "2"}], "]"}]}], " ", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<n,u n,v: \>\"", ",", 
     RowBox[{
      RowBox[{"NN", " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", "0"}], ",", 
         RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], " ", "//", " ", 
      "MatrixForm"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.777355348674165*^9, 3.777355352683496*^9}, {
   3.777355582186399*^9, 3.777355827911322*^9}, {3.77735589330258*^9, 
   3.777356000175405*^9}, {3.777356058534583*^9, 3.7773561878691597`*^9}, {
   3.777356293452382*^9, 3.77735640669086*^9}, {3.7773564979615192`*^9, 
   3.777356642000392*^9}, {3.777356706063592*^9, 3.777356886916419*^9}, {
   3.7773569390679207`*^9, 3.77735713650203*^9}, {3.777357192955151*^9, 
   3.77735724252752*^9}, {3.777357305839149*^9, 3.777357354507504*^9}, {
   3.777357438462487*^9, 3.7773574680995903`*^9}, {3.777357506933341*^9, 
   3.777357605077725*^9}, {3.777361076228793*^9, 3.77736120788475*^9}, 
   3.777361304256118*^9, {3.7773613428135233`*^9, 3.777361428043968*^9}, {
   3.777361483283392*^9, 3.777361561964325*^9}, {3.7773615922743483`*^9, 
   3.777361625422873*^9}, {3.777361669330306*^9, 3.777361681487228*^9}, {
   3.777361772755834*^9, 3.7773617752242193`*^9}, 3.777361826451461*^9, {
   3.777362100115488*^9, 3.7773621415559597`*^9}, {3.777362210086636*^9, 
   3.7773622133489656`*^9}, {3.777362306529776*^9, 3.7773623199781437`*^9}, {
   3.777362363088443*^9, 3.777362413580963*^9}, {3.7773624865294733`*^9, 
   3.777362510135769*^9}, {3.777362557280755*^9, 3.777362561176607*^9}, {
   3.7773626422526903`*^9, 3.77736269558027*^9}, {3.777362745768325*^9, 
   3.777362762256084*^9}, 3.777363070376857*^9, {3.7773631345378428`*^9, 
   3.7773631345939207`*^9}, {3.777363174118162*^9, 3.777363206597921*^9}, {
   3.7773632455978947`*^9, 3.7773632460776567`*^9}, {3.77736515301898*^9, 
   3.777365196567216*^9}, {3.777365227805772*^9, 3.7773652288431053`*^9}, {
   3.777366279999053*^9, 3.777366285963091*^9}, {3.777370841370186*^9, 
   3.7773708425124407`*^9}},ExpressionUUID->"e0cb65a9-bef1-4f30-9977-\
bcd42999f3b8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalLambda]tri: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"0.78\"\>",
          0.7794148230952239,
          AutoDelete->True], 
         InterpretationBox[
          RowBox[{"\<\"-6.1\"\>", "\[Times]", 
           SuperscriptBox["10", "\<\"-17\"\>"]}],
          -6.071532165918825*^-17,
          AutoDelete->True]},
        {
         InterpretationBox[
          RowBox[{"\<\"-6.1\"\>", "\[Times]", 
           SuperscriptBox["10", "\<\"-17\"\>"]}],
          -6.071532165918825*^-17,
          AutoDelete->True], 
         InterpretationBox["\<\"0.95\"\>",
          0.9526133602610127,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ], "\[InvisibleSpace]", "\<\"   II: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.4`", "0.`"},
       {"0.`", "0.6`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"   \[CapitalLambda]: \"\>", "\[InvisibleSpace]", 
   
   TagBox[
    TagBox[
     RowBox[{"ApproxLambda", "[", 
      RowBox[{"tmpx", ",", "tmpn"}], "]"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ]}],
  SequenceForm["\[CapitalLambda]tri: ", 
   NumberForm[
    MatrixForm[{{
     0.7794148230952239, -6.071532165918825*^-17}, {-6.071532165918825*^-17, 
     0.9526133602610127}}], 2], "   II: ", 
   MatrixForm[{{0.4, 0.}, {0., 0.6}}], "   \[CapitalLambda]: ", 
   NumberForm[
    MatrixForm[
     $CellContext`ApproxLambda[$CellContext`tmpx, $CellContext`tmpn]], 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7773568760120497`*^9, 3.777356888462144*^9}, {
   3.777356929022352*^9, 3.7773569740067797`*^9}, {3.77735709346731*^9, 
   3.777357137075945*^9}, {3.777357198085226*^9, 3.777357235407065*^9}, {
   3.7773573115623407`*^9, 3.777357319517715*^9}, 3.777357354915818*^9, {
   3.777357453445075*^9, 3.777357468432233*^9}, 3.777357541371139*^9, {
   3.777357571626869*^9, 3.77735757851901*^9}, 3.777357611712245*^9, {
   3.777361077748186*^9, 3.77736111154676*^9}, {3.777361202404018*^9, 
   3.7773612082029753`*^9}, 3.777361307605419*^9, {3.777361352960559*^9, 
   3.777361387948938*^9}, 3.777361428488378*^9, {3.777361513378751*^9, 
   3.7773615436661787`*^9}, {3.7773616111857452`*^9, 3.7773616208036737`*^9}, 
   3.777361685662774*^9, 3.7773617758057327`*^9, {3.7773621225945787`*^9, 
   3.777362142083839*^9}, 3.777362214200427*^9, 3.777362321993078*^9, {
   3.777362363715983*^9, 3.777362433256538*^9}, {3.777362557705326*^9, 
   3.777362561603113*^9}, 3.777362704970489*^9, {3.7773627567017183`*^9, 
   3.7773627628952723`*^9}, 3.777363071259911*^9, 3.7773631350747423`*^9, {
   3.777363180588455*^9, 3.7773632076064262`*^9}, 3.777363247718487*^9, {
   3.777365198761767*^9, 3.777365229210985*^9}, 3.777366296853634*^9, 
   3.777370678583118*^9},ExpressionUUID->"3edfdc43-16ce-409d-ad27-\
3bf2e4351640"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n,u n,v: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.4`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.6`"}]},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["n,u n,v: ", 
   MatrixForm[{{-0.4, 0.}, {0., -0.6}, {0., 0.}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7773568760120497`*^9, 3.777356888462144*^9}, {
   3.777356929022352*^9, 3.7773569740067797`*^9}, {3.77735709346731*^9, 
   3.777357137075945*^9}, {3.777357198085226*^9, 3.777357235407065*^9}, {
   3.7773573115623407`*^9, 3.777357319517715*^9}, 3.777357354915818*^9, {
   3.777357453445075*^9, 3.777357468432233*^9}, 3.777357541371139*^9, {
   3.777357571626869*^9, 3.77735757851901*^9}, 3.777357611712245*^9, {
   3.777361077748186*^9, 3.77736111154676*^9}, {3.777361202404018*^9, 
   3.7773612082029753`*^9}, 3.777361307605419*^9, {3.777361352960559*^9, 
   3.777361387948938*^9}, 3.777361428488378*^9, {3.777361513378751*^9, 
   3.7773615436661787`*^9}, {3.7773616111857452`*^9, 3.7773616208036737`*^9}, 
   3.777361685662774*^9, 3.7773617758057327`*^9, {3.7773621225945787`*^9, 
   3.777362142083839*^9}, 3.777362214200427*^9, 3.777362321993078*^9, {
   3.777362363715983*^9, 3.777362433256538*^9}, {3.777362557705326*^9, 
   3.777362561603113*^9}, 3.777362704970489*^9, {3.7773627567017183`*^9, 
   3.7773627628952723`*^9}, 3.777363071259911*^9, 3.7773631350747423`*^9, {
   3.777363180588455*^9, 3.7773632076064262`*^9}, 3.777363247718487*^9, {
   3.777365198761767*^9, 3.777365229210985*^9}, 3.777366296853634*^9, 
   3.777370678584502*^9},ExpressionUUID->"1f9d8a42-12a2-41fd-9d77-\
70f28f1e9885"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"TESTING", " ", "ON", " ", "MY", " ", "CYLINDER"}], ",", " ", 
    RowBox[{"GET", " ", "II", " ", "AND", " ", 
     RowBox[{"dN", " ", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MakeCyl", "[", 
      RowBox[{"sx_", ",", "sa_", ",", "sy_", ",", "H_", ",", "\[Theta]_"}], 
      "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Cyl", ",", "S", ",", "Suv", ",", "k"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"-", "H"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"S", " ", "=", " ", 
         RowBox[{"(", "\[NoBreak]", GridBox[{
            {"sx", 
             RowBox[{"sa", " ", "sx"}]},
            {"0", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]},
            {"0", "0"}
           }], "\[NoBreak]", ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", " ", 
           RowBox[{
            RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", 
            RowBox[{"(", "\[NoBreak]", GridBox[{
               {"H", "0"},
               {"0", "0"}
              }], "\[NoBreak]", ")"}], " ", ".", 
            RowBox[{"Transpose", "[", 
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], "]"}]}], "]"}],
           ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Suv", " ", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"\[Theta]", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ".", 
          " ", "S", ".", 
          RowBox[{"{", 
           RowBox[{"u", ",", "v"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Cyl", " ", "=", " ", 
           RowBox[{
            RowBox[{"RotationMatrix", "[", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
            RowBox[{"(", "\[NoBreak]", GridBox[{
               {
                RowBox[{
                 RowBox[{"1", "/", "k"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"Suv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}]}]},
               {
                RowBox[{"Suv", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]},
               {
                RowBox[{
                 RowBox[{"1", "/", "k"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Suv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}], "-", 
                   "1"}], ")"}]}]}
              }], "\[NoBreak]", ")"}]}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Cyl", " ", "=", " ", 
         RowBox[{
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"Suv", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", 
               RowBox[{"Sinc", "[", 
                RowBox[{
                 RowBox[{"Suv", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "]"}]}]},
             {
              RowBox[{"Suv", "[", 
               RowBox[{"[", "2", "]"}], "]"}]},
             {
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Suv", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], " ", 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Suv", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "2"], "]"}], 
               " ", 
               RowBox[{"Sinc", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Suv", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "k"}], "2"], "]"}]}]}
            }], "\[NoBreak]", ")"}]}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{"singularity", " ", "safe"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Flatten", "@", "Cyl"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], "=", 
     RowBox[{"MakeCyl", "[", 
      RowBox[{"1.3", ",", 
       RowBox[{"-", "0.5"}], ",", "1", ",", "5", ",", 
       RowBox[{"Pi", "/", "8"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F0", " ", "=", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"u", ",", "v"}], "]"}], ",", 
         RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"u", ",", "v"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "1"}], "]"}], "]"}], "\[Cross]", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"u", ",", "v"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", "2"}], "]"}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"n0", " ", "=", " ", 
    RowBox[{"n", "[", 
     RowBox[{
      RowBox[{"1", "/", "1000"}], ",", 
      RowBox[{"1", "/", "1000"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"n0", " ", "=", " ", 
      RowBox[{"Limit", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"u", ",", "v"}], "]"}], ",", 
          RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
        RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"duv", " ", "=", " ", "0.0001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dN0", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "[", 
             RowBox[{"duv", ",", "v"}], "]"}], "-", 
            RowBox[{"n", "[", 
             RowBox[{
              RowBox[{"-", "duv"}], ",", "v"}], "]"}]}], ",", 
           RowBox[{"v", "\[Rule]", " ", "0"}]}], "]"}], 
         RowBox[{"2", "duv"}]], ",", 
        FractionBox[
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "[", 
             RowBox[{"u", ",", "duv"}], "]"}], "-", 
            RowBox[{"n", "[", 
             RowBox[{"u", ",", 
              RowBox[{"-", "duv"}]}], "]"}]}], ",", 
           RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], 
         RowBox[{"2", "duv"}]]}], "}"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "could", " ", "also", " ", "speed", " ", "up", " ", "by", " ", "doing", 
      " ", "eps", " ", "instead", " ", "of", " ", "limit"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"dN0", " ", "=", " ", 
       RowBox[{"Limit", "[", 
        RowBox[{
         RowBox[{"Limit", "[", 
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{
             RowBox[{"n", "[", 
              RowBox[{"u", ",", "v"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "v"}], "}"}]}], "]"}], ",", 
           RowBox[{"u", "\[Rule]", " ", "0"}]}], "]"}], ",", 
         RowBox[{"v", "\[Rule]", "0"}]}], "]"}]}], ";", "  ", "SLOW"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"II0", " ", "=", " ", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"Transpose", "[", "dN0", "]"}], ".", "F0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0", " ", "=", 
     RowBox[{
      RowBox[{"ApproxLambdaTri", "[", 
       RowBox[{"x", ",", "n"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0quad", " ", "=", 
     RowBox[{
      RowBox[{"ApproxLambda", "[", 
       RowBox[{"x", ",", "n", ",", "1"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}], ",", " ", 
        RowBox[{"v", "\[Rule]", " ", 
         RowBox[{"1", "/", "1000"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotL", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{
        RowBox[{"-", "plotL"}], "/", "2"}], ",", 
       RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{
        RowBox[{"-", "plotL"}], "/", "2"}], ",", 
       RowBox[{"plotL", "/", "2"}]}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "plotL"}], " ", 
         RowBox[{"2", "/", "3"}]}], ",", 
        RowBox[{"plotL", " ", 
         RowBox[{"2", "/", "3"}]}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<II: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"II0", "//", " ", "MatrixForm"}], ",", "4"}], "]"}], ",", " ", 
     "\"\<    \[CapitalLambda]tri: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
     "\"\<   \[CapitalLambda]quad: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"L0quad", "//", " ", "MatrixForm"}], ",", "2"}], "]"}]}], " ", 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<n,u n,v: \>\"", ",", 
     RowBox[{
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"dN0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], "//", 
      " ", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.777365676043063*^9, 3.777365852659729*^9}, {
   3.777366144784186*^9, 3.777366268831518*^9}, {3.777366314406253*^9, 
   3.777366414120034*^9}, {3.777366463996913*^9, 3.777366467667873*^9}, {
   3.7773665101316633`*^9, 3.777366706984466*^9}, {3.7773667407874413`*^9, 
   3.777366991422349*^9}, {3.777367037393765*^9, 3.777367040500883*^9}, {
   3.777367071381768*^9, 3.7773674576445417`*^9}, {3.777367491978554*^9, 
   3.7773675414468203`*^9}, {3.777367729232799*^9, 3.777367776131806*^9}, {
   3.777367815368301*^9, 3.777367900562379*^9}, {3.7773680062507277`*^9, 
   3.777368133664324*^9}, {3.7773682191219187`*^9, 3.77736822074205*^9}, {
   3.777368306944167*^9, 3.777368308173979*^9}, 3.777368437277672*^9, {
   3.77736879171025*^9, 3.777368795094906*^9}, {3.777368921136447*^9, 
   3.7773689635491962`*^9}, {3.777369082685898*^9, 3.777369082963472*^9}, 
   3.777369184546276*^9, {3.7773696889192133`*^9, 3.777369689044506*^9}, {
   3.777370102395006*^9, 3.777370104272847*^9}, {3.777370640334573*^9, 
   3.77737069982867*^9}, {3.777371320647379*^9, 3.777371359987461*^9}, {
   3.777371412741926*^9, 3.777371424042544*^9}, {3.777373153065618*^9, 
   3.777373161061751*^9}, {3.77737338631927*^9, 3.777373391811675*^9}, {
   3.777373985695324*^9, 3.777373994760385*^9}, {3.777374184541881*^9, 
   3.777374236840673*^9}, {3.77737486691677*^9, 3.777374907607133*^9}, {
   3.7773750368579273`*^9, 
   3.777375037166325*^9}},ExpressionUUID->"8d023051-3472-47b4-b568-\
02fb1ced56c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.004304964029979525`"}], ",", 
   RowBox[{"-", "0.0017831744867458559`"}], ",", "0.9999891437277958`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.777370700173996*^9, 3.777370807790263*^9, 3.777370854413453*^9, 
   3.7773710742078*^9, 3.777371360810958*^9, 3.777371424385689*^9, 
   3.777373162787138*^9, 3.777373611586047*^9, {3.777373986279344*^9, 
   3.7773739956289387`*^9}, {3.777374185968371*^9, 3.777374237159543*^9}, 
   3.777374908042218*^9, 
   3.777375037633716*^9},ExpressionUUID->"380f1e78-941c-4ac6-8beb-\
fcd0146d903c"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0/XdYzv//xo9n75WRmaxQthDizMoeGdlZCYUQGUUhlayGylZUSHvve3uP
q7qq66pQWRnJCEn49f297o/P7zje3+PnH8fxPDqe1/N6PO6P87yd56GnITtN
Vu9uqaCg8KCjgkKr5r/HZP81l826S1N+TJU+LSuiz/sc6xpvF8Ps7YdBoy/4
Ut+6TxU9O5SSq1Q+pvarBO6KW1oM0PAh72jZpEvb5eTZ9/3dMsV0bD/X830n
3Uv0cuOJk++Ky6jeqNq9p1EU9hq5N3lveorO3b7G/7Epp8Mz1h/4G/oA0u9q
fc+WJUIrpEfhyLBySt28+8mIv8aI3DDAcsHjXPSpS31nGVVOryyG+/aZeQL1
36yO35gqhWrGvU7B9eUUPW38y1GrvKEona40a54MpqvP/DoZV0G7dUfcLO8S
i85jan/dMizDoXbmgz6uek4eKprK950ycO/DtQUvd5fB16T9pOBdlXTB3mP+
b+8C2O+dEuSyT4bFd7THdm1fTebZksEuw0qg3z1eQe2HFEvqVLz6N76kWc7X
vv37JIP0RLRzN6kE1Y6RPmu7v6GsOe/tb9vKcc761tPIkkykahlPe9q/hpZe
luokFpSisMv4jSqx3hSypalRRz2PpK6GY0OPleDDFuXD3z6EUOLr58+vHywk
o31XhlgqFULTNTC0tW8oqa+wC/ZskFLKLTsnH9tMZCyovd8Y8oTm99yWZHm/
hKYqDTw6Nj0OVuv1Fn9sa4PWDnt8/hwvpZlPRmWsS3wMxYv2LpO+RmCrRZDS
pthSSp89tO8SJSucDOihr5WUDvXOD3wfJZbSvB99dgeU7kDGkr7b6o8W4Nzi
999215TSAbn6jzHX3BHcceKiyGfFuNx+99Y2l2Tk6Vy+aUF6BFYlpmjNOy5D
QnR7HetaOT2P/Bh7eHAaRn3uVbHliwxqVYoqgyZW0PU/axUXnJEgyrSmw3z9
UoyZ7jhmzooXtOVb4rRzc4qxuk/fe9vHS1HeLtz6t30VrbGqf2BjIcNX9Zhh
ESoSTJhSnD7u7ksq6L/v/smbckiHbzkfMDYDbfymDjTwf03fgkwaowxkeFWc
kP9Ex582LLXSbOuUQh8VH06/pVmKMpMp8ZfHR9FZt99VSs7ZdOfWWiWH8UWg
5OLAqXkx9Or68snqFyRUOkzrrWdTNvRsRwesfRVGf9d3K3PSL6T08sGhR9QT
oRH3bvYb+/ukaReWf3hHETXs6rN3+IUAbJ+guVNy5zGW9Ddqq5dQRMOavHpW
SC7jg2lXt19FiTgjcbQ9n11EgyaqaQ0wnYhk89PqoxblYvWF5dv2VRfR+l/X
O3ae5IbPGrqut7YXYXBocYPeTiktPj/V6FRiCJSWZh3T2l+C5hVsdHYppjPe
KsHmock40//Fxt47S7Hg5AT5e69Ssg0d5fvkZh7aHdGe2jCrBCkpTw36uJRR
q+yBG48ulSJjcMq/CVuLMOCF6tXDWs9pfGefKYc+leLrFovVM8rzkBW09/vv
0VXUZlvQ4n5X5IidNK+t3p00lA1WV3qCl6QfcT93eYUMtkfVVUIeBdPmRQt/
Pi4JoxYjta9WVpci4fC05wsV46lDssHIHxpJVNNy7RJ7TSlexOLfNe1EKihV
m7K+cwblOebu+W2ch/6ePcOGXogn6fdb+w6NyCFJwH3VGbbJSNip9cprSjCZ
1XRXULqQRytj1JWnnQiBVduA1RdPGuF606YzA63ySTHcrZOSrStcyhc+fpIa
gft/ykw/P81vXs/KOf71o3Gr/+++TpfTsX9ot6bLyfkk8dZRC3t9BX9tNOxM
ciVwScn4kTVXQkqqHbo3tQmE5/xPrq11pLg/0qr720UFJMl/b2O6PhHBn3WX
GEYUo+2WoecUVYvI98/Tqw1qORj+qLV1m3bFuGQ6wWX562LqYVvxLnBeERZd
j6+ecroQc/q+e/Zgr5xcUvX3dtYpRV9d84oRh3Kxpa5Qdv3gM7JZNy7Dbacc
8y/djQkdlAqVj46Ff/IqydRKSWPnNDm0Prb8N6k+jI5orB3Q0fE83cicIK0/
IsO+ztOuNixLJHe/Cx/rbIPo0sLvd3+PL8bsUyu6DN2VQq8spw7VrIujN0sk
N3/skWDojsO1fluSaVzG1MmzjyeT0ovOezd9SUVW/eORZRNiycL2p9PgKWk0
1mF/TPGJCIwbbrIk+K0njZrUofbv0XRSyY6cqqnmDvctT7SCJY/QYUX+5OZT
QT9VDH5FqG/HT6tA07axidAxyYz4npVOWv/mK1vXWCHC9p5l7dIcBLYl+cr1
GXTHemEnzZlPcKfnvsKNbQphvfTgma1ds8hyqHbYswHxsPuT9uvd5yJ0u3/U
zGJXLm153EZ1angmbtd3S6+PKMLB8prh51BAjZpLRj0aU4jEbfZ31K4UoESF
TpvflpKF/Y9B76xLoOp+6t/zxmz0+uS+d0WzXm0+6m2/sb8cK5OX1T3yTcaR
8Y79i6Mq6OiTvJ+Dj8lxa0Rm4HbFKNK9ETDHtU0QYnK63zr3VtZ8ngc2uhgm
096vOxXWS47j8tV1Brd7lkApo8OXXqvSaduuR1lPJz0i3U6/1IwcCxB6Zq3L
KaRT8amS8wsMwqjHs+M1ygYZOOA7c3Tnt0kk81+dbPAwhlYumtrUEB2D751y
HTQtw0hfp9EgOzqettxtdehxhRes+snbpwTPwIaWEdL37kQmRw+reMnMMCcn
fevYiAgUjErp9DaIyGlg3u/SMQfRfZpZEGRpUL3catgczQTCm1Fa+SoPgXYP
gw/r5SNjvn1Ea/dEsr/ovMMnOgpdhzzbbdG1EPqKwc9+OaaQ+r3FQyfMSYeJ
fl6+7cpC5Nz1JZNFmXTMeJ3R+/bNfrB+1vHP9hIoX/tiGtl8vlz37wjJ8y1G
u643atXNskCbo55Of1pEtuvfze8QJsPmmQ9KPsxLQq+WnkHfi0rpoJ3NlO/X
5VD8uK94SudY6q5t+3GsThI87JxOmEGO4ol+gUEbU2nDU7WJVR6heHg+N3ll
VQn8fz7MUeuQRdbXE693uXcbknqtazcDCrHXw/bi0fdZdCdk1M0z+ldIZ+Ij
33h5Fs7vGzxRwTqdNG+MTck09CK/R/ZWi/on4G9De+OMoQkU0bTwbsvnvqQz
36SH4XJfZCx7t//UxEf0fprOsacHA8jgwM6WDqdssOGn5ei3iY9w7tiMkGN+
AeRw1D01bPYKKKct8+k0PxFGvgnn9ZYH0sgjb/6sdr0NHOvWJexwFn6rJMw6
eymYdB4pb/B2CcPAa1edZnaXQDKYItsHRFDBqSVFoQUpaDDquTk2RwJ0vmwZ
MjKBJv9e1G1DeD72v4neM/JdHrarNo4YNTGN4jrpZMaQFI5HBy75WZGB6Ky6
FRn3csmoldlm18kyXF/SpcXo5wko7j/g/onaQvKwPhvm6irHsw/7P7X4GE95
xmf6fu+ag3azZt9VOCXHxOijY7aopdOqgpOBD74kw9e60G+SWykuXTy8wt0h
h2R+vqtOOkahZIfplUoqQsfIoJo7W/PoluEWi/Rjvhj7yfzXvmW5qHpuZ9O1
NpteDev23uDeTdQE3jl04UAS2v/69GPHtlRSSJthXZhtiRH3zjy+Ex6E+N8y
h8cjIyjBP1Tycf0qTDu0f3fyFSco/P/5wz8P/nkSP8/3B9+fxP35ecDPQ+J5
+PnBz0/i+fn7gr8vie/L6wNeHxLrw+sJXk8S68nrT7z+EOvP+0W8XxD7xftL
vL8Q+8vzQDwPEPPA80M8PxDzw/NGPG8Q88bzSTyfEPPJ80w8zxDzzPMPnn+I
+efzAj4vEOeFzxf4fEGcLz6P4PMIcR75/ILPL4nzy+cdfN5JnHfWB7A+kNAH
1hNiPYHQE9YfYv2B0B/WK2K9gtAr1jdifYPQN9ZDYj2E0EPWT2L9hNBP1lti
vYXQW9ZnYn2G0GfWc2I9h9Bz1n+w/kPoP/sF2C8g/IL9BewvEP7CfgT2Iwg/
Yv8C+xcJ/2K/A/sdCb9jfyT2Rwh/ZD8l9lMIP2X/JfZfCP9lvyb2awi/Zn8n
9ncIf2ceIOYBCB5gfiDmBwh+YN4g5g0I3mA+IeYTCD5hngHzDATPMP+A+QeC
f5iXwLwEwUvMV2C+guAr5jEwj0HwGPMbmN8g+I15j5j3IHiP+ZCYDyH4kHmS
mCcheJL5k5g/IfiTeZWYVyF4lfmWmG8h+JZ5mJiHIXiY+ZmYnyH4mXmbmLch
eJv5nJjPIficeR7M8xA8z/wP5n8I/ue8AM4LEHmB8wU4X0DkC84j4DwCkUc4
vxDnF4j8wnmHOO9A5B3OR8T5CCIfcZ4izlMQeYrzF3H+gshfnNeI8xpEXuN8
R5zvIPId50HiPAiRBzk/EudHiPzIeZM4b0LkTc6n4HwKkU85z4LzLESe5fwL
zr8Q+ZfzMjgvQ+RlztfgfA2RrzmPE+dxiDzO+Z04v0Pkd877xHkfIu9zP0Dc
D0D0A9wnEPcJEH0C9w/E/QNE/8B9BXFfAdFXcL9B3G9A9BvchxD3IRB9CPcn
xP0JRH/CfQtx3wLRt3A/A+5nIPoZ7nPAfQ5En8P9D7j/geh/uC8C90UQfRH3
S8T9EkS/xH0UcR8F0Udxf0XcX0H0V9x3EfddEH0X92PE/RhEP8Z9GnGfBtGn
cf9G3L9B9G/c1xH3dRB9Hfd7xP0eRL/HfSBxHwjRB3J/SNwfQvSH3DeC+0aI
vpH7SXA/CdFPcp8J7jMh+kzuP8H9J0T/mWe2U+/bKl+K1Dmn+G9SEXkpXevS
9lsRfu4Nm75lYDDpbjP/861HCV3cELPrfGou3K8G7axIeEDWJqe+jzxZQHqb
1rZy7lQCqyHHrfPP+5FkxoJlG3VlVK3TrYvflRxUBnnWfJr6lG60OrghrruM
tqzyVLV4mYTu9ZY7ulx/QGM+dla9NrWMFFf3KfIJS4SVgunVOG8jiq5IUpmv
IadtLax1LxwOhsLEU8rX1jpijNKDyPvzymnnSt3vS90C0c00a/JG22Ac9Jzi
rP5ETjUDTPUrxl7HCofmWV0QiRXWUhXtJ+VU6+d9dsVQB4T7HFual5MCw/op
/tExclo5T9E7Zl1LrOs8wPVYajqueW5UsAgvp3tfyW+Eax+8XT6pYvoUCRY5
vhjUMUtO45U6fNL769CsLzL9Lp4FGOTYtvWurHJSbez9YdlQF7Tc39Ns4ehi
jNOf7PFzUhllOmw4HvI3EIaR5elBR0qgcbPeNn9uBbV3KZm+6lkwZn74bTHm
ggxuJ0ZHf59fTo0bG/pPbkhE5zbtZJ1uyBEV3nXhbuNnVPDXt+N31WRYD+35
9GSxHJdfmn+Vjn9G/Vwcs38X5uCX1vLpV33KMFXtU3mFyQu6tkXWVa9jHpLO
Ll98r40cBlOvtujf9IJiNTalD7hchOjjSw3L3OXo9WThy05qVdQ/7p1yZTcp
bt8Y0PfBrhIEhN3Qi0qpovntHp5KPFYKx6i52qZFJVCuCdUI/1VNYQqH+8Vl
lqJ9WuuPLZwKsaB2x5lFWS8p85vq+K+H5Ph6dJd1yMdCSAcVLvdq9Zp0R3Z3
rb3QnBfmhjudluYgoceNK/5Vr8n3fs6YjCFyfPjTs1Wlcy4qFTQ2tOz/lk6t
vaD845sMvt5lEZ//ZkDuuUT9+as3NMIwrpWrsgwy6fIXP9ODqWf3ZKu6Xzn0
NORt0p46KTqb3PqSfCaSJGfPTr5nX0Aao9flXOwjwZJlv471rg2jOSVxZgGx
RfR0g/z2qiWp2F6znqYXeNGlR8teZ3YtJq0nmUHv9MMhUz3kqZdyB/V555ap
eBXTne63vYMu3kXBrjVXa6Li8OpeWOX71GLyqb7T3sdpHaan5LXrdD8LR+A9
wj+nmFImXOyv3ckauU9X7+hpW4hXEvrs1a+Etsb/9dj21wfdL/voXFhagqE/
r/qsUyilT7JZtnm6BHV/6wOn+sgwcup1N8NIGRV4Kz9btC0LTuUpmaPiSrHf
4VB7pzXl5Dtz0+mPJwrxJfFm1qATxUhKmDnLOPo5/e3s4tU3pgQr8hZN/icr
wM7LNxpWbKiib2NHvPGYIIfehu0+K7ZnY7Tlj/WfTF7SKvMvLsf3yBFn+GyI
eo8Isv6ywa+FRTLF/3h31kFWjEEnY06rHoun7eOX+Uz8nEmjJQ0/L88twKwt
1y/YSOJoTSf36MPRedRnvX6LtTHpyL4z087rfihdXWDZkl5IaN2jFhX7HaLR
/U3/y8WbrtG5w5r9+94uoOUnRh8smuMJNesBB1u+DcJMqx8P0vMKyDnixoMb
I49goJFP0NakFFwKGBv1urCAXFp4K9w0MIWryvvVdQ/zoRb799Wo9oV0IKTS
+UKQJz5H3FRQbihC1rI9KtvTCskl+9q5CdXR6Dfn8MArM0ugZz3v9cVlUho6
c3dR0rt06Jz9E+69uQQHbRZqGYWVkKdp7t91G5rP8/l7yxtOSSH9ZzY96Kuc
cu9ZPGqoKYahTGd/Q98CyFY1yZzyn1G3gjGfOhbJ0N6uPLHieybmudEv9T+V
NPeXV7z+NTnyO6VbL+kUQxmDDIwMy0NoVVLmlo2+Jcjywb6dLZJotZ/NwqNh
CbT4os3KtgaFmNnqpw4eJBFwUvfgq1SaMnT02cQJWdBum/E1uD6OjibZ6w1a
nkkuhdunqzbFI2P6ltyB9n6kmDfn+PJe2bTRbvjEN1Y+ODVg79RO/jdw+Mco
5UM+2WQgvzzj0cjzkJstfDQ5JA41Lzfu1orIJsf4owUTV29AZ6ndgvZ9s/C7
p3bE0t/ZdOGm9rnjS+9BWcHcY/DlAkhbDNXQGJtL5vGvT7fzDcfq+2Yt4+dL
EeG6zs5Ulk+R46LGTD+RilDzbcfaVEqx11N5S6+hhbT24cJJLcdKoKVcVTnR
qAh67ktv951cTPpTMhRWtyhG1qclxltXSmA25J6l5VcZ9dviZtxxowyXtJVM
pdcyMOCXwfx3PZ/R6S2eWwc3c1T9oi/fFsbHk8Py+frr1AzI7enEt7l7SxFp
EB35wSWFTOZ593Nw86PhzobSxSeKkGada7JleBrNVU/5fPlTFM3cWlWS6ZkD
jN8vsz2cTCM7de97IjWBHM0OFxVkJ6K1TCk4ak0UZb9MtqusTqL7c9utfxQV
iOCzH/pLI12o/9+aL7qBybRJptWxk7EDemyomNpLGoSvuxtanclOJv8r8bfk
pj1g4BxRXnkwBcf+btu/62sy/cqcXTtdch0D7aYdK+uRB5Wo5R2qKlNo6ES7
TgujgqHc6vfSzZMKEe+W7PV0XDrdG7it6XD3ZHy5uXPoocVFiI3/rV4wOZt+
2evG7f2Wi5udj434Na8Q9xLaqu60kNDIvT+7LmorRZc/tcv3fcvD0QvHVxn1
l1Jc5XKvhORSbDV+9b50VDrKHd6O9hsro+VWgXseWMuxap5PhH6/RGraaJn1
KDgYrZ1DpRM6y9D/YX/NpMY0snLYWlBVcg0y7RfxWRZSZLZ+uK/pYCZNzX8z
rPfN+5TYf3BHjx75iFF0tLAISadP6+zSrqwMJJdvTT1ajElBitquLlXpidTi
ioODr3YYdaMbm3WtQ7G95eTrPSsCaZJKZdWsTREU5df+3M5/N9BZcn7ckgw3
ONj36hqUEEHtW4/0L5mgjWi3x+82bYrD59a3+ix7G0ELRuvuM+1mjxr1wh1z
KjPw6a+i/ptlUc05suCjjao/xnY3W1HfWoJLb99m2k+No/FZbXQGRibg14br
l3TdCvBdf8CBxTOSaK1H9sIL57JheWDvvoC2BfjVMWG26b10MlSZ/U+9sRDR
804OnaueC9tWZ4tvO+RRsfm9zVd7leJMt5Ful2JS8b5jTggtKqJaxU46fVfL
oW3zbfPHyCTKfOEi3do1Gfk7/vZScJHBf2O997tJmbT3m1ud9ZtwFE6ytR5i
UowJm7r8bXU+h248cHE7ec8THv4m3dMiJbhdOzu1KD6brA7KkiY5HobO4x+p
rW6m4ar7uCmjoprn+ab9WJVNTnR55LLr5m6RiNk9vulgr1hSvne5ZfiPO+Qb
4DVyyT0PrDrXce5adzd6P+7bZ5c798nO3bPR9YEh7hhNrIoMCILyVReLBTX3
KWRCxS3jHhZI6JhX06U5j+rY+amHfPEg5VtxB6ZdeIRbztbGgaeyEV4y23Wt
2WOqGn1q8IV3sdBRnav81Ckfm87O3eIfEExz4hyuKnfJxGy7xT9lO/LR6/bO
N5LAWCq8XLP2+IsCtIjrtSl/TjYS4P9gbGMKGe2LsumxvASrDELzH8xNweBj
s8JNc3LIK7KLQUMLubhOfB3iOt+H+D4Q9+HPJf5ciM/l5yR+Tojn5O9F/L0g
vhevA/E6QKwDrxvxukGsG68zeJ0h1pn3BbwvEPvC+wjeR4h95H0H7zuJfec5
Ac8JiTnhuQLPFYm54jkEzyGJOeS5JZ5biLnlOSeec4g553NBfC4gzgWfI+Jz
BHGO+NwRnzuIc8fnlPicQpxTPtfE5xriXLMOEOsAhA6wboB1A0I3WGfAOgOh
M6xLYF2C0CXWMbCOQegY6x5Y90joHuskWCdJ6CTrKrGuQugq6zCxDkPoMOs2
sW5D6DbrPLHOQ+g8+wKxL0D4AvsIsY9A+Aj7DrHvQPgO+xSxT0H4FPsa2Ncg
fI19EOyDED7Ivgn2TQjfZJ8F+yyEz7Ivg30ZwpfZx8E+DuHj7PvEvg/h+8wJ
xJwAwQnMFcRcAcEVzCHEHALBIcwtxNwCwS3MOcScA8E5zEXEXATBRcxRxBwF
wVHMXcTcBcFdzGlgToPgNOY6MNdBcB1zIJgDITiQuRHMjRDcyJwJ5kwIzmQu
JeZSCC5ljiXmWAiOZe4l5l4I7mVOJuZkCE5mribmagiuZg4n5nAIDmduJ+Z2
CG5nzifmfAjO51xAnAsgcgHnCHCOgMgRnDvAuQMid3BOAecUiJzCuQacayBy
DecgcA6CyEGcm4hzE0Ru4pxFnLMgchbnMuJcBpHLOMcR5ziIHMe5jzj3QeQ+
zonEOREiJ3KuJM6VELmScyhxDoXIoZxbiXMrRG7lnEuccyFyLudicC6GyMWc
o8E5GiJHc+4G526I3M05HZzTIXI69wDEPQBED8B9AnGfANEncD9A3A/gf/oB
4n4Aoh/gHoO4x4DoMbiXIO4lIHoJ7kmIexKInoR7D+LeA6L34B6GuIeB6GG4
VyHuVSB6Fe55iHseiJ6Hexvi3gait+EeibhHguiRuBci7oUgeiHuqYh7Koie
insn4t4JonfiHoy4B4PowbjXIu61IHot7tmIezaIno17M+LeDKI34x4P3ONB
9HjcyxH3chC9HPeE4J4Qoifk3o+494Po/bifBPeTEP0k94rgXhGiV+SeE9xz
QvSc3FuCe0uI3pJ7TnDPCdFzSv/6j3qy/xHaRqaUHrEvBnopO204WCSuE18n
cV1r+eaXc4YH0e69fdLGxEmpY7eLgbdtCiDTPaD573MgdfFa3a3juFL67fdg
XuWyDGzv13Hlxy3ulL/KZdufGBktUcgL9XSMQftK0zCFre7I6jPRfoeVnN7u
8vy+9KEXNjV9MdvWrG+jOq9w7RMlp8oHJgsXqptBUTqrxd3wLPTadSd0aZyc
1tgrzfm91ASny7cFFpQWInL8J+2QWjkNqrSsV17/EMkpDdute5Yi+n7DxT8P
yijvtmx375dRSGr5b6XRETm6q5/plD6ogrIWbC7ZuiEdJofyV3zwl0PjX9bJ
l6ee045Mv9yXPQugaHtzs8mbUtgoausqllbSwyitG2PDiiGpqH7Y8boUyUuH
hy5MqqZPb/cZLo6SwVR11/UJpyRov9t2Vk7JK4pYqm+se10Oj6KbJeNvhVOL
X7+UNg2S0EW9CxVzvAqhl7IlsdfSSNIecmbUpoRC+pLU2twyKQuz6j7eGrw/
iK692vF9u5WUnJesyA1onQC7io1/9aTW1DbH1zH8QDH9OfB38vwuvsjKnzMy
Y0AwMlO+v8qPL6a465tm27awwfHzTq1ys1PQQTU7+lBaMR0/vUjFfO4qDO1m
fHhhVwnWdN2V7PuqmE7+WLe/7tttKMv2KbV5IMW+PhMHWB4rIXdXAzufmDAM
7Ttkx/hmvWllO0gyOKGUFqVXpDnXpCBvQ0vVQc28+OP6mYMD3zev/5LSVnU5
+Thz1sNQLinB/dlbh9p/rqDZex23lGZIcVXZ+m5FehGuFK2y1llbScpN7ZzL
NWUY6HzB69bVfGxZm9b76q5qevAqon8PNzlaJtdd8PeNocddTzw3e5NGW5/4
KPYNL4KNs8/6c1OIJNUGLhpXc2h6XufRO6bkwqDLYZthc6NpOPWpaT9DQr0v
2E+ZuD4JQxXPqx4b60PjjY8O6bOmgDwXts096hyE7ftOWq0bews68raK2QkF
NNNwTx8PbSe4FDuplIfHwS5Cfi1WUkCa44M7q40Km63aFDt46YEsRB7yv2VR
VUAnbm92tyx3QuvlZ2qf9itEveRi6nHdQvJTDp1QKQ/Cxe9j51lsKUbgsXF7
5QeKKKpL35svziehvVPvR5McSvAtXVvdwaCYAr0PxpjsysW4vOrj+5t9S2L4
7PTvmTIa7fdp8cPMIlR2z//Xo64Qbtctm5ILymmm/T7bQ3dLEWvaKchDNQ8/
z27e0KvqBX3Yeq/7DXM56v1UAy9PSCDVFsba5n+iabLCDM+b4VIkLB08wlOW
RHqvR7fIsk6mBvNrXWLv5yNhrPJaC71E6n53wbdxBekkaT+pSB6dArtWNV/v
z46ggb2qtppty6K3va54RJuEoalu+Jjvm53J+KBi/V/zbBrRZXzrxdNvo+fH
lvfCi4NQ0r1n8YjwbDIoKz1m3WUZ2rtOfnvLOwWp006GLkvLpj9ntcJk9TZ4
fuFIzayGZo7pt8T48P4cclB9qJ56xRcHn/+dWjeqCH9dDl0xWJ5HHj2Vu7wb
n4DVXbVcvUqbc4xRmyVm7yU08VNocdPnLIx3mTvadacUKqdLdw52LCJPB1+D
j1GFuDd917B17QrRYuDyQvUWpTR+1wvL4zUlaGfk32VQRA5OTIhyudNURoqS
jdNGzpXjaftW3Yv1k8ho0FzlJT3d6dyv0hN7PYtR9/r8+KmVqVRs6ehOmaGk
+6Kdbe0fCVY+vm/VYV0q5fZa4DZ8fDztOblfv7VaOiJcnP0zLySQ9veKe+/b
JNH+F8ON1jpFYV5di/keLQJJ55LThRdGyRR86Mq6lPcPsGqc2u9bv93w1uVM
gX9GMkk7v5W8VjwADXlF8udbcegzrnHW/IJkqtAfMcjF7jhK4kuf7nfNRM9T
xwKaFqSQ39jYkwv7eENha0Ld7vJmXrSqG3tXmkqLoro/2f4qBj0fKbae2KoI
E/6pB5X8zKCzs3pc0TfPQC83XcPfbYvQXm+zWqeqXDr/2jNU404BOsRUBJl2
LYB3/NXjftMKqdIopP+dASXId1ZenTojG4/jr6fl9C+h1LSCRTofZJjy9mzH
MIMUOue7ef86JW/krg3wXn26BH/LUy80BmfQq7RGK8Mv5yjoeu+NvZtzTFDT
y4/1AzKpY41jV58BT8i8xlz/871MPO9l27F6ZirFBrzf9WRCCFVbdcmx+BIH
e51Sm0sfoun90K/pgTfC6VOHWbWqfx8jfuzXW1md3CjLsSYuwS+Core2ezrf
0gox1Vl3FfOC8CPV/7d5cgTV9P0S0Pvfdlgn9/he1yMFvza/cs3YHEk6D9+3
v7bFHV3WTOj6810OtLofXPeqMpq8Vw5Tbekegbi35z4XKBZgfvfJalUTE2hH
wJCbBu3TYHN6r7u5YwE+vJk8dWlYCk03GblhsKkEXQsdS3a1lGC/tMWIuR+z
KOR2/O4kzWJo7/TYedg3E1eWTbMN1yqgBa6yK0nHZdDTnZXUXSeNltzMK56B
eGR8GvtgPUqxbduJkV9WZ9OLsckLLaYFIiRLZ9TD6UUomxMd+McnhyYsKZ/R
v11z3s1qk5jfs3mOvdsoDKNM2uCfIf216SyF7pH4mMxJRMD4X/+GpyXR8aCl
M1d8v0Gr17zufTgjAPv0b87fvTuIPhsPWm5Xf49cNJ6debrpCqz7D891TXFD
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
LII+ZZPvQ7+xmndSMSl1w63BfklUM3notH9X7GGWfaDjpIsluDK6KDHPL41k
OzJ7mU33oGG9YrdW5Rdio96u+cvS0umUdftVIUODyaxpYoWzVQ5m/8/7miz4
fSBzrceevuOciqG5VZrjhiTQpB0J7wu7uCMqq0ekhU0uQg/2bDFwRCL1H93y
wejBYXhyeK/6zT0FsJy5K//mvGS6uqKHceTkZBRsNnQ9czmFFtUuPvndJhyu
419MKF5cCrWsOd8DxmdSrzO12qHDPGHSvuuPHc+LMDv+6MlBvbJJYU+VlW/3
WTTi76qyP7V5WP0/7zvaze+HyesbdnXfc8KqytrYO2MCycImaKjSeleMu9LS
WMkkA+ElDoaPKIiGrP+wVbooCG3Tij6cOp6HMcYRE2Rbw+jxOIcMvbIEnBjv
ViBdmkZSecnOTR9ScHBfz3cBX0pxcuO3d7/ONet2atqI9m9jcbXdzIhxFVLs
lH2xXKCeR0ZaL5eW9Q7GA/uzDXseSaAx+f/5cy32v7cETYjStbw8x2iG9vTt
ap8/lewMReWKtwPffVlAeq2Lj609fxnVRwwPSscmY4NBtXSjxTGSdvswZMGF
p3CKv/ty1odMaE8Z+/KPpSN9Nbthr60eB32nr/396tJpdZ0e7t7Lw3uPbten
WMoQklVWIvfJpXxtJ58+n9Nhove1ti6tGJr6W7c52kio7/D9j4/NSMKzfMe0
sLwCbOf37Zzl9+3E8Hq2KwsKc7XwgKejfnmkbQCuvmmgl1GWkCwxX/K6OX/W
+l016Vblh5G+Oe0ko72w6c4mg6tjmvWjeuuAQTWPEes1sld1cSSilLZNK7LI
pFWGjjsejpXi7JuJ2UpfZFA5ONjupU8+BT30SbgeL0F0v9lvT90pgcKSCykZ
zwrohMLyV0sts/G5eqbTuPeF0OH31RTy+2oe83weCtry8dAoO9rwrJ9WmTdh
TXBNwZNdxnh+ur5jn1OBsHM77eI1kLAo8mDZ3YH3cbeTZ/qPWQk4d3Hao/0q
ccgchjP58aGY1njl8qKGLJp9c1GvB93kCGy5wWyxjhzHq9yOWSc355TJb4dc
uVyMEfoa3Uo3lWL2UfMK04FFdGp+rwFa+wtRm+h2SeNnEX79z/te5vN512p/
es75KD+6HLGwKTQhHUcNXrWKy1iErP6GS6cFXkfV3KaMQTea9+ua5vlWVi4w
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
m7ivBKPypJltthdQddpMpU6tMtBr43QTk7OFmMe8lMe85MHz2X5Vbc93oSdo
aqzimXZP49CpVaP6+z4myPgY9jtofgjOpamade8VgyetpqYerHbHlWntkp8P
TGrOWdqSxa/CMWtURceLCMeIQsfHnplZpF74aramqQwaxlmmWrPkGN7ZeKbj
xeZ8FZqesHeDFN/MVZsujC1FXsz2iPhHhWTS7qT7Zh8JzqmGfRzT7MMNzEuc
jzCPz/vyRdf79EnyoaW7XmZPTk7DID2VXYs6r8Ky3fvNNDu4o1o2KCjcNRXm
LfSW7CA3LBmVU+Q1LBpPVMZF28cmQ/687/UNa4PROePW3fLpOc18qN7z0vpn
UPpQNdz3hBz98212ORsX0O24zUe2q8vx5WVI4Fp5Kaqm9ShKLi0id7fKXq22
FqPHnZr3r12luM28ZMS8JGP9HLHn68uiOVFkZWqmeMs/Dw+9bNusn+o7u2/N
7XMxpy+R0sQ3q51v5EK6LKD1nuyrGF5qeCjSJAAZW2O7TvyejS1mn+u8D/gh
7K6zhfqDXFLU6WGaoFyFSyrdPqm5ytFilFefUyik3dM6dp3Q+jnMR4x+3c5Y
htHGxY/ufJFSzfzR0fK+ZdiaHtZrmm0xUpiXdJmXtrIfTZVqlR13TKLIoq4u
P5cVYXAXZZ3XR5Yh3GB5zuBB/pQUq1YoyWjO9417XZTdziJlr1uLhz+cMemd
TmNO10IkrXGY3uGFN1L2p4V9bJdPpc87jPzn+BIfrz4ZZOoix7ucxfbe7Yro
WmiXe7WHqtBeI3jNwioZJnVvPaLNz2IKG9fVf+Sz5/hRaO1Us7Pk/95vZsW8
dIj93WJup9GFFhnUOHjPu7B5peiv8eP7TJ0DUHvx60p+bjTZRLVsakosgXIK
tZze8hC0WxY25HS6QSs9Gj6GDyjBm7v3DPU6e2DtlTHVszUldMjUbNW31m/Q
YUJbQxszOVa//fLEJa2I/jVN6e1X9RLLrHWv/54hh4nDrgvv3pWQrNMNGwdp
FfauaLXo28j/Hy8N/x9eyptv3PPx1jzSeXyzzEOrHDR/wlZzJyvkDTEdbKOb
TG6hf2ZVR5YhvuURjxkKulhruaD7qjlBtMKjTjJzaBnamDY+8Gh7A3nxgxut
2viRNPBGaWX/EhqhJqn4EtOcn5cONVrTKpASBpsmt0spJaupg7NbHsyCxsQZ
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
8RR8QjwFHZinPE7pFnlupT/Oftf/i+RSEjoXfN7Y0ckLdIjvwBLiO6jFfOcj
6yHarIeoMz9S+ginjv28BD4f717XESXi6V0LLr5t2gQR86Ptvm3NhityC/qV
TcrAQaW70m7+8AXJ3Jyvc64XwsmxE+z1N2bgiajb8j3HRYHLmJdHlzwqgqiV
OYG1/pkYqDfe9UZYKrzn/roEqf66f/XaMb+D3cTv8ATzu9xtPjv7GBdBU7S1
3pbf+XhU4fzURoNiGEE8EZgn4nvmiVMMVux17lEIVt1WtN3yroXXLhpZa5Df
wnOJbwLzTZzAfHNy0oZUxcAs+L0gzepRlhiPxo7da/RLArtm2ze+e5mMcdP8
ziyudANntyozF59SuLPqlE+eYQaaLchcF3D3Iio6bJdrViiGNNmiXR86ZuGH
rw+uNObcRZVJ70Kjtub914/XLNWPF8fzFzx357kT8WXcTXwZZzNfFs/tPPS8
cQquVK2ymhYdijMLW9dt1ImEHOLd6Ei8GwOYd3f4teOtZn4U1odtV+3+OxRH
B3wytQi+DZlL/vJ3mEH8Hccyf5/BelQe61GHmO8P9bp2w2LQdXw0a9ViSWII
TjqcdLRXD2tI1tup51WXChP7lOSsmZWAH52N3LVyb0CUjPW3RO1cULa6LTda
KQFNd+1+cn5YOFQUXnum51kIXd/+VtXqmIgvnGs7DDVI/mcv31ep+VKejyK9
AupIr0B51iuavnlXaciJwHXNqYHFIWnotbVz8FmNFjxJuge8IN0DO7HuYaYR
vmuvWj4cu23QtXZpNp5bELLW4ncJhJJ+Av1JP8F81k88vfblHRiWCZL9V+yj
SwpQ5vy9D9+dJPAs43tQj/RUfBsfIXfhbRS89ts0aZJZGfz2fvkwOTMLX33d
PFnrVCDYnNs10mawGBScLs9TmpuLmd2Pf+ub4gn9No23URAX/Nf7ZybV+3ed
54U81+M5kP6DcmV/9R+cy/pP38Cw/g6qmWirPHJdJ53jOMj8WODlk7FgRzoS
mpKOhLtYRzols3ndprIkNB73cXafFw7o41JZrl59H0SkR6GY9CiczHrUYtYD
rVkPXMf6lczoGRcWN4eigeX7wEQ1axzrBi/c487C6Qs6l87tSYAdx/dOer4i
ANPUOltu0rwCpYO8bl5sOU8Kk57a9NXxx8Mx4lc7TIOhKG1T8bvMXNg6ZkB3
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
vOEPrwde9V4dVAoGlvcSTrmLwIPm+IrmaMhznU3n59dfDkbNqT8q9pmK8V1y
VVkPlSJYsONm4pDcEKzb6tJ//L1SDNt1025ppxxIHK26QuexH5517zn5hpYE
F/XL69/2ctJ/PrvwPiwz4fM33B/2NOAh+Bw7cCLuVjlq+45e/33CVTBJ6h0w
pDQJZuR+BYPYcgxtfSV3y4dV0Fz1oPL5qFwwMzdZ9jmhHNe5OSx6vPIwHJPq
g+3DvTGX5f2NAm6Xwn61w7nn7CpQvH1PSd6ZSNgP3U9UdC6HI17NVoseVGL2
n8j237xT4aDDBrPLknLQ2OMcvtS6Go/aTVKbrvbv90+FObzTsckthfBbg7/c
OFWP4gqNkze7l0Fp8tZXl92L4enZgIcrdJ5gtK6Okd7Icrh1BJ5ee14AVz65
2L3o14i3B3XVu+vQcp36d8AY0SMsODtA9s6+AvxlPOTDciiGrwefvQq4H4VH
22zP8BxThMGybbraWeeBQ8PhGN0/4Xje5lqW+H0xNgxXzwl+lwKbpd4DJfjF
nTOSFGZbu8D+amt5K88SvFPUu9uL2Fsw6IpeiGNlJGzMzjn2IaUED5iXBKUP
3A+b8zoPs9dJB891frN+ppdgYWZJvP3kDTBUqj92N/cavV4/1UVzhBgmNpXv
2rK6FE18Knt0Ox0GfcNcl7Z+Vwobp1ueMVpVhraVW040zUyGEZ2HPe+lKoHm
7nvbHvojwXhX5UndE3L+6ecqz88s21hWAq/a356opl2De8auXXNHrxR2HU04
7FJaBAaan7q0K6lDT9+KuNXpEniu+T08+kQ+2Fj1jM28+xi7vI5vnHu1HFwS
covaPYzBW5ryv9crpKO7j6fsunli2N8xv1diX8TSYJko1UU5qPlns/mJpwWw
rDHp1OYh8fh2628Ve/UCtJ9dExOzLh3ypd4PJfit2tBxV9GGq7im9kq7kPMi
nHOj1ZInd+/BqAqPl0W6frDWd+gEuWwRfmznM36H00kIHL+0x5WViZD0qbVT
eqEIbfqvLxFtmQwjpPpm93Dvlj7qfy9zFkFuxM+FpjOKUB3mjpzv8xA+y6y+
Zxkjhr45vpf39CxG//XbCk5IEJweTVZPXFcKC0cOfKd0QYxZs3rqlOn92yc9
WdJF70yBGOY3P7JssC3HRQlmVnO2lsAfuUPjQzsVQUpVt+PWeVWoPbT5ytD5
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
yvNBhvJ8ZDp5PrbmhpNfJ5yLJ2Yunq/qqqST6qrE6Ko4ZxCcMyhmzmCi6rlw
VfVc0pp6LvIYhfMWxcxbzFossV03JEn6Pw9nrd/3text90/sklSEqO5MylV3
JiupO6NOTZxVpyYDqVPjvEtw3qWYeZfd73jM6dQtCw7na/UKXhUn90aF9Oxz
O97o5kDdnJRSN7dEdXY4pzo7iaHOzswX/sUyX9jT81Jn+9+TZeL0ovKDO8KQ
3emQ9PfOQdmMWg97vZ8qbo32jh7q5i4nw5vsn74uDT+rTlBmqE5QjE7Q1EM3
sR5qdJTDVG8o51VvKLU/V71hKeukuayTGj3mTtUtymTVLYovdYv1WD9NYv3U
6DrPWPShfVkP5XxYcD6smPmwj6Y8eMYtNwlnAu+/GtYsQhLbBFZ+dz0SZ4ds
W/NWx0s4/scbH3Q+eUoadm89t22feKPHRLjqMcXoMW3VVanrRC/VdYrRdXJ/
cNhSb6U+FJtUHypGH7qeddhSSx3WkXXYiazDGh1ujPKrZZbyq+FHfnW0rkvC
dV2ox3U91H2QU7oPOMt9KFJeOhyVl45K8tLL9T5Ux8s19wFRvA9z9f5gjt4f
yeP9Ic9fmivPHxHk+TvofZauep9Ryfs8QfUOKFG9A3ypd8hR+0K02hcO0r72
qR5EVqkeBAuoB6lzokYvA2/Vy8CNeplozhn0s8wZpG5aqJvGu9RNb+XcvWGc
uzeCujnqtfGE6rXxFPXagzi3rqllbt099XuyQP0eJtHvUVcu1JXD6ModVIcu
1KEjmjr0Vzn3bS7nvtnFqG7Rb1+NH8Z99cOooh/2V708qJfHa9TL/6T6euxV
fT1mUF/vZJmzFk09Zu2kmndB+C7gGN8FviPCdwS3+I68qf0BhP0BUM7+AOwn
IOwnANNPgP0HhP0HYPoPmHln7FeAz9ivoAHnlPXjnLL+nFPmpO+gzNN3EKF8
B/fpuyne+m5Wv3v6brKvgvysfRXgy74KN7UPA2ZoHwYcYR+GQ9q3AWu1bwOu
sG9DkqUe+i3jwLeu1am6M+AQGkb+1TjKvkAG/mX/7OEru3GhzrDE+EGC9a9X
DE4aUiBH1nf59qUlnibufVyv3Mm4d8qnbhMOVceRE2qlO3cKKZXJsTP7zEzK
h8usvgucxufAy3epW93p5XL470UdxzcohA/riSGsJxYzzu/3emFmh4iVKNsY
/e3R7bly4jfXYfOfPWCzrpdxcUP5sO15KOnf7dGOlv+Shn2vpLZslY/LlrrY
H8zLrPWdIOaVBv+cZqMfqbOlH+kP7EfqZulH6sl+pOde036kb7MfqcEtZ1j6
kc5hP1JvG/1IE230I8229CM1eKMd8UaDMzf68duypOvp0mFtSK2EQScRf+tm
5arPz8F5vr+3Q3KiDEq7OSZ85nHErPXe+lFOBJKJBzoSDzS4ekXfly8+WJ6K
kS1be33nskpG1tr98jXXS0g4vSwneEUyhr44715p7mG5sMXvqZZ//0+8zpd4
XS8HRD1bkilfTv6s27SOcRjuV/de7K7zGEvcbC1xs27EzZrW8T//65dJ6PjU
G7t7jTmKsFuBx9I6pj/GnboSd2pF3MngJ6uJn5i6VTbjriGMu+ox7gpifBXD
+Oo446tQxlF+jKOMHuRJ/T1ir79HjvD3RDMuep5x0QzGRVwv9up6BVyvrTgn
XvdTBut+wuwn91966P7D7H8g44f3GT8kMn7g+WK4nq9E8Xx5H9BJ74PE8T6c
tvHu+FreFzPX1dY7kqb2KKVqjzD26GF5FyqoZ/dTexfaO8Jp77bmadKfCP0J
jD+ZrP5H6H8whf6nicUPu9MPJ6t/kwD1b9hE/zZf/aHQH8KR/pD9fPAk+aid
yEd9yXVNnx/somRwSfcuR55Jl2u5G2dc9c9BD/Iw25CHOYU8zBP7++3vUv3/
Bj4tNudMyJMH6VHb726JBG5/+WbvYTFyIMg5pstPCRLnsqGvo1cuYke+vqjq
qsiCHg997XqliOONC0umtss0fbEe8xWvka+49e6ltvmDs3Ctv2f406ezpPln
n0+6L8fw+9oBvWMX5+KXV7qP892QLSO27Clp84pgOuejJXA+WjTnVuzjfDQ3
zkebxjkXoZyP9hvno9XnfLT/65yyg5xTdt4yp8x93cKhU0r2y3Wvh0fPBydI
kLv75E43diC3W4OMcbmhqNOwRV7rpATx/DAjYs6FKWiTOPXOAJ/qvC02pd7H
Z3Nk2/r4pFFtL+PmuqZNYr1TsH266/drXS9LWNCejLiehfBL+OSdhB/746Nj
XlktjseIg/OVjIv+i/H5uuX2nh2SUeJdeubo3Ww55XPZe8TlAsynjo84gNQi
DjCX+EArCz7APoESSV7fcPL6AvTzpVQ/Hyf5+UuID1wnPtCE+AD7Pcp+8tza
k+fml1Tz+8VXfz9a8/ff0PXKNl0vzHpb6/5Ile4PzP7Ywgees/DEfiNPrEj3
X/5uULP/cOX+j9Pzwg96XtjA8/r/zm3J4tyWTZa5LSWc2/Kfmp9CuxDaBUbT
LmhHQjvC07Sjs2qP8FF7hLHH0Wq/CFX7xVnab6Tau9RXe8cj2vsI9Rug34Dx
G06WfiMmvp3AfiD0n/KI/rPnB0Vue1MSkPlfJfPHJVfb3Tc/NXObNN34ZzS1
9PEYHPtOvkePDOw6Wn7k3hPl8vOwtlcX/3c/AUv/DZNH2E11GzLmzTDYtb89
d/PoLNl+80Pvo/brEPHWisl1/yHo5xO+1e71LPnEfULq7tO9EMO+GassfTOW
zQtKXvNbFtK2vBE61KlYSgLXdt/wQrUdfdPpH0d/TcPd5CeGzU4pkcKgtK/6
bijEWc6FdLQxF9KFcyHN+fI+SBPLXEj2aUQS+wDfZZ/GTzm3scgyt5H3ELyH
km6Z28h7K3/y3noVvjFq6sI48Rv8qcsNtxDpkzHM9VG9fOSUuPwVU/eCtHFf
WfzCgFNid/uA8yL7bHS19Mstpn39HpkicxonY9PFnH29+1yQLh8iN3z1Aczt
12/l8+MyseRsUfjlqRfF3TMsK/NIFBYtfKLugB7x0ujrPXdjBu6Dy1vzIoJj
8g0/9nGf2D+j1G/8cDnqKYfeCRg75/j3sa6x4jRget9Rq/egjaWvaVP6q00W
HXEm44oK6n9vUf9bwbgl2qLbnc34h98rI/V7MYjfe5h620XU2xqc6j1dF7gu
MesKsuhkTzBO4/7IYt0feHB/qnQ/JVD3Ez25n/nUt7pS32rwt1w9L7TQ80Jz
ntd8PV/46vmiN8/3PzXfyjp/qj7nTx22zJ/az/lTtSzzp9z/l/lTs9W+hPYF
Y1/vqT1KutojjD1SByFB7LdZybjiG7V3ob3DbqLae3v1D9JC/QMC6R9c1M/I
bvUzqKCfoT5FWrHPpBfjIkf1Y3JJ/Ric6cfOW/oodmfc1XDk9YXwOSXhpfmJ
mx/mSqONXcsKq1JxqlGHQ+3nHpdRA9q2iAvNl0M7VrbbsfQ83mFfQc4ll0+Y
p48IWTB0x/AC7Jrfc/eXTxbJMzJv+HPR8Rg/u+UbdV0L8fpA8U1MuyI79lRE
2Q9Px58nX/S7Wh3vHQ8sGxPyr2zZNvDliUc3JNjs1/ehY2X+1dOXUfZWUE5a
2WV5Z+2PK2p3SbWJDw+18O5Smb/Y4rmRbyAB5JV1Z97UbEr7zypXxsnoHm9v
vXn/tEwpTf7T6ew3j/ldDSz8rqpFPvETA7OwY6NIN8dk8dz6pv/m6vfD8Kyc
yLMy/JCDr+xcbpd4QUqbb0kOiAoVX/favae9eQaHNzZpeKAiVv4O/HWkS/YR
CQ4rrnri57DHPKiW5EEZPszCme0al03NRK5H54xJreIkaHReyOzwLESUzRxl
Py8dS3MLegTLRVnRyj/3m/DqfETzX2H+iwXMf301X5YEzZexifnyLM2vZa7m
19jP/HqW5unoPL4mT5dpzNO/17weAZrXSy7z+i2KA+BVxQGkkjgAf6cs0d8J
8zsX6LokW9eFrVxXmO4PqnR/sJn7w/1Eoe4nFnM/f9dzEZ4LvHguTfV8MVzP
FxN5vkssdfNg4hs5ljr1HeIhH1nqwquJq6zQeyulem+xkPd2HuuzxG2QT9zm
odoFjqldIIh2Yeqk8yx1UtqX0L6wm/ZFe5Qdao+wpz1acTbTFzSC9c3RrG8e
I65FP4CR6gdwgH6gkfoNHFG/gfr0G/8G5tBlRg==
   "], {{{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{
          TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAXYFdXXxedO3XNG7G5REBVBBUHAAEQQFETCAhRQETEwsBNERVQMwO7u
7gQEO1HsFhFFsVDB/tbPdb/n/zwMs959z8ydO3POPnuvvc403few/qPTJEmW
qydJpn2VJ8ngIkm+EG4vQxttXwqvqc+vC0nytfA8bXO1cRyfP1tz+z103KZl
kszQ39vJfqu25WVfSudskvv8a+g8x1RJcrv+6Kv2G6v9E2q/tD5fRpv+Jf1k
30T2p2Sfr7+/SnzsQNlbyj5N9mP15Y9p/5Hsq+ucR+uct6nRR/p8nv6+RPZF
+nx9bTsID9OJz9PxTfX3xfr8drXbVvY/9XdLbbsI/6H9Jtr6CG+sNnvq924k
vLeOnaRj19Nnv2prpq2H7CNlnyr7hvr7F20baOsu+yjZL5K9hf4eITxFuLnw
wcIXC28kfLjw5dwvsH7LHdq/rWMPE75VeI7wb9oWa2uibYm237UtrW177quO
1+HJ2tqvo20p4aa65luDj1tTtrW06bYk68t+W/A51hU+Tsa7dI5u2lZUG92K
ZCfhprm/ax21OVZt7pRtkf7+WVvkPuvzNXLjR/XZ0zrnstwT/f1L4u/qJfu6
jevZQRe4gU5+n9oco9/1iPYfyt5V9vVlv0d/b6n2t2t/i7bOPB/Z7xJeT9dw
vE54tz4/Wsc+JNsHOnZPnXuGvncd/f2kPntFeBXhnjq2mY59QLiD8FrCNwl3
VZtlG/2KvvtN4vt2igw3CGypNmOFbxRuJ3ya8E3C7fk+4U+FDxF+T/gT4YOF
z9F3fq7ru0DnOVv4M+HzhY8Tflv4ROEzhD8WPlv4XOEvhC8U/kDX9aHwWcIP
6ZzP65y765ynq81Hsk+U/RHZX5B9D9mfFZ4tPFT4MeEXhfcUPlnt31X7sWr/
iuzvyL6/7EH3qqP2e9NXhLcT3ld4GeHOwvsJT1T729V+a/19nvCdwtvyu4Tv
EN5G+DXhd4VHCC+rY7tov7+OvUj2+2XfXn+/yFjUNRwk+yWyPyB7N8amrm2O
7CfIPkX2+2TvKvu9wjOF+wufojbvqc04tZkp+xuy7yP7DOHXhfcWvlOfP6bv
6K02NV3DFrINFN5Lbc4p3Acu1eeHq11r2Rfq77XwPcId1eYYtam4HuGrhDcT
PlL4CuFWwicJXy/cVvgo4SuFWwsPFj5XeN2andzm2g8ACrcR3k14K7U5Wm1i
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
pPBvsi+Rfb/KPmeR8P6V/dKvwsOEvxGeL9xVeDQxlXAX4YOE2wj3q3z/DxXu
X7lvHCM8oPIzPU54R+ETiIUaPvjthh8m7xtcOv4kVn4qdX60vdq+W9pX8N3H
Mq8ljld+Y/4W/lz2sTrPOcKfCZ+aOV/+VPiUzLkwz/s4YoDEv/nszHEOv3mC
8OWJ+8FZmWMnfOhi4oDEfWJi5niJfn8McX/icXIU82NiX7+AuC1xP/hWeELi
sXo48zVzh+w/pcY843My+0nmvCmZ5/pziKsyz9GM+UNKn5OxfZjwJOFvhU/L
zBsQ8/1ArCD8jezjMnMI9MsfU7dfSN4n+2Th74THZ+YQmFeWpL5+fM2Y0r+X
eeh32S8Wvlv2Z3R9/YiL1c87B/NsR2r/at3z5nDZ2wbHb+/pHG/hW/Dzsm8R
zJ8cKtwlmIs7THj7YH5vhHCHYK7mTn3XDPq+8MGyzazbh98u+3TZ+8o+Uu07
BXNBewlvFBz/7CncIjjG20N4w+D4h5zhQ22rJ54HXqy7v23CXKq/N048Ts7I
HHMyNs7MHCdfL/x44ZxltM7ZNZgzvFb2x2TvRdwi28t1xww3yf5EYZ92tfCj
wj2Fh+rYzYNj132ENwuOS4mxT4drShyHrpM5FiXeHk/OkDgGXLXRN/CPL6bm
YfDXh2TG8zJzQzxTOKgBjTkODoo8ihwKvmKX0rEoeeZLqTkceJhBpXNA4tGZ
qfkE8pOXU3M18Dl7lM6n4GH2Kp3rwfns2YgB8NHPpI7x4CT7yN438Xyzb2Yu
tCW5l+7V4/RJxlxw/8fXP5GaG8GnP5man2G+OSAzJt9+ODW/Ct/ST+ffPfH8
NCLzsfj9h1J/F7xc/9I5MnMTPBHzOBzOrqVzMbiavo0Yj3h9Vmq+C15r99K5
M1zKbsL7JM4FJpS+fuL/M8nDE8emF2bO14jnzs2cs5xM/8sck5PHxIadGP4M
Hfto4pziLDiLxDH+apnjfHK9ceQPiePdizPnJsS4lzT6CfnK2g07Pvok8qPE
vv4E4esT+/ETyYMS50qnkm8kzr/GCt+ZOKc7pRH7wUt+Tc6ZmK/8hhw1cT66
fOM3EuOenzknJX9dLnMOS4w7KXNeRn5WNTB52cnkNolz2WUbxxK7X9A4llz1
tEa8d5PGyJmaJ67TcZ3UX/LosXaD9mfIfk3DF36V27/tQbwQ7Qv3rHtuxv99
R2xbM0c6Wu2/zO0nd697zsZP45u/zu2Tv1f7I2qeO5gTvmnMC4eqzRe55xd8
w9cN/4DPmN/wGwuJqWuea+YJH1hz7If//ji3D58v+0E1x6576Rq2jJ4TDlKb
93Pfc+afBY056Ffm9uh7ybz3d+65b7e6cwzmnIHCLaKf1QDiguhniI+f1/Dz
B8MV536OX+kaRtU8FkbJ/m7uuLq/jr1I9/YrHbN05nyavsFz/qnxvC7T/k9t
04Q3yJzzzUycVw7U915Wsz9bv7BPu0Jt/s6ca1+u/V+Z81D63SqFz99Mx+4W
naOumTnPZizQf+uF+zDz9r+55+4VMvMf9JM1MuffjMfjS+ce+JPmOufu0Xl+
i8zzwAuyz5LtUv3GFmp3qex/NPLE1dV+l2gfvKZw3+g8cob2l6j9Wmq/XuY8
eHrisbikMe5WVfs+0WORcfl7Y2xeqf0/2p7n/mTOlZ9J7NfXK+zbm2bOp8mJ
6PvkPPyuRXoWraJ9xmS1+SWzH8CvfN/wIYyzHxrjq6P27bTNrLm2tae2TxPX
dEYUrqlQU9tL22eJa3ODCtfdqMm8WnMthnPMqnlepna2m7ZPEtfNnq+5dvZM
zXMg56FetoN+/wrCU0vHvsS9c7U9V/P5qdN1V5sVE1/HazXXdzYiH5K9eeKa
3d6Fv6euzz/AD+IDtX+/Zk6pOTGj2q8v/GLNNRjou40zz/8vJa4PDin8/S/V
zEPrspIW5FhwC4nrQb3hExLzV/uq/ffCL9fMU5MObKj/BgTn4NS/9i98n+C0
XqmZ16K2tVPwdQ6pO1cnniIe/CV3TEU89XPumOoX8tRao9aja/6uEX8SV37b
iC33rpsLIP4ixvwzd5x5nj7/MbP/XCozv4WvXgSfUXO81yQzJ4dvP1rH/p7b
d/1Knl2zHyDeXNiIOY9Qm+9zx4Tw9jsG86gf11yLWDMxh98zmOekZrdf4XtA
7W/n4JiKem6PYP7zUx23FHNS4nmS+Z6xObhuboKY+kjZf8wdtw8i54uO5Z/F
f6hjbAx/kjmOezExL9oyei6Ft51Tc3/L9J3bRs9L/6pNx+i55Vv6jraWjDt9
z8jC9cpm5HvCfzB+iXd0zLrCu+o8I4XXE/6OOFHbpol/3351/8ZewsPr7ofU
t4k/6W+r6pzDG/2nZWqeCI6IfrFv3X1jPWKYwrXUZeqOdfFFK5FTFe5zy5F7
F+7TFxFrqN1yifP7oXXn+KvVHTO/mTiv+aLw3LZI7VcK9qUrkJ8X7vfkoMSr
jMeV647b4bQZr8Pqvoer1B2Tv5GY09modC18J+ENS9dK4RFalK65Lqi5drQJ
41H25Ur77Q2Fly/tb+F4iHXxafBOr+mzIbK30X710jxjZ+ITeEPhLbRfrTTn
WK87NsbHwsu9qs8Gy96T/A4OV/hL4pCaxzJ83SuFOYd59Iua/clO5EFwo/p7
Z3IluE76dd35CH542bq5R/pYVXf+wlzWm/mwcC14Te2r0nPB79qvHey3/xRu
Cpch/IfwusHzHXzVWsE+HEdCDkJ8SMxLbsJY2Ja5pHSdfhvhdUvX6bcWXqd0
/boLMVvhmnhad47DnNgp9ZxPLEG8uagRj3VMPf8zvxPbfFg6d9tZn2+Qu9Z/
tWynERsJb6D97cFjYara/NaIOfn7T/pp4nz010be8YWOXVK3L8JHfay/bxL+
Uvu/6p6X5wr/UXd8smNqX4gP7J56fDPee6T2AfhDctLvCvsmuOse0bnvMnCr
0XkPcWssHLuulLn+wH1eMXNNg2dB/PhzI4as6dito2PSlTPXLnhGxMVLFY6N
V8/MnfNcllP7ntFx9zTtL5b/Wa5wjLxSYV9KXAw3ir+9SMcuzhy3t9Nvvax0
ve8a7U+nD9GvmFdLnxP+8MPCsSC85UeFYy+4wQ8Kc7OtUvOYcJh9dI73S/MG
m6bmrOGr4T8/Lhw7dk4d2xL3wnXMLRx3bpc6/iW+/ZlrDr7+LqljTOJbeJIv
C8e4cLNvCQ+vmXedI7xvzXzs28L74Uu5/8H37Vp4CGJW/CT3M7gPwBkvH3x/
WuvzS/R3K+FviMeC47cFxHLBzxH+4dvCc2Hb1FwqfGmb1FwzPPMWqTlo+Gc4
jW8Kc93wHgsKz3kdUse5xMzTgnl16tlv1Oxr0Z+gY+kTPJd1x49Gc70H6hm+
lDl/3EH2C/XcP9Tf3YQvgG8VfjN1nRn+YW9d/4O5OeGb1ObTYI7qnNQ+jLnj
bOGla55TRur4FzPzVwMZQ5nr6bsxzjLX089NPb6bNu7bYzpnE/29j77r4dxc
dA/8dDRPv53w+bq293T8HbJNQKeE/5P9z+Aa912ynyX7HbJ3lr2K5kzeTe0j
4T3g05aO1k7Azb+fmZ8fRl6buy7wRuq6N3qMHdV+xei6wezU9Wc486Hkr7lr
B22FO+WujbZS+0eD44AtGR+54wHitxN0bffp+04mMKx5Xjsl9bzOfLSF2rfP
HZvtkpnT5/60kb1D7ufYB5+X+Z430znv0Hf9lThmuye4vnZS6louc2grHbtJ
7vhzKx3XlpykcewIbesID8rM78Pt76H9Y5n1FVvo81nB80p7nadb7phwcur5
pIXwZmozPbhms3vmWgi1gHZq3zV3vLqXbE9k1m9MST23bCS8p2yPZ9ZmbKX2
3XPPa5vrnM8Ez3MdZN8x97x2Yeo5bUP8g9o8ElyT7iK8VDRv1lrtN80dj1Fn
uCd3reEefT6RGoD+Pljf+WpmTgMO6bXMPNI9Os9XwVzI3cLzgjmhg/T5K5m5
kWmptU7wSw/Vzd3DS8GpnJubV7lU3zVW33UmY0bHvZ6Za3outVZomPALOvb3
YA3G86m1QsNlfza1bgXuZafStcCezGXCp+aurW+lY8+hFsX9Fl4YzFd1FM6i
ObcOwueqzRziXWJD4at0/NOpdTrwQqP12RuZOa4ZqbVa6EOmp9ZwwZs9ovN8
F8yZ9dY1jMtdn0VTRH0C3muUzvFyZt7sMn3XOPj9BrdEHRF+aRu1n0Q9Ru36
EntG+7hdhKfK/oXs76WOd+AS+9Vd28M/HqDzvJrbH44Ufj23n/w0tc9m/H6W
2mdTO6Pu9FFm/gEu/PPMnAa1LLiwccIjdJ6Xc9fdLoJjoBYFN0YsHBu+WG0/
y8xpfJJ6roDX3U/Hzso9N/VW+zWi57CdiZej562XhP8I1uRsK3yezv8u/UzH
PpM34mRi5Oi4ebjs03PXKJkHqa1SJ9xf9udyz4+9ZJ9CDQy/lTquhH/uKftk
amCydxVuEs1Xz6459if+IQe8NzRq9Kl5YWL77WQ7ODru3Vb4oOhY9xadKzLv
Jv7syZo1onz2eM36w6dr5sLJkW9W+5C7zU3C9dxtWuuce0fHvcTTj9asP7xB
bQq1eUf4VX1+pa5/u8Kx4J016zavVZuUGFp4jtpcqza7qM02Oueo6PPdqDZl
7nM+WDMv/j4+XJ9fo/Y9CtcKvsyce6KZ7K7t3cRax50Lt39d7a9W+26FY9O7
a9aR3lszN097dJXbF75mNJm9tL0n/JqOvUrHdoHXqLmej/0FeB3Z28p+jb6/
lltj0ErXPyQ65ke727/wfX6H+6T2A/T39JprBfAYW2SuLZD7XCec5b4/56pv
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
ynk9evPf+a3R789Yov3U6Pfr/BPNr/L+nl+1fzL6nSiLtZ8c/c6etDI3yzuB
ftP+qeh3n/BeENYckP99Gt33eCcT/QEfx3qYb5n3o9+zhS6Dda3katTimCOZ
H7/R/t7o9bLoAliXzdzI+GCdKmMErSJrt+Gxv47mnFnzemPDNxIz8F4JtCPk
cYzz5pnzTXSsE6NjJLjRlo02aFjOjo5beKfHBaXzHeIU1mUTq+BHNsyc834S
7TN5Z8n8aD6c9bXfEUtEvzPso+hzsmYCX8KcjT9hrdn5wfrtD6OvhzUW+A/i
cnzIx9F+m/edfBA9RlgDsUD7+6Lf3TU3mrdnjey8aN6etbY/a/9Y9DvDFmr/
YPS7yr6M5upZd/sj1xj9PrPveSbR7/r6KpqrZw3uD9o/HP0+sFVK63CI+X+R
7Yno97FRF2yRWhPLekPeGTQssR/inPgi/BPnwUcxr9IHmFtPC76GMxLrC3hv
w3/vC6u7xkB9AY0u9QBqAcyf/BbmUOZw7jPzOO9EosZAfQG9LnUIahCseaSe
QS2DdyjxzhTmVnhHxj7cI9oEYlniWGJV1iMQr6KBpLZBXYP1krwHilpkk8rc
I2s70E+yvpp4A1+2YmqNKLEJ95/4hHc0UUugjsA7mqhhUL9Ab0xtY//Euj7W
gePb/27Mf/Rt1vtcGaz3Pjp4XKAVZL3PFcGacHIjxi/5EWshLw5eR0DdmDFO
7Zj4cvvUujVyL8YyMTDrHy8IXl/A2OuWen0TsWnX1HqnKcF+gDVQxIJbp9Yx
Eudtk1oPiSaT9dvMI8RB9E9iIXh9YjjiN9Yo4yuuS6xZfb20VhZ9I3UmakzU
WOhX1FlYf3pR8DoItBQPpn7vHGtUpwavoUAnSR+i/6CfHB+8pgOdKvUtalvU
avDh1GtYl4MWER0iWl/uKfeT9TToA4ndeFfhlNL80peNGJFcj/cX4rPwV6w1
QT+Gbo13LrFmD66JdSdo6ogVmSfbNGJLtN8nBeuXeJ8i+kS4JdYDoXVEC8l7
mSaX5utYx1NrzHu8ewndH3o43tuExg0ODB0y70EbmfgdTReW5gDJzbeprI1b
VTb0cvg5dLzU+ajx8a5HNIZwP3Dv21bW//FuSHSL8EmsrUFXiS6O9ziif6Q+
QlzWthG7Ni+tmcSOZp53yR2QeM0Tuk10lf8HlL9K8A==
             "]], 
            Polygon3DBox[CompressedData["
1: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
1PuWqPLbfOz16IfP3Rj7R0Xqf4tXyUU/6qQ+ukAVbuStTuqJi1XJXT8EjwNe
Dnw4+OtO6osrVvHVP3RSr1y2ii/+yu/L8Rap4n/3KFLvXKYK1/Il9pP7yZ/X
5XzetxbQT767Dvg98LRcn5370YBcwLrj+9F7LM/yG9YyjF2qxA97Wj/sR2+l
luH1IvXqharktu9wvBnklqs8K9aA5jJ+rFJ7sQYzHfh/Ve5ta0DWA1epwk3+
6vzUDz+9Ffv/rEg9cI0q95Y1ipnBa1a5V6zxzApeq8q9Yk3IevLC4D3A73Zy
/uar+v+3i1wv8+9VwW8VqQevUIX7/d4cGLxSFV/6Yyf5+IJVuOC3O6lXrlrl
Xvqtk+u5ZJXna5/B9ZmvyvO5K/gwY+km85Gx767gsarEF2pXjpCrbDK/Gjsb
HzzahEtUe2e88WQTrYJasd3AY1fx72p1dvd+q+J/1XrsAZ6gSjyktuMQ8IVN
5lNz74Plspr4E7mxvcFTVfHn1gr38vpXiX/VfuwJnrBKvKuW4AzwI01qL2rD
vF/mr+Jvd5OrAj/YhNtTO+d8+2wTLsBa9DHgOav4Y2Mz78+lqsSr+4KPBs9R
xT/vCD4WPG+V+W0Xa1Pg2avMP+YCPm/LV5kfDihy/6xcZf46BHwa+P4m8521
2yPB1zfxH+ZC54Kfa8KNWBv3+X+lSS3YWvf5xspNtETW3s8DP9+Ei7F2bvz3
RBNtiNq9UZz7OO63reTvU3rvVZmLfud+mQq8Ovg0/TN4efBYdbRZI7LdcuAx
6tR+RxhcT+tr6gHH7eb7yE+oxxsRvKpcBuNvZfzocozgcepoD0cCzyffUKc2
ZI1oHnC7Tq3Umqn6rTuqcEn3dqKPus8aJ/ihTu4f80tz53PL6LkeqpKrPdKJ
HuyBKrndw+Alzd3raF/67P+gfvhV89GTjKOwD1+HC2qK1MfXruILrfn5e8h3
qc9csJvrrZ5L/cEixi4sz1tHizUN47cGz19HKzKd8Tx4vjralWmL/H5bNMmN
Fmf7TeQ+6mhVJh/cz/L3Q/UR2Bd2rqzi2+VAFpe7Yfxl4Bq8KHi9KtyLHMxq
ckt1tDRjFMktJqtTqzTHWNC5topvlwOZBvxjldq5NXSfR/lP8+VTyswX5r9y
DReC32P54iqxyXWd6FGur8KV3QZ+F3xhFd96Lfgl8KxVciM1Bq+AZ6uiRVCT
cEA/fK3822Hmef3wvfJtR5TRb1xXJVa6tZPnT32uWpvXivAh81Spxb+Kff9+
9KPy6XuX0TNcWsW3X4/9E/A14GXBt4BfA58Gng98GfjQfvgDuZPz2f51ls+o
Eltf3ol+7KwqsfIVnfA5c1Wprb7cyXxg8qCW76Ui84t6TLWGrxTRCz1RJbZ9
spP5Rf2o2sWXi+j9bq8Sm97TyXwsXy73enUZ/d5TVbicp4wXfNaqxK53D/if
uatoCV7pZH6RH1a7dS3bH94PH6UW6krwX96bVbirpxm/Xz96W+sV22MfzTip
iNZTzecExurg31rh00YyNwZ/3Qq/PnEveubXnU/lQ3rRa72nv9af9aJvVqun
Zq+owpdM302OWVbx/zN2k2NO04t+9n2W9+pER6Ne9oNW9DRT9aKXVVukxkht
zhVFdI9qdEbSF7C/Jbp5RiftRS/2pvM39kl60RO9Ad65Ex2oeibnV/WgY/ei
L3L+VUOrDlR9kvOtetBxetFzW3/fphNdrnp1tX/qc613qlXQN1svkz/euZe5
13qk9U+1C8Ya6nGM1fQh+g5r8NaTrb0bC6g/MhbRp+hLrJlbW7ceenCRGrv1
6R0Y/1Mn9Tv1HxsWeVbVa6q/UAvrs6Ae3mfFZ0ZeTz7Pevj2vcQa1gOtR1vr
N9azvqcOWT212kT1yNYa1KPsXaTmMHIv+i79qxrUohe9tv5ZDeXUZbTC+3fC
b9834ItXL6JBUwtlTGIsoiZKHal6dOMN9aT6Hn2QvlyNh1o09SzqvdSkPTPg
g9cuopFSm7RvP/opNUrWe9cp8qyrT1RfolbcZ1n9t9p060ny5vLl6mk2KDKX
qfdTr7J+Ea5YzvhX63vGQN34uO/B24KH78bn/ALe3hirG5+qLlX9+YOt6FPV
P2+NvexG36EOWn2/8YqaO3VW6u3Vrqi3+pbx2zB+uG58lrps9fdqWdRnq0NT
36/2RT2aOjP7JYzf1JupS1NvrzZFfdoovejvjDc27UQHaf/AQ63oIf+2vsbx
Ju3Gp/wM3s74vJuYQB2s+n61LOphh+mlX8D4Q42q9fZ1i8yd6j/VK2zBmE86
0ReZCxhzGWtZU5M/Vy+xM5/XOuGvrS06V1pPNxcwxjO2UwOuL9AnGIvZs2Eu
YMxrrGsPxu919AHyxPLD8t/bFFmWM9bX6HOs41pjtP5jbVdfY/3deqG1Un2b
emF9lT7Luq41RuvDmxaptVpztVYrf24d2JqtejS13OZW6jetnw4p4nus91sf
tzZtLK8e1FzAnMDcyZqcvkSfYmwpv+xc7pxurChfrv5G7b6+R/2nvkSfYqxq
T4K+Rx9kbCvfaL3B2oJzvfp4fYE+QZ5efl5fo88x9pcvVz9irdDcRb2B+je1
8f426h/Ur6k91/eqL7UeYq1Y36ReXf2RWnd9kXpT9Sxq98zN1Lea+5mzmKtY
87T+vlkRX6Z+x/q1tUNjQfWI1q7UT6oLtYalvvnYIrHbfu3oFY8v0stiT4v9
LycWiWUPbUfPaq3fWPSwdvTQ1r6MDfdvJ5Y1pjU2t+Zmb4n1FevS1qPV31ir
/aITvaj6lG16yY3VG6gXUltgLqzeRT2RtSRzX/Wk1pt36SXWVp9iP8QJRWLr
Q9qpx1tL1fer97BeeUyRWG/fdrRV6muOLhI/W++zFmLsqx7Y3NIc09zYmqix
mzGcuZ41DGNnY2hzL2s0xjrGPNY5rZlY37L2YeysXtZY2ZhZnYKaBGNDY0Rz
NWvk6nWsbcs1qD9UP2TtW25B/bF6Tmu3cgnqm63vWHsxlldfY61YfZE6T2vG
au3sB1HvZvztuV3chI/zHI1NjFHUyamPU38zL8und6IPsZauZtrfx99JrYcc
hb+Hv4u1PTkJfw9/F2vzciaev99DrZs5uP5Wv2utzRjT+9v7XG2gGkF9jT7H
2qU1zFM60Qio9VPzp6/R51gLdE7zefG5sTZnjObz4HNhLdAY0ufX59jaqDXS
UzvRFKglkLPxenpdP+OzpTFlNzmTtXk5AecP5xG1sXIgPl8+Z+Ya5hzmiuqz
zWXMacwtreHbT3JuEZv1KmsJ5vjm9vZsmOuY85hbqse2n0ctvLnMhe1wl+bU
5tLW9O2fUHtvbeGsdrQGciDOH84j1vLlmLwfvC/sV7E2b+5zdjt6eXsprD2c
2U5viP1O9m3ZI6KWX87K+dR51VqHOa+5rj0Un/qdjcG74XjMh9RrTtbN+egX
5Cvlm/QPzjvykVu2M//oR+Qv127Hn+hn5O/lq4b2HBXhM537/E31W9a35If0
X/sV4f+2b0eDuX8Rfm+HdjSXxm3ymXu0E78dVITP3K0dTeeBRfhEYzdjOONA
+cYd24kHjfPkB3dvJ97bvUj9a6N2NCX2ydjPpzbAfhn9iPWwIe2BxqNIfU3f
qw+2nmM/5Ezd/J7Wi+yfnFlusZ38WX3ACOBj28knrVlN3s3vZX6vfmoc8Cnt
1I/sh5mnm3qa+bB69uW6qeeYL9vPsXQ39TjnKeuB8pPOVyOwvJDXoJV6u/mz
/RfLdlNvNF9WzzFfN/VG61n2e8zbTT3PONR64RbtxKP2aspRyU3ZP2b/jL2h
1sI8X/t7rLuZG/v91D+oRTmuEz3Z5yxvxfZFN5yF+ge1Jcd2og9W3zGHvFMn
+jW1K3JWclVqWNQe2w9l36UaZHuPzCGNN4071dqboxqPG5er9ZWDcO5zDlRr
Zg5sPGJcohZdDlLuUU262mc5S/MH8wi10XKC5hvmHepR5uxFi6/eT+2XObvx
jHGNetp5sJ/WiZ5ObdE+/ej21Rip37C39fBO9Br2PsrpDeXyOtHT2xt7WCf6
DfWNzlvOX+r37AWVs5Ors9/HXkU5QrlB+79mZPyMvfSaqQectkxv4gGd6GnU
IskJygWqSVLLdEORviU1TerlZ2X8kZ3oDdUr2It3RCd6xenL9CYd2Il+U326
87TztXps+43sBbaWeXI797r3fH8QF6hdkpMy/jAOUbujhsf9exz7K+3VkOvx
eVHLo6bH6+V1k7uXw5O7sz9FLYqaFK+X181CpL1Nckfy3faHnVakV9aeWfvX
Ti9Sez2pnf4itedyO8e00z91chGu7eh2uCM5JLlQNaDWduVw5W7VpKs9t5/R
vls16GqX1DB5v3vf+yz7TI80iJPUIqlJ8n73vrcX0H4W+2rtCVSLIQdn/GEc
onZFTsH40jhTLYWcnPGEcYVaMTkO4xvjHLUYcnzGA8YFFmLlSIz3jfvVHg7l
PDqJK9WeW4MwHzUvtfZhDcQ+cXvmrI1YI1ELbw+e2iU1TP7+3gdqAdUEen95
n6ntUeNjPmpeOoZ1tDr349D7kn2d06ReaQxkbLF0FW2QMYa5w5lN6p/mEPY7
2qNr7m9N3v5Ge3jNle1ht9+vqsIVWKOXm5CjsF/Pvj31ccNX4U6sCdo/OmIV
rkLO0VzTnNP+OPvkrPVZ87N2Zl+ftTprdurb1LmZq5mz2W9o36G1Q2uI9gPa
F2i/hT2E1gbtIbJfxR4/a4P2XFlbtMaoPlKdpPq/EapwJXKicjdyOPajqnlR
W6LGRP2YOjK1KGpS1L+pg7uqF77N3EcOTm3oSVX0nNaC7Ve6opfeADWhckFy
QvYDWxNS39yqkqvKkdpPYQ+vXI09Y/Z32NNn7mqPt/0Y9vDK1ahxsB/EHlFz
b3vczW3Nce3Ps0/P/hF7WOUa5LitjVojVa+u5tnaqDVS9X/qAO3/sUdVX2uP
/53YpmfddK3EpMaKM1TR2hgz3gGerooWyDn3bufbKu868J0Hxn7TVtEGOYfe
771aRbsjP/IQeMZqoO0BP+uzWaWWL9/h3O0cbn/lrdz/T7N8dJXavz1hj4Bn
qqLtsefX2HWaKtpV58QnzS+raA3sAbzXeLuKNsh3EPi+hdGqcHnWJO33sAfA
WqUxjXpFe9zkGqwJqDe0J06uwXc26Ev1qb6PwPcSGKsZs9lfZp+Zsa0xrv3h
9omrd7TnVm7BdwTIpcip2M9rX69ci5yL/Zb2XcqNyJHYT2pfqXo/e9bkTnzn
gf089uzJjfgOBbkXORi5Fvsc1Rva8y6X4jsO1FaeUEWPrLbCuWPcKr2uziFq
pU+pcq+qdbCeLN9srqqmWr2BfK65sBq8B3upb5h7qxlUq7hHk344tSz2Y9rz
pfbLHme1jrs18d1qsYx9jIEmH8TN6gMf6+XdBGrw1PLdXIXbUIug3kD+3FxO
TZ16B/liuRQ1gHf2woebi1ljuasXPt9cUo2j2rurqui51YbYS3BPlWOphTCW
M6bTf+nHjPWM+fSH+sW1B/eXsYEa0HUG97exhJrCkRm/c5N+cLU79pLt0qSf
XG3cuoPnRV9uT5yxoDHh0FqKvrGX503fP34r/Zmnmme10qNvbGiMONkgLxky
uP+N1dToGqsas046yDuMfY2BJxjEicbGxsjjD+KEx3upL8nXj8r12aVO/Vw+
fXxjsjr1Wfn6CTrRh1n/MLayR8ReusOrcIdqE9SHzVIlVrKn6cxe6iPmss4h
cjNXN9G/yNGc3ct8IXdpzUJ9kM+r3KQ9dOp7nA/kdu35U99jvULuSk2zeiDn
A7lgewTVQ1ivkWtR1GQvwblV+hfUYthrcH4VbkstinpB5wO5PHtm7AU8tEr/
mlo5ewkPrqI3Vqv4Qi/1Cuvz4xgT1KnXWE+yX8d+sNt70bZ6j+1Wp35vvcJ+
tBd7qU9Y/x8X/FQv9T7rKaMZI9Spv1gPHMOYoE79w/rNmJ3oH50/5Xbt+VFf
Y/1KbsUeD7WoV1TpL1XrpPZ49yb9qGrN1CNZr7HeZP+WeivrQXKD9kAszvHG
qZKrPNlOrDEeePRWYg5zD3OQz8BXFXl/xU51vovfSf36HnW0X2oC1K8+28u5
+x3UQnkOHtseMvWo9jx57byGvm9mxzrX1musnt+eObUwagrUH7/cy73pPWps
Zox2RZnjq+VR02M/qz1N8obq0dxW/tB+jVd6uZe9p+03sGfQ38bfSP3Vlmz3
kvNbK+/PsefN8/WaqX1RA2P/lj059i/ag6e20xzN/kB74NR2moOrHVRDaD+b
fW32W+xfR1tkDq5WVM2o/WH2idnvYM+u2iJzdrU/aoDsn7Mnyf5fewDV1phD
229oD5naI3N2tT5qfuz/swdKbY4aHfv97FmzH8OeW7VMcgb2C9vzp7bHnH5F
47N+dJvqNdWbbWF9xLlqUC/brButo5rH4er4KH2T8XpZxwfpe+QjR6jj0/Rl
xvf/VvGR+kb5zE4dH6rvlM/8qUrMZ6wnP6hQUR+q75RPHLOOz9RXmj+MXSeG
NHY03xm9ToxobGi+MUmdmMhYSP5lkyp6U39j9XXz1IlZjVWtYf9cJaY0lpR/
/bVKTGosKp+q/mBD62ntoV+5tUadOd+5Xn3m6uCR+tGRqh+1PrRtN1pRNSXq
+TZ3HgEPaww+yP/UxaqHNX+0l+yNdp458z179V5vx0ebT25nvbGd991Yr9yg
m2eVf0P5hvW70YKyOLTeuZG1wvbQMLO1lPFuPzpQ9Z+L1KkvqgNV/6kWWU2y
/ZX25F04mA88ljmF/bb2XKpNloNRH/9ML3OVc5ZaQH20vlndu+8zUiOv1tIe
Mfth1cCrxXSOsr/cHky1b3JAatPUqNmPas+eXJec1xiDPNH3KdkjoFbTmrja
QudA5z773OwvswdAraIaeLVx+gR9gX1v9l/ZE6B20Zq8WjljHGMb+8bst7qn
F62kNXzfh7RVHd+oj7ya5Umr+GZzdHPjiav0EpgjywXICfi+pGuKcAtyDL5/
6Noi70PxHQrWetW4WRu0Rvgx9iuLvG9l9Cq1YTVx5uaTVNFGm6PLPchB+D6i
64rkulNU0eaa88rVyNn4fqEbi+TmE1XpVTFHl3uQg/B9NLdgv9G5oIqWWM7H
3HjyKr0y5sj2P9lzqTbUngbfz2XPntpNfar9ZfbUqhVVY+H7KOyRU/tqjOn7
ruxpU0trDV5trj5c321fku9rsEdPLa05k9pffZK+yL48379hj75adX2w72ew
R0gtsD0bvu/Hnn61kPps30dgz7DaRTlItcHGEMYOvjdALbKaZLXG9u2rRTbm
MNawb19tsTGFsYTvHfD9IL5TwN4Ee9jVyquZV0tvH7+9CPpkfbF9uL6vaus6
vlyf7vvB7GlU+2lPpf2QD/ei9VWzo1bXGNbY1T4WtbzG2MbW9rmotTemMpay
R1RtvjGYsZc9pPY6GMMYu9j36/sy7DlSS24M7vtP7DGy18EYwF4IY0ZjRfu6
fP+GPUZqzX2nhdp1Nez289qzav+8PdX2Hshp+j67M3rp3TOmdezMVbgnt9lw
kB/KJZoz21t9cJPfQq2rvdwHNeGD1Zr6rKsvtDbvM2/v9SFN5gK1o+b+6hmd
i+UAzPXVPw6tbXXi69QrWsvX5/kuj7pOrmOt2XcJ/VEl91c7bH/XN728G8F3
vG00yD+H9tq2kwurJ1LbYE78wiCetdfBd6zYa6+/Vx/7cZFec6/PUeAPi+TW
6q3UPphjW6u3Zu+9ukkZ7kH9k1oJOYjnBtfPXgFrLO/3ol/S913Gund70UNZ
W1PT5rvL+nXO3Vq572rp1ckFrZWbi6pH0/eak+5VR/9qLdV3Jtiv+UYv72qz
x8dYSX2ttU5jJt8VsleTeoBa573r6GutdfpOD9/H8FYvvZ5y9Pbe791k2d6V
w+voPa2N2XPv9dmnia+wl+XAOnyTtWN7qN/sRY9rLVZNqb5H/a21VH2Q78r6
p0qsYC3AdzX9VYWbUPttbq3eztjBHNvcWz2ssYI5uO9++q0KF6Q221hKvava
E2Oqg+roea1V+04C361wQJNYSC2z7zY4sEmspVbadxsY36nX/qTI/SpfIJf+
TZF3JxhPqb/9vMj97nxk7earIrGVMdaE4OuL5E/OX/IX65fJz53fvB82K5Of
Ov/av3BGGd+tD7c/5eoisYcxyBTgm4vEHsYgk4NvKpLPOH/Kr6xbJp9xPpO/
WbsMX+V87f29RZl8W/+pPv+YMnyA87N6t63K3M8nNunlsB4oPzN1lX4WOXa1
N6c26edQg2Nt8+Qm/UfWONUanNGkn0LNgfmK8cFSxhdl8jXny4XBO5fJ1/Q3
i4B3LZO/Gz8sbT5Shm9w/pIvupvjv92L/tPa9eGt8A3Of/I/dxZ594x8hPzT
7UXud+PtA8DvFJmvjEesRX5d5F1a8m/qUSbu5l1s8m3qVybs5l0e5if2a71Z
5HkwPjoS/EGRd5GYX2zh713mfvKdGfYyfFnkfjOeV8/9RZF398n/qT+Zrpv7
Vz7U8X+UeXei/OtD4Lm6me/kgy4GN93MD/I96iuHGeR/+gP5sruKzBfyRRdJ
Ow7mR/lS9d9/lXm+5EvVf/9T5t1w8lXW30bv5l1Q8l/2W4zazfMpXzhUH16G
7/AdOvJrtw2eh/2b1A/tJZDbfq2JnkyO2+s5fh1uUy2R/dDev8bOcij2Otnz
ZDxsXGwvkj1JxsPGxfLbS9aJb41zfX+kz4exrTGY77dcuk7vkzGY/eZr1ull
k1P0/Z7L1OmVMqby99yzydxoL4b96qf18m4s3zno9x+lDnen9sj+cp8/Y39j
Kp/vHZuMNYfyfVjG2MbWxnjmHva8mV+ag2xaJZ40F/m3ld9/qjq1a7V7ctH2
q1lLkZP2fnqxyrvcfMeN79PrV3mXoe8E7Vbpj7N24zsq7T83xzC3MCacvU4/
nLXMq/gMW0Wva+3Rd8b6PthF6/R+mePb2ynHJbdl36zcpPrjobXTTu7Hmesc
Wy2d71cc0xinnXeAynXbX2ctVs57mCr9etY2fSep/fzOh+aavmNy5Cr6Ymuj
vmPQ98V6P9lL6jv97D2VQ5M7850co1TRJ1uL9Z2H//aiD7aW6zsPfX4nrPP+
WLVg1ibUN1urtUbhfL5fk9zd3sx/etF7mys+0kpubn+I2g9zdLl19cjW3uXY
za3tV1ALY47t/LxDE22pOZa1DfXi1matcSxRh2/9qpUc0vc1/dXLuxA9x+UG
8bpaVHPE5Qf5hb1f5uDf9aKXNtdWk+7zOVqdXFft2gqDfMHeMO8xnw35G7Xy
PiPGL/s2qZfbm7raIP63lugzpv/YqUnt0hzW+XLXJtfeXt5VBvmBWkdzULkQ
9fdqg+RErM2orzc3t0ZzXJ3+E7VFvoNo1UG+Yi3UZ1huxH4QtTZyJHLd6tfl
CuS85cbV75vby5H7frR3enkXlHPK/wGI6C3c
             "]], 
            Polygon3DBox[CompressedData["
1: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
             "]]},
           Annotation[#, "Charting`Private`Tag$29003#1"]& ]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}}, {}, {}, {}, {}}, {{}, {}, {}, {
      {GrayLevel[0.2], 
       Line3DBox[{833, 1039, 1374, 1040, 2519, 1581, 1066, 1389, 1067, 2525, 
        1589, 1089, 1404, 1090, 2529, 1597, 1112, 1419, 1113, 1605, 2686, 
        1135, 1434, 1136, 1613, 2688, 1158, 1449, 1159, 1621, 2692, 1181, 
        1464, 1182, 2531, 1629, 1204, 1479, 1205, 2539, 1637, 1227, 1494, 
        1228, 2545, 1645, 1250, 1509, 1251, 2549, 1653, 1273, 2609, 1524, 
        1274, 1661, 2710, 1296, 1539, 1297, 1669, 2712, 1319, 1554, 1320, 
        1677, 2716, 1342, 1569, 1343, 1346}], 
       Line3DBox[{834, 1041, 1375, 1042, 2520, 1582, 1068, 1390, 1069, 2526, 
        1590, 1091, 1405, 2627, 1092, 1598, 1114, 2584, 1420, 1115, 1606, 
        1137, 1435, 1138, 1614, 2689, 1160, 1450, 1161, 1622, 2693, 1183, 
        1465, 1184, 2532, 1630, 1206, 1480, 1207, 2540, 1638, 1229, 1495, 
        1230, 2546, 1646, 1252, 1510, 2655, 1253, 1654, 1275, 2610, 1525, 
        1276, 1662, 1298, 1540, 1299, 1670, 2713, 1321, 1555, 1322, 1678, 
        2717, 1344, 1570, 1345, 1349}], 
       Line3DBox[{835, 1043, 1376, 1044, 2521, 1583, 1070, 1391, 2623, 1071, 
        1591, 1093, 1406, 2628, 1094, 1599, 1116, 2585, 1421, 1117, 1607, 
        1139, 2590, 1436, 1140, 1615, 1162, 1451, 1163, 1623, 2694, 1185, 
        1466, 1186, 2533, 1631, 1208, 1481, 1209, 2541, 1639, 1231, 1496, 
        2651, 1232, 1647, 1254, 1511, 2656, 1255, 1655, 1277, 2611, 1526, 
        1278, 1663, 1300, 2616, 1541, 1301, 1671, 1323, 1556, 1324, 1679, 
        2718, 1347, 1571, 1348, 1353}], 
       Line3DBox[{836, 1045, 1377, 1047, 1584, 1072, 1392, 2624, 1074, 1592, 
        1095, 1407, 2629, 1097, 1600, 1118, 2586, 1422, 1120, 1608, 1141, 
        2591, 1437, 1143, 1616, 1164, 2594, 1452, 1166, 1624, 1187, 1467, 
        1189, 2534, 1632, 1210, 1482, 2649, 1212, 1640, 1233, 1497, 2652, 
        1235, 1648, 1256, 1512, 2657, 1258, 1656, 1279, 2612, 1527, 1281, 
        1664, 1302, 2617, 1542, 1304, 1672, 1325, 2620, 1557, 1327, 1680, 
        2719, 1350, 1572, 1352, 1355}], 
       Line3DBox[{841, 1055, 1382, 1056, 2522, 1585, 1078, 1397, 1079, 2527, 
        1593, 1101, 1412, 1102, 2530, 1601, 2685, 1124, 1427, 1125, 1609, 
        2687, 1147, 1442, 1148, 1617, 2690, 1170, 1457, 1171, 1625, 2695, 
        1193, 1472, 1194, 2535, 1633, 1216, 1487, 1217, 2542, 1641, 1239, 
        1502, 1240, 2547, 1649, 1262, 1517, 1263, 2550, 1657, 1285, 1532, 
        1286, 1665, 2711, 1308, 1547, 1309, 1673, 2714, 1331, 1562, 1332, 
        1681, 2720, 1358, 1577, 1359, 1362}], 
       Line3DBox[{842, 1057, 1383, 1058, 2523, 1586, 1080, 1398, 1081, 2528, 
        1594, 1103, 1413, 2630, 1104, 1602, 1126, 2587, 1428, 1127, 1610, 
        1149, 1443, 1150, 1618, 2691, 1172, 1458, 1173, 1626, 2696, 1195, 
        1473, 1196, 2536, 1634, 1218, 1488, 1219, 2543, 1642, 1241, 1503, 
        1242, 2548, 1650, 1264, 1518, 2658, 1265, 1658, 1287, 2613, 1533, 
        1288, 1666, 1310, 1548, 1311, 1674, 2715, 1333, 1563, 1334, 1682, 
        2721, 1360, 1578, 1361, 1365}], 
       Line3DBox[{843, 1059, 1384, 1060, 2524, 1587, 1082, 1399, 2625, 1083, 
        1595, 1105, 1414, 2631, 1106, 1603, 1128, 2588, 1429, 1129, 1611, 
        1151, 2592, 1444, 1152, 1619, 1174, 1459, 1175, 1627, 2697, 1197, 
        1474, 1198, 2537, 1635, 1220, 1489, 1221, 2544, 1643, 1243, 1504, 
        2653, 1244, 1651, 1266, 1519, 2659, 1267, 1659, 1289, 2614, 1534, 
        1290, 1667, 1312, 2618, 1549, 1313, 1675, 1335, 1564, 1336, 1683, 
        2722, 1363, 1579, 1364, 1368}], 
       Line3DBox[{844, 1061, 1385, 2622, 1062, 1588, 1084, 1400, 2626, 1085, 
        1596, 1107, 1415, 2632, 1108, 1604, 1130, 2589, 1430, 1131, 1612, 
        1153, 2593, 1445, 1154, 1620, 1176, 2595, 1460, 1177, 1628, 1199, 
        2596, 1475, 1200, 2538, 1636, 1222, 1490, 2650, 1223, 1644, 1245, 
        1505, 2654, 1246, 1652, 1268, 1520, 2660, 1269, 1660, 1291, 2615, 
        1535, 1292, 1668, 1314, 2619, 1550, 1315, 1676, 1337, 2621, 1565, 
        1338, 1684, 1366, 1580, 1367, 1369}], 
       Line3DBox[{929, 1027, 1566, 1339, 2569, 922, 1020, 1551, 2673, 1316, 
        915, 1013, 1536, 2668, 1293, 908, 1006, 1521, 2661, 1270, 901, 999, 
        2603, 1506, 1247, 894, 992, 2599, 1491, 1224, 887, 985, 2597, 1476, 
        1201, 880, 2698, 978, 1461, 1178, 2557, 873, 971, 1446, 2645, 1155, 
        866, 964, 1431, 2640, 1132, 859, 957, 1416, 2633, 1109, 852, 950, 
        2579, 1401, 1086, 845, 943, 2576, 1386, 1063, 830, 936, 1371, 1034, 
        1370}], Line3DBox[{930, 1028, 1567, 1340, 2570, 923, 1021, 1552, 1317,
         2565, 916, 1014, 1537, 2669, 1294, 909, 1007, 1522, 2662, 1271, 902, 
        1000, 2604, 1507, 1248, 895, 993, 2600, 1492, 1225, 888, 2704, 986, 
        1477, 1202, 881, 2699, 979, 1462, 1179, 2558, 874, 972, 1447, 1156, 
        2553, 867, 965, 1432, 2641, 1133, 860, 958, 1417, 2634, 1110, 853, 
        951, 2580, 1402, 1087, 846, 944, 1387, 1064, 831, 2677, 937, 1372, 
        1035, 1036}], 
       Line3DBox[{931, 1029, 1568, 1341, 2571, 924, 1022, 1553, 1318, 2566, 
        917, 1015, 1538, 1295, 2563, 910, 1008, 1523, 2663, 1272, 903, 1001, 
        2605, 1508, 1249, 896, 2708, 994, 1493, 1226, 889, 2705, 987, 1478, 
        1203, 882, 2700, 980, 1463, 1180, 2559, 875, 973, 1448, 1157, 2554, 
        868, 966, 1433, 1134, 2551, 861, 959, 1418, 2635, 1111, 854, 952, 
        1403, 1088, 847, 2682, 945, 1388, 1065, 832, 2678, 938, 1373, 1037, 
        1038}], Line3DBox[{932, 1030, 1573, 2676, 1351, 925, 1023, 1558, 2674,
         1326, 918, 1016, 1543, 2670, 1303, 911, 1009, 1528, 2664, 1280, 904, 
        1002, 2606, 1513, 1257, 897, 995, 2601, 1498, 1234, 890, 988, 2598, 
        1483, 1211, 883, 981, 1468, 2648, 1188, 876, 974, 1453, 2646, 1165, 
        869, 967, 1438, 2642, 1142, 862, 960, 1423, 2636, 1119, 855, 953, 
        2581, 1408, 1096, 848, 946, 2577, 1393, 1073, 837, 939, 2575, 1378, 
        1046, 1048}], 
       Line3DBox[{933, 1031, 1574, 1354, 2572, 926, 1024, 1559, 2675, 1328, 
        919, 1017, 1544, 2671, 1305, 912, 1010, 1529, 2665, 1282, 905, 1003, 
        2607, 1514, 1259, 898, 996, 2602, 1499, 1236, 891, 989, 1484, 1213, 
        884, 2701, 982, 1469, 1190, 2560, 877, 975, 1454, 2647, 1167, 870, 
        968, 1439, 2643, 1144, 863, 961, 1424, 2637, 1121, 856, 954, 2582, 
        1409, 1098, 849, 947, 2578, 1394, 1075, 838, 2679, 940, 1379, 1049, 
        1050}], Line3DBox[{934, 1032, 1575, 1356, 2573, 927, 1025, 1560, 1329,
         2567, 920, 1018, 1545, 2672, 1306, 913, 1011, 1530, 2666, 1283, 906, 
        1004, 2608, 1515, 1260, 899, 997, 1500, 1237, 892, 2706, 990, 1485, 
        1214, 885, 2702, 983, 1470, 1191, 2561, 878, 976, 1455, 1168, 2555, 
        871, 969, 1440, 2644, 1145, 864, 962, 1425, 2638, 1122, 857, 955, 
        2583, 1410, 1099, 850, 2683, 948, 1395, 1076, 839, 2680, 941, 1380, 
        1051, 1052}], 
       Line3DBox[{935, 1033, 1576, 1357, 2574, 928, 1026, 1561, 1330, 2568, 
        921, 1019, 1546, 1307, 2564, 914, 1012, 1531, 2667, 1284, 907, 1005, 
        1516, 1261, 900, 2709, 998, 1501, 1238, 893, 2707, 991, 1486, 1215, 
        886, 2703, 984, 1471, 1192, 2562, 879, 977, 1456, 1169, 2556, 872, 
        970, 1441, 1146, 2552, 865, 963, 1426, 2639, 1123, 858, 956, 1411, 
        1100, 851, 2684, 949, 1396, 1077, 840, 2681, 942, 1381, 1053, 
        1054}]}}, {
      {GrayLevel[0.2], 
       Line3DBox[{1685, 1886, 2206, 936, 2115, 1887, 2207, 2677, 1817, 2116, 
        1888, 2208, 2678, 1818, 2117, 2437, 2519, 2209, 1819, 2118, 2438, 
        2520, 2210, 1820, 2119, 2439, 2521, 2211, 1821, 2120, 1047, 2212, 
        2416, 2575, 2121, 1889, 2213, 2679, 1822, 2122, 1890, 2214, 2680, 
        1823, 2123, 1891, 2215, 2681, 1824, 2124, 2440, 2522, 2216, 1825, 
        2125, 2441, 2523, 2217, 1826, 2126, 2442, 2524, 2218, 1827, 2127, 
        2622, 1892, 2219, 1828, 1893}], 
       Line3DBox[{1686, 1894, 2220, 2417, 2576, 2128, 1895, 2221, 944, 2129, 
        1896, 2222, 2682, 1829, 2130, 2443, 2525, 2223, 1830, 2131, 2444, 
        2526, 2224, 1831, 2132, 2623, 1897, 2225, 1832, 2133, 2624, 1898, 
        2226, 2418, 2577, 2134, 1899, 2227, 2419, 2578, 2135, 1900, 2228, 
        2683, 1833, 2136, 1901, 2229, 2684, 1834, 2137, 2445, 2527, 2230, 
        1835, 2138, 2446, 2528, 2231, 1836, 2139, 2625, 1902, 2232, 1837, 
        2140, 2626, 1903, 2233, 1838, 1687}], 
       Line3DBox[{1688, 1904, 2234, 2420, 2579, 2141, 1905, 2236, 2421, 2580, 
        2142, 1906, 2238, 952, 2143, 2447, 2529, 2240, 1839, 2144, 2627, 1907,
         2242, 1840, 2145, 2628, 1908, 2244, 1841, 2146, 2629, 1909, 2246, 
        2422, 2581, 2147, 1910, 2248, 2423, 2582, 2148, 1911, 2250, 2424, 
        2583, 2149, 1912, 2252, 956, 2150, 2448, 2530, 2254, 1842, 2151, 2630,
         1913, 2256, 1843, 2152, 2631, 1914, 2258, 1844, 2153, 2632, 1915, 
        2260, 1845, 1689}], 
       Line3DBox[{1691, 1916, 2235, 1917, 2633, 1690, 1918, 2237, 1919, 2634, 
        1692, 1920, 2239, 1921, 2635, 1693, 1112, 2241, 1922, 1694, 2584, 
        1923, 2243, 1924, 1695, 2585, 1925, 2245, 1926, 1696, 2586, 1927, 
        2247, 1928, 2636, 1697, 1929, 2249, 1930, 2637, 1698, 1931, 2251, 
        1932, 2638, 1699, 1933, 2253, 1934, 2639, 1700, 2449, 2685, 2255, 
        1935, 1701, 2587, 1936, 2257, 1937, 1702, 2588, 1938, 2259, 1939, 
        1703, 2589, 1940, 2261, 1941, 1704}], 
       Line3DBox[{1706, 1942, 2262, 1943, 2640, 1705, 1944, 2263, 1945, 2641, 
        1707, 1946, 2264, 2551, 2450, 1708, 2451, 2686, 2265, 1947, 1709, 
        1137, 2266, 1948, 1710, 2590, 1949, 2267, 1950, 1711, 2591, 1951, 
        2268, 1952, 2642, 1712, 1953, 2269, 1954, 2643, 1713, 1955, 2270, 
        1956, 2644, 1714, 1957, 2271, 2552, 2452, 1715, 2453, 2687, 2272, 
        1958, 1716, 1149, 2273, 1959, 1717, 2592, 1960, 2274, 1961, 1718, 
        2593, 1962, 2275, 1963, 1719}], 
       Line3DBox[{1721, 1964, 2276, 1965, 2645, 1720, 1966, 2277, 2553, 2454, 
        1722, 1967, 2278, 2554, 2455, 1723, 2456, 2688, 2279, 1968, 1724, 
        2457, 2689, 2280, 1969, 1725, 1162, 2281, 1970, 1726, 2594, 1971, 
        2282, 1972, 2646, 1727, 1973, 2283, 1974, 2647, 1728, 1975, 2284, 
        2555, 2458, 1729, 1976, 2285, 2556, 2459, 1730, 2460, 2690, 2286, 
        1977, 1731, 2461, 2691, 2287, 1978, 1732, 1174, 2288, 1979, 1733, 
        2595, 1980, 2289, 1981, 1734}], 
       Line3DBox[{1737, 1983, 2304, 2698, 1846, 2154, 1985, 2305, 2699, 1847, 
        2155, 1987, 2306, 2700, 1848, 2156, 2466, 2531, 2307, 1849, 2157, 
        2468, 2532, 2308, 1850, 2158, 2470, 2533, 2309, 1851, 2159, 2471, 
        2534, 2310, 981, 2160, 1993, 2311, 2701, 1852, 2161, 1995, 2312, 2702,
         1853, 2162, 1997, 2313, 2703, 1854, 2163, 2476, 2535, 2314, 1855, 
        2164, 2478, 2536, 2315, 1856, 2165, 2480, 2537, 2316, 1857, 2166, 
        2481, 2538, 2317, 1858, 1751}], 
       Line3DBox[{1750, 2002, 2303, 2001, 2596, 1749, 2000, 2302, 2697, 2479, 
        1748, 1999, 2301, 2696, 2477, 1747, 1998, 2300, 2695, 2475, 1746, 
        2474, 2562, 2299, 1996, 1745, 2473, 2561, 2298, 1994, 1744, 2472, 
        2560, 2297, 1992, 1743, 2648, 1991, 2296, 1187, 1742, 1990, 2295, 
        2694, 2469, 1741, 1989, 2294, 2693, 2467, 1740, 1988, 2293, 2692, 
        2465, 1739, 2464, 2559, 2292, 1986, 1738, 2463, 2558, 2291, 1984, 
        1735, 2462, 2557, 2290, 1982, 1736}], 
       Line3DBox[{1752, 2003, 2318, 2425, 2597, 2167, 2004, 2319, 2704, 1859, 
        2168, 2005, 2320, 2705, 1860, 2169, 2482, 2539, 2321, 1861, 2170, 
        2483, 2540, 2322, 1862, 2171, 2484, 2541, 2323, 1863, 2172, 2649, 
        2006, 2324, 2426, 2598, 2173, 2007, 2325, 989, 2174, 2008, 2326, 2706,
         1864, 2175, 2009, 2327, 2707, 1865, 2176, 2485, 2542, 2328, 1866, 
        2177, 2486, 2543, 2329, 1867, 2178, 2487, 2544, 2330, 1868, 2179, 
        2650, 2010, 2331, 1869, 1753}], 
       Line3DBox[{1754, 2011, 2332, 2427, 2599, 2180, 2012, 2333, 2428, 2600, 
        2181, 2013, 2334, 2708, 1870, 2182, 2488, 2545, 2335, 1871, 2183, 
        2489, 2546, 2336, 1872, 2184, 2651, 2014, 2337, 1873, 2185, 2652, 
        2015, 2338, 2429, 2601, 2186, 2016, 2339, 2430, 2602, 2187, 2017, 
        2340, 997, 2188, 2018, 2341, 2709, 1874, 2189, 2490, 2547, 2342, 1875,
         2190, 2491, 2548, 2343, 1876, 2191, 2653, 2019, 2344, 1877, 2192, 
        2654, 2020, 2345, 1878, 1755}], 
       Line3DBox[{1756, 2021, 2346, 2431, 2603, 2193, 2022, 2348, 2432, 2604, 
        2194, 2023, 2350, 2433, 2605, 2195, 2492, 2549, 2352, 1879, 2196, 
        2655, 2024, 2354, 1880, 2197, 2656, 2025, 2356, 1881, 2198, 2657, 
        2026, 2358, 2434, 2606, 2199, 2027, 2360, 2435, 2607, 2200, 2028, 
        2362, 2436, 2608, 2201, 2029, 2364, 1005, 2202, 2493, 2550, 2366, 
        1882, 2203, 2658, 2030, 2368, 1883, 2204, 2659, 2031, 2370, 1884, 
        2205, 2660, 2032, 2372, 1885, 1757}], 
       Line3DBox[{1759, 2033, 2347, 2034, 2661, 1758, 2035, 2349, 2036, 2662, 
        1760, 2037, 2351, 2038, 2663, 1761, 2609, 2039, 2353, 2040, 1762, 
        2610, 2041, 2355, 2042, 1763, 2611, 2043, 2357, 2044, 1764, 2612, 
        2045, 2359, 2046, 2664, 1765, 2047, 2361, 2048, 2665, 1766, 2049, 
        2363, 2050, 2666, 1767, 2051, 2365, 2052, 2667, 1768, 1285, 2367, 
        2053, 1769, 2613, 2054, 2369, 2055, 1770, 2614, 2056, 2371, 2057, 
        1771, 2615, 2058, 2373, 2059, 1772}], 
       Line3DBox[{1774, 2060, 2374, 2061, 2668, 1773, 2062, 2375, 2063, 2669, 
        1775, 2064, 2376, 2563, 2494, 1776, 2495, 2710, 2377, 2065, 1777, 
        1298, 2378, 2066, 1778, 2616, 2067, 2379, 2068, 1779, 2617, 2069, 
        2380, 2070, 2670, 1780, 2071, 2381, 2072, 2671, 1781, 2073, 2382, 
        2074, 2672, 1782, 2075, 2383, 2564, 2496, 1783, 2497, 2711, 2384, 
        2076, 1784, 1310, 2385, 2077, 1785, 2618, 2078, 2386, 2079, 1786, 
        2619, 2080, 2387, 2081, 1787}], 
       Line3DBox[{1789, 2082, 2388, 2083, 2673, 1788, 2084, 2389, 2565, 2498, 
        1790, 2085, 2390, 2566, 2499, 1791, 2500, 2712, 2391, 2086, 1792, 
        2501, 2713, 2392, 2087, 1793, 1323, 2393, 2088, 1794, 2620, 2089, 
        2394, 2090, 2674, 1795, 2091, 2395, 2092, 2675, 1796, 2093, 2396, 
        2567, 2502, 1797, 2094, 2397, 2568, 2503, 1798, 2504, 2714, 2398, 
        2095, 1799, 2505, 2715, 2399, 2096, 1800, 1335, 2400, 2097, 1801, 
        2621, 2098, 2401, 2099, 1802}], 
       Line3DBox[{1816, 2114, 2415, 1366, 1815, 2113, 2414, 2722, 2518, 1814, 
        2112, 2413, 2721, 2517, 1813, 2111, 2412, 2720, 2516, 1812, 2515, 
        2574, 2411, 2110, 1811, 2514, 2573, 2410, 2109, 1810, 2513, 2572, 
        2409, 2108, 1809, 2676, 2107, 2408, 2719, 2512, 1808, 2106, 2407, 
        2718, 2511, 1807, 2105, 2406, 2717, 2510, 1806, 2104, 2405, 2716, 
        2509, 1805, 2508, 2571, 2404, 2103, 1804, 2507, 2570, 2403, 2101, 
        1803, 2506, 2569, 2402, 2100, 2102}]}}}},
   VertexNormals->CompressedData["
1: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
cN/VLcSNqSOm1P+vcSv9QZ6PNdqyGeT52H7n1iLq+axcsSbyPqhSzBZM3gdX
h+rvod4n0bN6fulRJh5s3W9G3h9Z0Y9VV5P3T+PKNya/F7OTPluT34vJT+ft
qN9rzLN2eLiqC+O95TPJ+eBdT4Fc6nx2mqqFcunnotmiMzgqGofcr028qPNU
59gpf+Z4BJTofjpVWuEDcmdfF1Lnv/Hix15yX5Dvei+S3Bc4CAq2UPdl5zyh
Te4Xxk5aSZH7ha3PBPWp+y3xefOV1AN8C09DUg/w3mJPUyapB14ffydSP/Dq
7OUXpH5gQmtYzZbUj4oDeyipN2Cpl3e//NMA5pM/NtmSegu+l3mS1CfMPBN9
QOoT9OPU1j0l9anc9NT9SEoGNC65pXS9KhyUq00/UPU8m/JA9YVmA64Ls48m
9Y+DR4oyqPoXC2UIVRj148/lfqdJv+DcLuflVL+M+8cs1rQaQw5NhULSX7hy
01UPqr9ONFz4QPoRJzp7b5N+RK74ZaJDpB/zml9+IP2LARX2eqR/8dDLLja2
ex0offCVGel3NBDpPUD6HSvguh3V7zc2Xgys9KxA7RZ/BZIPuHJlphyVD2lW
bjIOkjG4t6u1Z6bFDx9pOCyn8iS2wFFDOqUJuG5Z25D8Ac/oLduo/Nm/6+oO
klfgubp4kuQVvDuqlUTllaWe1imSb+CsHxNO8g10Fv3r9CX5NnLitCPJQ7C3
U1YleQimi3UfiZA8FHo1okPyE2brnQRIfsK9yWsKcSQ/nzkwgkjeQu4frxUk
b+EWx/EzVN7SBmNumgcWg3/XSUGJzBTYvORKFZXPcrx/5kieI+fDrT3hvzMw
+ZGaK5Xni5XeLhdV6sVtc82tJP9RM4hPjcr/ic6fvGRe4CLRXZuvFTbh2ktR
vtS8KHRYcpzMF5S7J7Gin5xzyCPXHX5kvkwfjDIk8wgl9RacyTxCWd9LHPxk
Hh3cMNHafr0fx5s1dMj8wg/r172m5pfqkO06Mu9w3mOFBJl3mKfR40HNOzOr
zWEWQXlY/VvKlsxHFMizmqDm42DFzQ4yT+HRFylRGc5s6D5/qZ6ap4ltHdZk
/kLT0tndZP7CphTMouavVtjCBzKvwWTFpmIyr0HtimiQMsmv0vl2HTLfoVy4
Tp3Md3CToHWWk/nO3Pggg/AArGTP/ER4APaIGa2WJDyw4bhqMeEHqJFN/UL4
AbS/T3tT/HDo24wl4Q0IOKS18XZbNrh+sE2neINx086y73UuytEfBbc8iEPG
wMmbFJ9wNy78IjyDVZcGOGVMypH/e6kuxTMBqSfUCf/gP+eloYR/UEzXV4vi
H56wfC/CSygvdWon4SVUkJ7wPkh4KeqrWA/hK5yJ+9FI+AoL37jtqyN81V8f
/x/hMeQ7GvmC8Bj22aRvmSE8NvasQ4LwGxpH/TMm/IYan1s2UvxmtiZ1NeE9
1GFKehPew5tHFD0o3tsU5eqf51sE8+PqdwgfQtTSfeYUH6oaRb8mPAmP2w/c
IjwJlxlZ08KEJwt6Pt4i/Al1kyGrCX+CntHkfxR/Hgsf4CW8CoL8D00Ir8Kj
k7bf0wivhgr9eUH4FkyuD3gRvoUmFpuxLuHb3rT9UYSHQXz633LCwxBsx/2c
4uFpqWNGhJ9BW/5v6uj1fEhJYeuj+HlHcX6FMfcnFM83M19r9gq5hM+5U7x9
/HDUZcLnKJSwbpDwOebdzrxM8flaeYlvhOex4MXKLMLzyHUswJri+YP8S5iE
/1FpZZAC4X+058lrbCf8L7TxwG3iC5hoFCpDfAFfZ4w8GCG+MKtZ9oT4BZ7V
D3MnfoGd1znqKL9QE5F3ID6CxlbpWcRH8LPVtvuUj4SlGFoRf0E9Fb8M4i9o
EfXci/IX3vhFCjUf02Cm7koZ8R2YevhHnvIdD/PXr4gfQd/VCQfiR1CqrGFD
+RFndPfKa7+GoDduzJX4FPCeayulfMriW8on4l9gbaklTfwLtji5ss4S/9Ju
LxEnvgYPpDRtia+B0NOliwKIr51wXLSP+B20yyvaEr+Dk0nVvpTffUh5fIf4
IBh/rujJiiiGzso9kpQPnvD9xGdlGA2Oc7oCX/f6wY7MW7yUP25H7Sjim2ik
bJBBfBN9n+oUUr45EdkvTPwUj232rSB+iu189OeUn96Yu32U+CzuUvv5m/gs
Ctqf56R8thifJRH/RZqLQTrxX7x1nZd1n/hv29Nd0cSXcWD+ii7xZbSW7wyj
fLlndflE5M4erN3aYUX8GqcKeEIpv17xLuOX66oWnMkQW0N8HOWvTf+lfLxk
RZbYWRcn3JAfaaWrewcv2+T9398P/fliRnwfdkuwpxHfh1b2kReU79uej/Iq
3zMI9wvcN07p14NkcdoDaj8wX/P5krs6A87786orWNJAdpOiGLVPSF5pzH5S
lQkefnyuJcp0yIBvX0r080Aye42u6S8yH88JsTUmNoI0h3Auta/43dqj/US4
G558bV+9LL0cvi6qXqTUMAr/Nie8ijXKgyP5kpIGzfFwVGtlILUPcX2whLbY
uBZVzJ83WUtn49N3TlLU/kRszaPii8f7cNvxGFEHVg1GrPwsQu1bsm8uzhFp
HcXl9mMcGYebce3Fo3+XlbSC7PcXz28Sr4nsSk9vJ14z+TFDK97EEGwLXBiX
x0bxZuDuV3NqzRgS69NJ7X8yFA6sib/Vh0NVL8JS+Gpxaa/MU2pfdIbP5ojP
2k78dr59/3+MUvwZevcwtV+6kcNdejQ3C3cnPeHb4hyBKV9EOql9VIrgD7Bs
rAfl5CL5UhmEYSsajdpf7WZjhRXv6wfvLwIJuVgLTbgjk9p3OXNZnnG/MgbS
DbttRmOa4ZD2zU3UfmwPr5yq1nMmfFneX99kSwf97b3HfT0jYMUhC83h66NQ
z/7qQTi9CWrNXT9T+7fEpqXOaqa9sDU5bdN+12pQ73+kSu3r4vvv9gR6VcKS
sMii8MhMuBnYto3a7z3++24pFBbh/Q3mFrIcKdgnFHWY2geeddsk1sHRg+07
9i5oKFSi/4NXd6n94bHbuhauz0dQODt682eJJuQvf/WR2jcuGazean+Hif9u
4JcTunTcevHLgpXyFzhhcf1L9a8xfLs3keOGJA17zNz4w3Ma8epITG+bxQCW
KA63FBfW4XFXPxNq/+n/UVCg2WUYmsdKS79qNILdvjMrXnb14Jz5+3vKkkzY
u7zjwtqddBC4cfSlT1shXnmxd8VZi344tVbs8OGJWvics8iatXEI35RqJvVe
Y8JN8BFkP08HV6mrEXnu39FGN1Y6zY0Br3RCeQLCaRB6iLfxVEkt3K8vyp0R
YUB1PadmhBoNusf9tzV9aQA2O5U/5VmDkOqQN1pWXw8lS+h5K+z64dBU15R9
2QBse8W3xWNFPTg6tAebhw1AWkvji97AFngYF3MgX7YI2KpWvW+iMyB8ci8/
nY0GdzLdVex5CiAx1qb4oz0T5jvO5nUkv4LaYlPVqLOOYBTTeubVAgu+Xil9
rlL4Fg3ftNcns7mh5FF1D9u/LNi55tFmXn8anpS4YabiUYCe+9p1lbSZwJd/
LqhHohX73zYyu+OK8MTSyvGPKQwoXPxPOfbfAEqlNUabKtSjQbwJ1ugNwI77
35asYAyiRcixPpivR265XcUJ8v3AnRG2xGg/A8dkObb069GQIXlohRN/A0xo
XLty9x0DH9903pqXSkNupR+73grXAq8JXVTiPBP3WMax/zxNx92Jcbpjwrno
0Dn0MHUTEzUTeve0CNOR7dFcfKJsMVZHnex8KjKCaTFnU7lqGzHoesHzY53d
ZH6bC1loD+PQuc/vN0s24gcJI/1k8V6cYj54/eJaN46lzaXbb6rAX7qh+QaR
oygyequvW6sTlVePF1WLlKHIncEKbVvCx49u3Zp5lY8nZ5doh5BkDhK6ZX8t
mIWbf1uYPu/+glfCTnycMvuEbGo/ftdVs5CrTIQnJqkGhodnuMfgK/gwCm5b
NY5jupyjd+LLemi3lEyl5eYAS3Gf0tCNcbwq884iLbgNXuiHNUJnMUS+0Z2z
VmPgsGZzt1zDIFS7mKXEDdeDe77wxacX+1HTYr201WsG7P9q3OEYR3h9pXpR
snktHtrc3WkoygS3tPtbDUXpULG/+9pdryJYvTz58Nt7w3B4TvzIQ8VG2CH3
dVni0l5Yc3tT/brAThCMibB4eKkMbp5fqfZQfwxYdQrjBwSy4b6RerqERSQ0
t6zS4StngW1qu9/OY/VoNPXktP6xHFz5yXFG2Gwc6J3G4rZs/ejK1/qW9aoW
J5xucz3xGQLJ79b8/ofH0MFg39/xV834dtf28O8tdLhhVLH1jxcT88y3n+Nw
oKNylS+7YV8Iyk5qyyc6jWK11Reh99NNWPc4Nybkajv6FgqNrI7qxUpLrw3B
Q9VoUFmT9J343nU3cxfBz1V4+ZrU3p9BWfhGyLLY7/c4/mluOqr1thAqTZMT
9q8m3BXI9yP2CQsX3fNsiRjtB4Zz6dtxrTpYGREtY/x+EBW+QeqWjDE4cHbK
dXa6Gdyu/fyYS/I7Idj+geJDJhT5NH3YeZcOG926GrMSU6Btqto3eXQEOo1X
aV2xbYJ/gWxCthWd8HLniheLonpA2cXK6gJUQeaRXQt340bgz1qH+xvzib85
e9nHPEkDzevmq6xUWZAia9wo41eGVZDQnCadjgLpq9hWH2ZBaFfsj8X1PVge
y/81wLUKF7NmpF3dR0D138hf/aWjuNK3U/7TiyasP2sornyrE6Y7NCdmHzPR
4UCFlpI5HbfJrWnS70wGmyAjEYWPY7iwQf29+kAzXtjmJJ34pRm1+QWOuRT2
o7djftRluToUZs/Muls8iO/5o7y5jxFu3jG1Astz8e5L/mtvV42jbpJFV1B8
CsRec5/FiRCIvPWo1XSQhcLP7hlF1/bCn/mA+se7akBtgO1CV+IwVjia+p8P
GoWv/4peyHE0Ay7EXBaZbsPQfUJGt72ZUNuh8mbfQzoUnLj8bn9IIE79ne91
3zEGmXc3Cz12agaO5r3GtSotsKkutyyP3gctNSq6nPdrwVDGa1tW5hCMbvgv
sKqzDsoa1g+WvP0OY7opvwadxmG1uXoSFHzDovd91aMNUbhcYpOTTAELvn3b
dL//Rye+6hTb8PxjGSr9qz4mrzIGr95vFc/0GsY3fgONdy82Yv7IsIJDYw90
xQ6dVN7NRAvvSqvvkmReXtPJ64ksBPXf1/mtnzGQ8+/Rp4MfaPjurI88d08t
vi3S1RpIHsSSf+aHoJL4Q0LCmjNP+/FDl09ChHMLlsc8D76wpQh7fQcEgzsZ
2LuN6+a57T4YuFz+v/k8e9y59L1J9QILTa+Xfdv7vBss5TSN7YwqYHxSOmmx
6ygWV02LJR8cAaNUP8MbQ41wX36XfVZ8NybLNhZ+02FCwbEPTsaadAgP8vvY
Y5aDhWaexTISDAgLX2lro0WDzx5+kZZPGuCi1Yaid20DsE7A2M1bqB5sPF88
+uU5AMW31fZqydBAzVCMx3ZfAbgc0tA8bsaETWzMdK/bQTiuIb7Bfv8z7F+m
OnBsngUaHE3rw2dbcM9+tuDhp0U4eWh40BoZML1HRpGzbRAzcbuyBKseu1x5
nsmq9cPybxpB7/wZ+HBkNE0okfDqudim3ou1cGzfrQ6NrUzc8kh/IG4rHTvO
sAutyCtCCT2twCijYXy9VI37675GtNiluj9tVS+eTG9d9tu5E4vX2rsuHCvD
GaHVCTeMx/BemsHUvoyvqJnC6Pu1ORI3qocvC6hgEf51ENFTaAfGBe/TKTdK
QKiIf5m9MANHm0elTT8OQQ7vd68d/g2wcYdn8Z99fSh+Z3NsWg8DCt7NmIgx
aTBR6lgrql2BzvnBj8/3M+Agu/WsJosG7iOb+ea2VcCYDu1HXewQSEQO3lZ9
2wD6B9YfOrObeFDWVUXOs+3QPDO+JMKyBC6f3xgjIMAA0/98Ht58nwwXnbwO
gdtbkBb0n8kfY4GWn1LhorxGdHrB42G+Jw+9stb9KP/JhM9tG+cvT/XjvvgM
U7ErdViZ0pg34zsILaf65e98HUPJlIQ2l9lmPP2sf+sX2Wa4m9D28LwDEwVk
aouMTekY2yEVLb8hFfP4Jy9i/wjq/JyTNbNsQna6vkR7bycmvXeJEnrfg1tW
uD9iSVWh1fTgjEHqCM42f8/qfFWKu5I1D6bqpGH27cm0Q2dYeHGqgS9ciAaR
op9fxIkWwA0D/x1OVkw8kpp7+0zDAJgw2cTj19TD85fu6Q3+A6iUmct7T5R4
06/5M9oaNBArrBPpfNuAMWphbnuuMoGmWqMSco4OIR/ZN7ex50B4wdVaQaUR
cLZKVkxhNIJ/YljbubBuyLPij7vr1w0RNRI8hrYVUHL+ZJ/7o1FwLPMebwwo
gKBFl0fvHEiGy3ei+Rq8WRAtmlOVmFyNbGvFMpNNv2CNZEmh5tA4/FQV+b6j
tRetqz1r4VANemw58e565DDs+W7Dm/5+FP8UcrLHrGhGVf7cWxva28BaZndI
ojcTq49ZDd1/SEc+qy7dvVP+YBysJBQtOoaiKdMZVg+bkX3EofX8tRaMpU0f
e1fTh2x/ufAB8Yz1Sjv64nKH0LbHKvBUSR3Wyl07U2/1HS8NbF3MfDaOewMa
uVVL6mDszYHT5HN4bbd/kkE+1zsvYEGeA2uXxXwlz4HtCYJIPWcLnVOWfC8c
TMdE8r1AE/rjQH0vz63ycPKeIHPmvwrynrBkWzqPInlPtzdFbOR3wYrSv1XR
K5qhcFytivpdOhEJ78g5wMvnYefJOYDM26Ec6hykfP9sJecG95WG/JNMv8D8
NYEG6txEPku9bwoowHh7iZV3DySj+aAnB3XOvk+kasi94KYZ8Cf3glW8rALq
Xr5zrRog94iv4pMsyT1iss7eOOoezwlkuJJ7x4Yc3zvk3jH86BKDFnLvbfJh
f++KMvAB8+ZVUie4JWDfE6pOOvZ1HiB1hUfjtWVIXaHZpxc9VF0ZjeaEhAnR
cB3N9TWpQ+RQmQGqDiXT8ny7XpXCjgQJQ1K30KFXEEPVrX2QQRupc9A9/tGG
1DncUKXXU3Xee2bOgvQF5Oo67CZ9ARGXuqrbSF/IcpW6kT4CwecRkaSPYG6w
clyW9JHw+sc7Sd/BAyHDL6TvoErs1GOq7+TiX3eRPoU7zSK7SJ/CEeuoEapP
x1sfWpC+Bk5Jx3mzPXlwr/MIewXp6/Bor85b75NRPPRTjbLbW5QOyZykckDX
8cNzkht479qEF8kNrFzk5E3lRmIxjas+dggbbIxCSc6gwumTvFTOeE6sfUZy
CQf6Pm0+x6LhgUyufX9ILjXutn5LcgyPiT6wIzmGbpf8/MVIjoX2Z3KR3EMe
CS1/knuYtfzSFJV76u5b0nUV2vGK4o0jJCfRTUd7C5WTfOItfQoZX+GZe9y+
2c2REJDY98+f5KomzxUbksPQPVzrQHIYaKv0vakcXjncmU5yG3aa3OIkuQ1c
d7xWUbltv0GVQXIe+M10K0nOA9fqLlVukvOT0SKvyFyA0OOKL8lcgB8hQYf7
yFzg4K3cRuYI6DSuWknmCMQpH0ug5sg1rrSysNkWWGdtzU/mDnD40BeoubNa
VG6n2+0gYD+XxTLf/wz+OaUPUnPqWOMKNzLXMN/m61sy19DNLvQgNdfCObV7
yBzEfJ1FpWQOYtmF8+epOaiiJ1xD5ibqtF2LIXMTEy1FDlBzU+PJv69kzmK8
AO8rMmeRbVZOuo/M2WLvi4vJXEY72oAFmcu4+MTeeGout20sf0bmOPYqlt8n
cxyXq/jUUXPccMJqp852Hxj1byn6l2cPH6TfGFNz3/aq0/ZPzi3AMP8USjgB
3rQP/XtDOMHkY7cN4Qo46Xqc4grIPnmRoUa44n1M1Q7CIeDxPdaYcAhsO1ma
x0U4pHy/zjHCLSDzw/sq4RY4t1n0aS/hFtXQDF7COfBU1ukd4RwI2dRxm+Kc
BzIoQbgIglsngj0+lkHRSP4NiovePy04e7jgG4yX5roNN0TBtbkKV4qj/G7w
jRHuQv/E/Wxlb7/jhoYtQxR3ja8/MkI4DS22qIYSTsNvcoz5TMJp2s+CJwjX
4fgD1+OE61CsgouD4rqD/MPXCQfi3uu/vhAOxJUX5PKBcOAGX5YN4UZcPM4T
TLgRW41kcyluvJf2bi/hTJQf1KQTzsSa3AI7ijMtuUZXBcankOd//JszEYK7
emY7KS4N3zo3RzgW5kq4RQnHwh1R2imKY/W4nawI94KTnspHwr1QOHnBm+Je
r4j7BwgnA6PNz41wMlyit+QnEE6W73CeJlwN5u90JQlXQ0audsxNwtVOumZj
hMNhKRf734gXTXBvRNmL4vD+Cd5awu2A4Q+lCbfDYPFKLYrbRx2Z4oTzgafh
c2aqdDpU5zC5Kc7vfHxaZFN+Kf6WGQ+NfZKGHgKNSygvkIjISCIegZgy9pt4
BF6809hOecSVoOlPxDtwiXzWU+Id6Jb+N9uGeMc2E7P7xFNQ3/VqGfEUPO39
hiOTeErJMp63xGswNuhbAPEafLj+N3ce8ZpF9vopxINQ2XjmDfEgPK1w4BLl
QftDe26ee1uIodxWLsSbkPXFfI7ypi+Gm24Ifa4CCxf248SzIMZ//RfKsy5E
CAnyR/WC4J1HlJeBRiybJ+VlZ79lXyAeBzjxkpN4HKQ65h+mPC7vwuwO4n1w
jLNiH/E+eP0z3VKXeN/Y86plxBNhi6N6HvFE6GvctSqHeKIdZ8Ny4pXgLK12
nXgliHdwSVNeOSckdpR4KGzcLbvvxrEcuGZ6eZkI8dCpJEX1QwLZKANlczst
IlHCqlCL8lY/a5mN6wM70UDTa5Z4Ls6ahfxHea5soMl54sWo5ib5gHgxHtPU
a00gXrxdamsP8Whsfpl+jHg0du34421KPFo5MFSQeDeqVkr9It6N9AoT+c/E
u83MPxQST8frTO8o4ulYL6phS3k6l02KUHRSDd72fPmP2BBGZjrZUnuAy818
+j9f5UP0Ets3IYWJMFvXYU7tE1bRpdYkvqxH2QDhEFpuDkY5H7hA7Qc+8Has
SAtuQxtB/2LoLEbJQwNrbNQYaF3CWfjiWjdcP5OWbb+pAmY06j5Se4yY4p3r
vLq/gKcrW+uU2Sf4u/LmNLWXuP9rdOGpyAj8s3+TwFXbCLT0sSvUnkT9iO/h
Hq1OEDkY21UtUgaL7JQ/U3uPj4ceS0ucZ8Jg+M6JmdN0MNff5j0qnIuR+2MP
W2gPw+qgxT6bJRshhvfXXmqvUrZt9ZzhfgYYyhv96dOjQU7rwXvUniftOcfz
1E1MsGws3NwiTIcLxiN9CbLFKLjxtnjsvwGw9ogwNFWoByORyVFqj8Q7NXD+
7jsGyMiXTOem0qAvdH0ItRd6f2BV7Sp/GsTaPutS9iiAVLtF1tSeaodo9wg3
g8wLnZcfYb4egnVsf1B7pxYlVOtLfoVtyUFBX846YtS1BjVqD/af+KFTPRKt
YDLww6A7rggKZ7SWR6QwYEc/weLAFmQmmOXlyxbhoPpjF2rPJhEa8+9w4VsQ
GxmMiWJzg4NhY8+pvVmvRjl/RdYg+gVwbSuvr8eqq35B1B5vteXzm3Q2Gh7a
M1Vtz1OAB54u/kzt5ToNluxPc2Og13JtuYBwGkqUTptSe0Kel5arHMoGsKM7
67rHinosvKJgQe39zve/uqEsycSAboPba3fSUblb9dqrtkJ0Dy8rmxFhIFuU
omOEGg1bjX9mN35pACMD+q8ml2FMXV5U+VWjEXfM3t1H7TmPRXeF9V5jYkL+
TQX283RMPZd4q8D9O+7Q0+xTt+jH1ysVDx2eqMUJF/dgas+psIy3MfLUCGau
k2X++NGIzE93n3X4dmMKR/I0+RzcdkT1kc+hxibhAvV55ad7gql2Y9DZceD4
cH4zKO+cOcIVRsPLdQ92x7gywe711YjKB4RLLdwNHy7EwFm7P8B/YBTgc7i4
yNcmEJnMO/vDowOKFVOYs7t6YeBZ6NDpTdWweOem87OHRuCHn9ecnFYFdBgd
CFn6MQMevQ1WPLuVBSJFZ5XH2UpwhfNZ3hc8qWhda7z6mQELju8p+fZUtQeF
vjK51kdWYrGMt3Lx9Ag8HfrxKT9lBA+9Kli7TLUJBf0N+MUiuuD2HeHYRZZM
7Als83x2i05y2CHzvFcGtJiPnVfpGEPGTRXdm2tpmC53d5+lQRMWna2I4Dk4
gL61Ir5eAXW46yjbqh8qg7iZm3vDdqcmlNx2SK+sJg99wjI99tUwMX1Zs34n
PRZuroy0ilUMAAHF6ucVP1iYhyK4/swopDwJ1Okua4J674DNpw504JCQxctI
dya892wJs7Chg/HADsbUnigs/pa55ozJGAQXtvhvz2iGd+t8kk5O08C4mtFx
9nw/TBq7Bt6k1cIRvZT81oNDEN1Ft84UbgDrn6mZjQkIxR1bbXtOjIONAZeG
onsmKq17ePLTo4/45JRl2WUaC7LU002n6zqQbf/uf7vSSjGkUNCjN2wM9vof
cj2/exi9Q12Kby9vxM6Xl8+nm/RC8Qz7vcO8TMzJVpRP5Sc5uWTd540PSiDo
iMcyviQGypgmbJIpoGGmnLxzHFsNrlLVoRsJDaFGlICfg2gDnq/85SD4sw+/
GINQd1IrXlUV+C9DqBgTL5fNi3oz0Jx7s0toUDgarXumnlDjjVdPLiuM/c3C
u8XOrRd7h6Hx+6Tn1fckxw7+WnfoRA/ukjD606rCBBPNjLKTQIcD2rN6A1z5
6KndYImXGdBa/6326UOSJ5rKe9i314OtuWHw+9ODECsfMnDJth6Ul3CvoS0Z
gF39D4sjDekQNpyzcWBvIcjfxK5BMSa02SztMes2wcAdAWuWqFzET2mVxT/+
saAkbHrPnVI6ro9/8b7PrRA92X2XpK1kwqTGr7Sie4N4WnByysa/Hr9OV1c1
0Prh3Fv1r9W3GfhGtbJk3p2GrzQ1KzQy6kAxh9a7TpGJv9VTWS376Zh24Afn
f5P52MxwfCdeNIwR39+q/+fSiEMsOCNg24NeukzwDO3CkhrhT7dky5E7c1zv
DecYhsY88VjPQhyZVbhqaxWLVYHHdv9NY2HMB+aLskND4C38cWLrkQaQsrFn
dyrtw4qjv94PZjNg42sDekMVDa5mLWqLE65GZqqzv9wyJuzOzxTX56aD4zkZ
TbxcCkcUDvce4hmGSZdfkZHMBnhSNGAuGdwLyw1SfzCtOkAm54r4RqNSeJC9
8tMKHIOmn4v1ZNrToU9LYI5zYziIn/y1kdXOAqdUWv25Zw1YsuGF5HrJXHTx
SuPokhsHes7Va/IO/RhdvaP8/a9aFDDpPJvCPwRP1x2UO/xoDHc/yWXFFTej
BL+RlII7DR6kJmksc2Vi6vmB1mMP6Dg3wX4gvyEWE76qMHXlRlGdk+eqYXoT
js2n7wgJ68A0hW4vxW29yP9DTG/Xymp0aw2q23lsBJtaR4fktlXgP7tBx6MO
GfjwLI1XX4yF89fjp7TIXJI6MpZsml4HETUjAuxCg/jjisT6lawx6Di1uFNE
lAaC0RbmH2caUW067/eae0xIGstYan6DDpPPdHc0XcmC5SdnJpYGjUDp0Mvi
TtkmWJez44Ln0m5QmqnSqxLugTOer9lir1VCa7lPWvi6UdD/1+nWvbsYbrgI
V6XppsDcHwH3sHss2F977ZaCaCWq/UL23RqZaH7x9PbYNSzoqVYbgUu9GDVe
eVrboBqV340EcW4YgaN/jAUzz43iz+7QbvfqJmQWVi64bu2A6IhXczIeTGzh
6Fg7ZEP6N9Lu1turkfBj1mVjwq0xNLxfP6yZ0owh/s9w+Uo6Rn/ezaFzuh+l
n6vazNbUokh5yqVlx4bQqZTnlO7yBnzEZpUs7obonVWE/6mNY3zrXP0VzT44
vYPPsZOtFl73mr5SVxjGkxyvzWW6R0Fc6XHzd+VmOJgo7GES24qiuhZSd3yY
sNZ5hLvXkQ6BTy6Y3Pysig3X1DS0Bkbhc4KCzfyJZngczCkt+roV4N1sepJO
H6wO4Y0M4qgF7nzuYV/pYVj77CT9w7tacIxef+qPSzZkWRjG8mSMQ8EWQV31
+Vz8vK5bQnJ7PMbIv3+5NI4FKitKhKaXd6PtSjalqJflaKU0eJi/bxQmHuVL
zg8PY9jmJ1Od4Y1o1Eh/tXCwB0qO+Oj7H2di1HTe3cwjdGT4egZzNOcBls+V
KF5k4Hxk8el3djQ8KWPDfAf1uOCy2fmJ8iA6WfdMhN6vx1HZt7yDKwdQxYcz
fLcGHS9ecL52QrQQIcDiniGZ94mL7xnlrOkBKaH5kH9qlVAbeWrZFeFRPJ4g
G938agQqFs7NoFQTTAqUlK/n7cagHWt4B02ZcFrmwaoHenRY37jy7cbiLHyT
csdszdQY7F7XCdbiNDh6JZ/DuL0RTujEJTTfHoClA+c/2H2rg+dFUd+u8g1C
4lzKFM9cE/Cd2P3grXw+hB3XihhNY8J4fnna76xIjDt/rHmy/jXutdzK5vmT
Bc3y/454i7XhSGK2paxjMX6X+DHtd5cBRxdPbTVSGcKtDlOSFscb0GdUPogt
pw+4irjHy3MYuNTPU0WhloZiSxq0i0arYKdjgkPLEiaK/ElIuMdJR2Q+UhH3
LkX9fd8jVy0fxv+21+anDTXgGneHNcs+9eKDRWdn3XU7kDfrgLDBhVL8CL4O
yUVjqHrx5mUP3Q4wGzPdTT6H/9JX36A+n3EOKiLPgaQfktRz4NK9PgY7ec6J
dlUv8r3w9Ua3H/leMBB4fGc7+d6RpMoh8p7wc3jrZvKecNGseFcxec/TfCe5
yO+C+8/x5/3jDaDerJJP/a61te+mXoi1gXnhgTEZx2K4pC7J40/OYbw6jvUz
KxLYjDyVmPWvwX5NyWLq3MSPz6qsmmtCp4TrbO/k89Haa+Yldc68+UfLyb3g
+6xlbeResFaY6UfdS8fWE3bkHnG++8Fdco84N6IVdpvco/3Qf0vIvePov9vS
5N5xadDh28Lk3q0cnFxIneCQmsSSXKkmrFG3mqfqhLN9rQKpKxxe8/c9qSts
/x0jStVV7AazVVIadKhMDLtN6hDKRiQvUXVY8dchgtQthI9ITZO6hc8fH40O
kLqNjfDuIHUOLPO+faTOwfbkCmeqztkvjN4gfQEKk84nSV/A6XJJa07SF5U/
l64nfQRnstJzSB+BzZ4wpPpIf3r619TybuCINi6KfFkO91ZNXaH67qxPZdKZ
+Vx4/GR5n8T2eOja8TSQ6tOoul27Q9/V4uUgIeM5l2y8tqcvmOprrZiEJpID
aPXp5wDJATSPW1dI5cCt6/evk9xAwew9ESQ3kDnBU7eN5MaTUD1xkjOY3Vq1
m+QMNnL9sz2Roor0jmktkksoVpXcT3IJN10KnaByqYU3L5HkGC4/7WNJcgxp
fH1JVI5tOBRSQHIPhGr/lZDcg7hjYvFU7v1cEbGP5CTEmflakZyEAs8KKSon
zflXK5BchTzV+EaSq6AdY6VB5Wpww+MFksPguHX730HCe/ouei9DSA7P9lpz
ktwG6+InX0hug4PJhctuJLcD7BZKSM7DhtzhkksG1eDgfDCbyvlCzptf9otW
Qviexj5JjUxoDjKVpeZCiLDQ3p7dxWgUIzuRrpuCHUp5jtQceV3r9pTMHXxZ
F2JH5g6yVrzwp+bOhuXvlrAHjeARbra/ZE5h//UEMWpORS+/NEvmGtZ5qYiT
uYZCnJ/uNpC5pjewmI3MQUy/MMgicxCNn62jU3NQR3lbCZmbmHewK5PMTVxy
NkCJmpsFK9Y2yW+rgF+TDz3JnIWBmqIl1JxtOsz8TuYyZEQeNSRzGRSbWQnU
XPacE1+hJzcK8+F+Z8kch4lTAUXvyRyvMza8ROY+7L8yWELmPlyO/LETydzf
9d9WCcIJIGUbX0Q4Ad7kx7ykOME93x0IV8BNo1ofwhWgu6XXiuIK0YP/HhEO
geN90cHrJHPB0EtAiOKQA06r82Tb07HOh1tpxcZwHOHtW09xy2hkiOK4VQcW
qFxNIJyDjOgqD4pz9kUs+U24CC8F3e4iXIT54RdUKC4K+rDiDeEoFDowqU44
ClU90y1yCEe16+31ItyF5lcjGIS70OHNr5h4wl0Z+cNGhNMwUebfLOE0LBEW
lKY4rXnrH80NLIRcy9oiwnXw0DtHjOI6nr7pMMKBYCXhkEA4EHLk85UpDnzC
2vGNcCP42nudINwIAYtMtlLcePdV1jjhTMifP95BOBNcueqVpAhnHl7/NYVw
KTwv2PyecCkI//gkp0m4VDJk41vCsfDboQgJxwKnmfIMxbEGca19JqUkN7eq
rCHcC+OLTgtS3Lta79hj5W4TsA7SKv6ifBE+ZC/8n5N14jrWRhnScZlu1CfC
1Rh9W7aM4upD2kvSCYejo2rjJm3betwv8WCsmXB4oMtPB8LtaHOx9C/hdsx9
YVK0lHD742WqDML5aOkvOkA4H1M06AcHCefnK2zNIl6Az+VOBxAvwJt8+sco
L2Cd32MUERQO3ZIu6xJrvEFYKCuP8ojBkUZv4h1QdMJchngH+LmF9FLe8UuW
e5Z4Cnj3twYST4HVCTcuUp4S77hFkHgNiFbHLCNeA5u3pH6KJV5zUlTAhHgQ
WJwyWk08CKb/snlvIh50V83CjHgTHNKqeUG8CQ4xk5wpb2pd0buFeBboiebY
EM8CuaXtEZRndcQOsg66Z0L5ml+LPj76CFmM4WrKy/xWu5QTj8M9TidbmhIQ
nfP2GFIe58/z4y/xPvxg+l8j8T60yH35jvI+yTUDm4knIrPjfS7xRFT5pXKW
8sTnDytciVei0rL8HOKVyO9vqfGLeOXm5CXhxEOxI+r+beKh+OYl12PKQ2V4
ppxa6bFY8TqCFqMYgFW5u7wpby31CnIingv83m/sieeCs/Uqa8pzW2/dqSRe
DPEl7i+JF8P49/GRSeLFt7OP3yEeDT4TnhrEo8HwS029BfFo1cFN8cS74YD5
9tvEu+GvV5j9ReLdguWr/YinQ2nI/m521Sb49eThfcrTtRud3xCvh9bE917r
IithbqDAgPL6icwjAUy2EtC5ZT7pyZMKn7JXbaL2ALwaRVHyWhXIw+mdy/4x
Ay/Vt0lTewOufpdVv3f1Ev/NM1LbVI1LomRkqD2DkC6HJv+BUTzbbXtd5GsT
/ipoHZ306IAP31N2xBC/6L+QWFhJ/CJ+7brVdgsxcM1j55JUuzG8rmyhOZzf
jFal18KpvceNFJdPrqlD4OixP80pvAFmo1+qJ2/uwz3tvD6GQwy4mRSyu2OS
BnN9VftNB8tR67Bbon8nA/67+MLp5SgNJmbqrKL8K8CuLGIkPngIfB6WPxx9
0QBagibCL1X6AETPWlWKtMObF2mcT9RKwGRVlNcfMQYYaLS9KXqRBD1KWcq0
bcHQpLlqPJfJgqXPUm6oTzXibCdnp9CVPLxT5RrkzmCCf9JN2ollA+i7+Tqt
waQOZ6WmptUfD0IGb2xQSsEY8iw0Jsuzkd+jdvOu8HwTBNT8x3bCjonHm5zt
M0zomHPONOfoojR8ewakv9FGcGp9RFjU7Sa8YaIcXbi2C4+fTzJ/5NaDhz7s
/CLCXYU8R95CYuEI1mpjdZxEKW71TGvxWpKGHpfHeQ5qsdBiabzXgd3lsNtW
3dk+KR0qiivfl8qx8Jg+54NbAwMwID1gF7OtHub39P/QcBpAs2+7nEJ2MSB7
Mnf5lks0UM8dbbe82YAir/oeLmgz4fOmN8W/ztIhMnmFLZORAyNr96ULyI2A
oeXvO+t7GiF6ZOHF9q/dsELfQGn7o26o1F+4+FCrAibi/hpVe4/C5DKRqJJd
BbA/UfDelqIksKcFxwT6smD+8LeXVgI1WLDJ4FF0/heM8ZE+kdU1DnPd4pNN
471kDr6Td7peg5v3TXiU+A5D9yJ7sWsxo9h4XlhAc10zrht0iIuPagOptSG9
8i+Z+M42fK7nIR2b3c1lHmq8hukba1b93DCGvT/5LYIsm9GQ99bO9NctmJwU
uSwsuw9PrHssOKxdi29cbWw3Nw5h4LF3lxZ863C/0iq7JpHvuFub+ebDi3Fs
4o6iOfz5DgMscT9sioZT0XHXmN9ZyDDhvejW1wePLmypnrGrhUt//j7bljCE
18qZ9cr/jcHNyRvah12aQVaj9r8u8RacZ9FYPN5MODa/6zHTgQ6LxCvD+v3f
gPEfJuPnq1H43frn0fjiZuBJ83U2422HUPWghrtFvaBsbbZhYEMN6NkkW/Rk
DcNTT/ElNSerQfPoo9LwdV+A/+L54rrxcdjg4Ztaz1aIt3TTmg68Tkap7QVX
pj1YIOQb8DQqthu3eLD5KbyvwKi3oLP73igIHTwhwqExguHzvHMHZxuR85vd
wfvu3dBUcFVNTZeJWiduN0lfoOObIAfFROHvsPcGS3X7RgbGaSpeeXiKhnaN
bH77GxpQoOrB9m15A+hi+Yzxgb0eB+78rVCJG8D4iyO4abQZpb9qWEfO5ePa
n/we9Y+Z6Fw5EZSi/h4Cw/I7TE+4g5mRqQ3fXxZe/v7ZJTalB/gYduuizlXB
1v5Q1aXhI/hjJE0qYXIEvrxx5RJ71ATfQ9oaWpI68Ujl5YhTjkxYNM1RxXGP
+NpYu5TAnhQ8w7atc8XnMdhDl+/Jn2gGG6l3HUdNyF+aU5pOdz98TEq4fft0
HXzXGlj5PHoQLv6+mPDRuxH01lvfy1ieByv6LN9Os43DZI1YfYvlZ9zDd2iZ
/+g7/F34OjB2hAVVW8KYUo/acZZtg0RqcAnyr/tpIcLFAMvaj0/7vg7hgnPz
heDoBlT7z+ri3No+eH4q2mpuhIGelsuq2KZpuJ1mZrovpRz2nxpvGm1joOQz
x5nLwzQMXsvmW1JWgWZrVFYd9h3CSm4OxXw34mvj3q7yZ/twzUZBEOBqR9US
aX23AyWocnfmsuYuBo77P300UJqIhjz3luc5vcFNGtprw8dZ2LL4qPVsUifc
XF+zf4NpGeRMFBZq6YyhSe/w4jLrYfhgI1ShpNIIL4T//o7+1YNPrOkKzduZ
4OIW6WGynQ4ZMpGZF9WLcEx6g1SaNwMWCjBAP5oG3lnm1za9rIVPH5/bTZUN
wiTnulK2nnqocLCMiNbvB13HGw1qpS1Q/G/kd8eVIrj56picTCUDPm3bKZG9
wh+ubJl/uMPcGXDKs352ngUv1X0fZRvQcJfWaxdDvQK0FEi1qDVgQjJHUFg8
cwADw9r2uuysx09TaGxqPQA+UzdeakszcPBdu+c+HRquWXP07aLTDfDw6Huf
R5eYuKWI0fBFnY7d8Y6dIxcR2X7MXIrYPYJtJxdl5LQ1krpdyuFa1I2XBcRo
w5bdqJvTpO2iVIF7o/lOHA4YxaAKs7gNf/Nxu3/BUgerJGzxejCT48/CFYpy
4htSWmC5V4iJ3aki+DXz2mVRPQNDvjr4r8sfBAEbiaOOrfVwgU3WZ8K0H28x
wn45eTLg0JWzY9mfaCCymzOmP7oWP4aeF+mRYMLClaA0IQk61As3ZSVvKIK4
RyXHUx2HQf2k+9n5U42wmLdY5B2jB/67aibHVdQJ0vNPvF44lkHx989bbmqN
wRGJgztKmdmwnn1m9+ptUfCgtoUvqZgFBSJRmUtW16N2h8Ly8InvaPPOyGWV
7TicLRdR+cToQw9B6ftPnYnfWRSVbo8YglTxzUcE5cbQSv252RGPZmztZZfW
XNUC8hwj1t9fMPFMF79YrAMdjSTFVTuPvMXkMEd1L69RDDjq9eP+QhNqHZJr
MZFoRyMpHc2B7F68kZNSsIGrBgMMdKu084Zx9KjhauEN1bg6KF1iCysL+d2X
bD7wg/jdu0uWT2wawURPceeL6VyQOna43599HIXnHue+J1x85FvlcUmVOuCp
NC6Y/jyIQXvXDGTFj4Hw6v7Fu5nNcPnU7LMjT5vx+YDzTfFHTDDV1nTKJTlw
Z9nZVQHFn2HHLmt7v18jMMnRtYzzaRPE3rjjYBLUCaG8uU88vvVAV7DA3CKD
KljR+f7b0uAR+K4cmLpHsgw8ODT2ZbakQSaX3O+zKiwY4zmjJyNZhmsjpLSz
WtKQQ8CZSX0+ZMX3iTwH6e8CHRYbVGH/yw9vqec4dG/zIt+L28QLj5LvxWzp
hbXU9ya5bbxB3hNv32+IIO+JnBrLL/iR9+QMGaogvwsNP2SvJb8LJ+AVk/pd
A5w178g5YIvNvyPkHJDv2OkB6hy4uI9uIOeGh0+X8ZFzQ7H2B9PUubUJf/lN
zhnKW29qknMG0RhzPuqcrfeYO5B7AY4jDTXkXqA58XU8dS/0PzF3yT2Cz6dD
feQeoVszyIy6xzPbY5zIvcMdY62FGDKngvYuVDeTe58MkJYhdQLjbhHKpE6g
fmyxH1UnEhqvRUldwboTL6VIXQG77MI4VVeb0jwMSB2Cjpf2SOjEd7i7SCWA
qsPKcU2PMmY2hl+rf7BmWxQW0HW4qbr1a45xJHWOpx3f8Xo7liFvnR47Veey
N/5cJX2B9T333UlfoLPixcm3pC9UpQw2kz7Cy9JWvaSP0P3Ng5ok0kdbUx72
k77DWxpeC6Tv8Om3Sd4B0nd82zeYkz7F1HXjKqRPMSVrLovq00HV7mSBlBb8
cdPsDulrXKU08oHqa9Or9X6Cf/Nh2YGVx0kOQA6nOYPKgdn051wjlt0gIeui
S3IDsiObtlO5cYdfyp7kDLjkTEaRnIGVnUtbXEjOyEwqBJNcAsGBRUUkl0Di
RvSlYZJLvWlKriTHoHm/ih7JMRjIucC+mORYz9o1riT3YGuP+9yznfVwXMvk
NZV79eklu0lOwj1ehblbegXQl2TnTuXk6cWn03JX+CNv98FoGXNnVDQ4V0fl
6uSuoC1nSlvQLOnPk84rRfjAyngjlcMTdPAluY1r5s6wLeqpx+pDKfZUbi9K
DpEjOY+Tu41zSc7j0Vvj0xtJzo/V35AkcwH9GpxCyVzAovxYr0tkLtTJCXWX
WpM6GvtbQ+YIfp9bEI8hcyTqnAAfmTv47OzJnWTuoPT/6HrzcKr6L+5fkwpF
SUmGRklRSQOVJSJpUNGkVEpoIERlnioSKjQIUZIyROZ5yTzPnGOex3MOjTRI
v89+vvt+rt/jvu5/19V14py913q9P+vslwvjndTceTnSlTpY9B6sxMJUyJwC
C95t86g5ZW+xOYzMNWhSUbxJ5hoELLgF1FzzsVHbQOYgLNhSp0DmICxXnH+W
moNfG9i9ZG6C2IbybjI3IfOySEEBmZvuOiFmZM5CTdC7MDJn4WzwQ9hG5mzz
+cdXyVwGp1Mbl5G5DG1K0U7UXE4dcHpF5jiYHx18Hfe8EPqZXzypOe5j02PG
vP4BNgb1WD0cCgTf9SEB1NyP2Tn0l3AC/nrePU44AQMcd7lTnMAxnFlDuAIl
016/JFyBUx1q+u8Rrliw6Nkg4RAcucjDl/upAZkWUtYUh1RZ/HpOuAVjja73
EW5BdpZ442LCLc9f+80nnIOZt8rmE87B0TEZmSbyPm5KzDxMuAgds13nES7C
nV5NphQXPf4d+DDiYBAevrfB9coed/Tq1bamOGqel6Oc+FADODerehLuAoGL
n80p7hp+KXSQcBpcfPBtmHAa7KiPC6U4jbXDQJ9wHUQuvbKXcB1sdPRZQ3Gd
kt6VA4QD4fDBc+8JBwIvt9C0WMKBi1el8BJuhNF7TSWEG2Hv1URjihtlnw6f
I5wJ3fMvLCScCVunHbxFcWakwvoZhEuBsfVmvIJPLDAb5l6kuLQ/UD+acCwu
VVrSG7owFV2uH0yhOPbq78ffCPeS99nRn3AvCizw0aK4t9dJ9Q/hZLz36VEi
4WT8NaNfmOLkFqlmFuFq3HlexJ9wNS6sTVBqI1y9Il4yhXA43sr+bkQ4HOes
evGY4vA5Fm2rCLfjwhNfKG7HCy060RS3X1mwptH6VyaOLWIeJpyPOgLGFynO
P1OfFU1yAdi/e11GcgH4zt/nSeUCPY8xGZIjQOGa/EqSI2DFWaVjVI64Vloq
RXIHnHy2xZDkDvizs6wwgeSOeWowQHIKSLZubCY5BV4kCyi6kpyyx9tBiOQa
+PFOduDQwgawrDHkjya5Zknt3yqSg2BG1/lsxzOV0PqKP4rKQdNMDvZdF66E
BW6vDMJzUmH+DrejVG560nDuWNG6XOzI3pa0Ij8GR4+9DaFyFixvvEhyGf6Q
H2skuQynCt/fS+Wym2aexSTHYdLNA69IjsP2OKMzVI4b3vGWyn0oLls8RHIf
7jQbyWKR3Lcx+asxyYlosr1bnOREFM6aqWFJcqL2xCENkitx66dLLiRX4kjH
K/HDJFcar7IpVZApwZYcmQMkh2L2U4e3VA5NNND0j5IqgjWdTbO8piVAmnvc
dCq32vabB5GcC7qFP/NIzoW/l7SXUjk3tWnuUZKLoSH2kRfJxcAzK3o7lYvF
17fykRwNgpKpR0mOhi8aBp1AcnSNuq8Xyd0wy/+oO8ndMCM0p5LK3dt156WS
nA5/1+oHkJwO/kF9olokp7+UDeAnuR7SvDZrk1wPU29wIqlc/1ds6dkirxjM
Ey9lNq94joV7zg9R5wDf509kl0m0YC0vz0OX/YU4ZudpQZ0b3Gt7OyX6eT++
K4tJGvKqxRf9B7547+4GAybGPW5j49t7AREPhhiovnxv4JvHpcBpl3I27Gfj
7Jv2O1o/M/Cem8R0k74SPLnpm93deHIdHZ6V6/SqFq8dnWlPnXvYtF2YXSjQ
D/bXj5tHL6kF57tV47bTezBZDe4mrmHALquRMp0NuTD6MeevijkH/2rM4Cd1
vN9zO4fUUfXaq0WqpG6y36K9QKAfv4jy25PXQaftJ6XtyOuM3N3IWvatBwT/
CAyWnKqGv9zrjUR9+3DuLObgsxtM+B09p1dkdx6Ite+6Or6Mg9nLclxIHWWf
Tm8gdTTe7uVC1f0iI3PJ62CF188+8jropaHmSb2Oh8Ay02qnfnivHp7hcKsW
XssLzbG81I1xG1NO7m5qAYHQFxG/+wphrlCPqf0wC43EI9iqTS3oWHQ6itQx
o+O7B1X3rrinQV4Hbxy1ySOvg37nX22jXueoQPacA4pDoJs9hU8rrR5MS1wK
ptxrRfPFbbeWG3HgrPDs8PenmNAUUbVjRkIa5k+NjGm1Y8Pui78eBfgzgLfo
SFSGaDUA/fzgKvr5QVv6+UGdgNXhTzob4UDkkXnVZvkQFc7x9cxnA5/6fPF8
wzjoCi/mnmv/Am762U9Z2z8C7Ub+Z2cdqcZ+Sxdez7gMXFh/adObZ8OgQvvE
FtA+sWzaJ2ZsM8f9vdAAdtZ9sK/+Wou4bZNYu3cX/GaNhsl+YOOXjxqlX/IY
uHH2GU5XcwWgb8DenoMc9LJwue6/h4ntv4VNIyuycT79vN4A/bzeC/p5vY6N
Nbl+jh0YfppZ03y0FOdvvxyZ6zWE/j5P7LksinHIuvLeuQWJKLX4pb6Y8gjO
d7552e51Duhum/tKq/s9iC4r+PvQfwTvRzpMXVU2AB3ySn4/PergVv4SpRtX
O5EzWuEe+oMNfzb8/LWSiwl89442PnIuRuXogEZDMQ68YR196i/OhN3br/XM
3l4APLTv6yrt+1pG+76McmI7uXX6MOSAdLuWYw3a9BbynPnZA/4x96Q3dLAw
5oVCT+UiBi77+Un68eF6mJcZlvryPgfDvS5PYVkzMesRt5n8lleoX/Nq5sUV
/VB3uCV58dpaiPpzd5oyqxuXiGwdjFFjgz7r7oXeKwwYXPhwu2lSDS6siLq5
kvSTk5GfE/xJP5HcJLxHUiABcmhfVg/ty+I69T9flrQlpy9QrwdPSLzesbi9
CoUyTXIOyPXDpxBGpHb5EEo/1OMTlW/AUhUlxcapzZDgrrfqgQsHxe5Hsgwt
mLj4XCrfgZ/vYWOoScoP1V6QLJs7OhxUDev3KzF+KPZh+BUd82EtFkS9r5E5
GNIAATxj+1ocmcjR/5azk8yRfMYK3QEyR/pen1uWucAH9WjflBztm7KnfVP5
FuWZglu7UMnykjSPbAWKDltyTOQHIWlF2MvltoPowDyj8XlJPeYYsVeuUuyA
4xpBEx83cfBo1VS2+EYm/igQftk/lgsybxd83i/XDeUmjy7sqagEM9cbbtLH
BjDgj1R96OIheC312UA5uB5eRKSEGvK3oe6Fra4OhB/0reT36hJ+cC9PfNnA
n4kFtK+Jh/Y1cWhfk/QmeReu0nYMWts3x+dYCXm/A9P//hoC2wzeNRnsfjwt
PT+gt7oWHf/O6blT1gWSzJM3vwWzMdDz6d7oJAZejQv1lpxSBS8s/qxX+9oB
Kgyx8HtCZcDf4Di3eesQin+ZoRIdNgBCff1Xl1ypg7IUTuW3yE7M55/jeXyI
DSd+FH7dT7gxlT9PbjCiBFfTvqNZtO8olvYdbY+MH09tacLFEjNntykXoK4/
t2C1MxsWWn8PLl/Vh3w3Ajumn6xB3Y5tG23lemHezrhy1yIWKsov0Nk0nYHW
69bLuXfUg1DTG8tzwq1gd7K24ppIEQQ+fLLtWTML+1PfBVuP9QE7098gmbsW
xhOGEywle/CYvFp0K8kLI+4vY8JIXrik4vDFfE8tcnE5Had8QVxcHf7/f1/Q
Upnn7r/e1+O5kaAvfqMfUVVpzEE9nwPlVp9/35PuwUf7+UKLE6pQPejuEV3D
ftgYPH+eScwQTv+xufDYkgbUu73GcJtnM5wV7+++MYMJhqOrv+j35cJj8Zat
Ljs5GJhWfH2KYC8smhZqeMaK8NHncDxu3od/ZW3WFpKc+F5ii0clyYmJI1PO
dvI24nHat9NN+3Z2074d8/ZXWRMHqtDxend7/LR0fPt8TfyFnGHgHV/MDP7b
iV2C31+sqSnH9TXD7OHzgxDn/9dM4zjhZJmM6p0TdXigQNbZ2LYDrk37UV2S
WgMSQV2bgrgRnnimlOvoDqNqZ6Bt5ngXjOvUhdyzqgS/8j0bN7kN4NryY5FG
PwZBIlFwPNm1HkKtJXcvf9yGHbSvJmiSr0Yh5qbHD898LHsnV2Xc9AHnKN8O
qLkxAo93/ag4rdOOP/jv6uz9VowisQf3uK1gwdc9WotUc/tx1XPF5R4xpJ9v
aqvNmd0NG8QqtqBrCeSPTP0jOZYISmcLRk3Xj6D8uZWrAlM74EkGdylXUin4
D216svjCEG7X4EuPcBgAJ8cVh0s06+BLWXUfP6sTd9G+lxeTfC/awx4K/E8S
0EPdp6hlzks06GG0D3SMwIeOQ8kWZ5tQTfCtjlBjPl6+sMTobygbeL79iV40
1otbjASeHpGrwT/X7SaWXukFa5HjFa4RWdBtnD7Lz+gdKHaYyjSmjeBZPekY
VlALcKmZhvxJKAT5qwvM33Cxcb2g6xBfaR98UGz9MthZA8wD/V+26vfgT9qX
cnqSLyXV7+rd1K9OkJHhdWHXwqtgkrSrLpJct3r3fiZsXVeP8cYtDrs8PmKT
rDujpIMDeV803WeMdeOTRTqjSzyq8PyJ2yu7/fuhSkrryGqeEGjduePXXl8P
+Phr2lTN3yM4bKybxHWHAQlfvaVGbXPBuqzyyazTHJy7At19O3vAZoqWz5X9
1bBPd8P+beF9GEr7Rkwm+UZM+4ZqfpengJL28GJHz9dgb7y0uKZmBH6rZkUO
eVUi2Pw1HFuRhpan1/L+aRiGMf0fgQWFndh4Vlj+pVU53tn4YKLj4SAIfivO
DTaMxpCD06RVTz1DZ+8Zcms+jWBarGaFi3wN/IYxveI1WXAnzX4Dr8UwPvqY
uzq3oAvKVC68ExGthL/6ilkfkgdwnPZ13KV9Ham0r0OhPGOBxctCOHb/rOBd
33h4ep+ZVKg7Atbpx5IbbuVh5mNNi/Dvsdj7ylH90O0RSDKJT5nV2oZ/dmdZ
mT4qxgxRkVk39rFgq32pre3rHKy4Yr2PzH2UCe+f9YjM/eoV045NsSiGDjOX
YMIJsGf6hWMUJ3wzjfhGuAKkeG60Ea4gHHXYk+KKWNp3sZL2XeynfRd9c414
CRfB1nvnRjziMkByr4MqxUWzqxUdCwzjsOFrhP98+xcow7P1jzThqI7He0cJ
d+HXlYwAwl2479x7W4q76q/Pi3O4MARarBUnr7XUw+KsfPE5zS14aEVwEecm
B5qw8PCzS0yYItwyW8IvASUG79bPWM+GHQO/ysVPMiAgemXqXJ3a/+SxHzN+
XAzcO4DpuwQcG8Tr8Pwy7foBpS7wO525ta+JjePuhjwu/QxUXvm0+lFrKQxx
pKYskeSgRGXa48pVTGw0H7nCr5+PXId45raMD4BY8JwvOvF1wP7gxiMt0okq
2RJy6SIcqLm3cMsFUSZc0WyS2WpXgIHShlPnDbJhLXvQXOkrA3pcNf4U5ZUA
L81LppN4ibvRdGeFdx8aK9xynRJbg9mLnvGtjekBL7bzkzgRNhqHnDDT0GDg
yOKj9c0ttXBOcNTlpx0HZ0XNf1hgwkTWqcM/fxyLw2OG9edkT/XDYx/RwkMn
a8E+teaCwYtuFL0srpd7iw2WaUKWm58wQF+lu+zFjmpk17P3lZ3hgEGnfGiB
DhO4dgpeMt6dCbn/wUt7xZRa4170IE/37BvThapRqDTtnNdwHxjYfI5bKMxC
jadBurwWDRjEr1/5N6ARItOtQ6VJrp+tF/p4uh0T2edfafNMPAO/9Iteh1x6
Qc187LZfdTXsCD1jpPqtF+1Ctky548uCTQHWC/czG8Brt7e10XwGtq2Y4rKM
4qXfMl+qCC995vmhdXrAB/7hpU2TeClTbc3tNvsu9GavG9UJrcAmoVOQPTYA
WsNrAq3qB/GIY/Z4nmE9CojFpIWIt8OVx7r5d05yUHO/zBejQ0w8YLKzUbEw
C/xvVH8NvtENeo8PJGVKVMGyuB26KgsH0Drbq0zMZAj40rwbjHrqoYHD/Bn5
oQXnNktee0H4M/zawrwJwp8/d2VHXWyOxyKal3gn8VJ1StijExs78PJY8Nwd
dSUoFrZ42bf8IXANFntXfHQAE/pHB9hSdbhAYWlcy9oucAm7udetnY0f+nMK
j7MYuO/HKn9R11I4M9+H9XlHJ2xz2iwZ8KCM5K/nq4//HcRz74/oq80ahKcN
odOKM+rAwu81QetOLJlygWUlTjg50FHSRoIJgnsEDX4vLcC1NC/x0LwUQ/PS
79N/d0vYN2N8fMWhrPwCLNSR6e7RYYP1jbIrQYF9+NFbQdIivQZrhg5tsg7q
gR1ybte1lrHR4Ov5+pwDDGTPkGkvi62Fcu4ZivMSWyFWdfY+pcAiEDL/KzER
wcKlywI+qxv3w9GVceLSBrXQesA1Zr5nN4pbga6jAxvebvf2+/6cAeZHZcX+
8FcTXuI68T9e4vp//Iqufr23/I81YCNfgLu5cw6OvLNs7w4hn4eRx7Fp73tw
bn7Z/oRl1bjGzTr4bFsfOB7QTg9eysK4gWwbMWvC+Y0aj26bN8LjqyLxfBFM
iJ/jnJpmmgdfcEvBbiEO6t7hv/zzYS/Y9FnZpLZWg/GtFX4Xunsx3hTj5QNY
4CV4ZWNEWwNkiRTZru1vQG2alzon8VKB2gq1fb+rsG2qnEn98gxM2nIpqOPN
MLxUqhX29O5CJ/sXM8eyKtC0cH/NjsEB0L1TH9bQPojWBt4rzlyrR5W+Bz5i
o23gddW5IJu8X8VDTS4jAtnw/FvqolrFYbwTf/p60t1uyJuCb+bJVMGPKE2N
ce4BPMHayRtzYwh8TM926LDrIWa2c9129xZso3np+SRe6olYW5o6UoClXYV7
93PFo/r7e/PMDEZA3VyduV21A+OmclTaP5egX4SK9s7UIdi0tX3dkP4AnrJs
y/8hV4fCx9tmFgp3gcLxHkfV7lLoczmRe0okGb4lPzb9KjyCjyWcFh862AkG
fsvq9KPKwJSR11vxeRBvXWh49FJwEG4uHQC5gjqo+7PN89OXDlSmeSmI5iU3
mpdCbru/PnoxGQOePU9L0w/Fd4nhR2oYI/DtpsL78VfN+Ia9N0C0twB931xG
YU3Sb/3YOeci+nBl8IFxZgHJjWe3emTc74EPoVp/JdKzYelptU2uKZFQKZD0
5Vn0CK5P8KrjaWqF9hmf2trTiiCC8ydCO5iFSrtNt2tb9cN0909HfprWwruW
YUyy7sYfNC+donkpnuYl/c8FOl/sDVHdtOOc6KsjyPHemTlKrtsd6fJq8g4N
+HCaZ4nyqxxE2S2DS55xIDjR85dGZg/OnhK4+pRsNXodKu9aVdEHp87ynquK
DoPzZ5yzAr8/gnfMUwYGYyPoErpaml3FBJXsU4XD3nnwRyU51peXg4v+OPx+
EtwLHyssF9cPVsPAmKH6rZpefE3z0lWal9ppXroa5hAh8TcRChJ/yf7c9gpO
tmjcdGgZgffTrNrVVlZjMqe/Ls0wA881HfbbGDIMa0QUv60P7sJ8rStc95oq
MMWEcTyqaQDaT0jNX5wXjuWNZbI7Yn0xjCfRMPz7CL58uWubtFctjKW5jF2S
ywbfFWp75TYN4zqpoZycJ92QW6bMr6dYBaIyf5+9G+vH3zQv3ZnkNxMyPeEv
AgXwdG21wi+TOGjSuXQo02QEbBtzv0WpFmJdtaEkUy0epQvtswfPjoD3pfv+
C4924JLitGOW/KXYunXtnVtRQ6ByUvLBDfiIsxLlfxb6RqHZke1Chm9H8Kjf
sOWVLWXQXP9tC5xNhrzvT1mWgiMYfffS1rCznVDwWPnm4uIyuKTpyqvQM4iT
/WD7aF6a9/TCDp6wKgjw0S5j+abDorMzxlMShmF9wHXJSP4ULBuckdwwHIpJ
BS8vO9aPQEpybUBpUTMK3v3SZTq9ELmn+BTvBDYs/ZSyR0eDBX2J46wpzxtA
0GLpJtNwJna8iuw09+SAN2vg4FMbJtgIbtq45VkIPr2bGrr6IQfWGTksjrBn
QovoOrwm64zv7urW3R9lQawil9FRaZKXrxo9fUbus21z1u6f7s8ChRO72Y0t
DeC4e93mO18bYArt6UqgPV35tKdr6qR6Hl1n/JinRX5+MOO/eIr8/BCvdrKb
+vl71ZhOo9NbQXHmsse6PEXAJ9c/fKeTBTkLBAre8adA8IDUtbrhUOjO3mZG
vQ/ScwZUf0Z8hCTPI6x+tWj4pLnZbO7rEXB0K3hI3k+8+Gd0iO2bjpr8D9nU
+/mE/nsKG+i/p9BK/z2FK19dnnpMKUYvuSGZLckJuGf/xIkc9ZH/++830v++
hf73n5XXjM43H8Sun4oeAYIkfy+5e8V/fwdwb+PSM3kxiLvzpQZlFOpx7uOg
er7P7WDwMOrj7WUcTKr2Lp+6nInH+NfEcNfng+jieZr6Shzk7VgYxVJg4oPK
8cHY0hwwr577uWsGB++8dooQ52Xivt0hpa3nirDZ5+LZvjI2HisLWTTYzMC7
pYc/zx8owyra65U4yev1Tz2Jrj+l69V5+dPI9YnCnf025PrEyh8DMtT1GeT8
9enmT50o9YxvX3BKOQ5s/SiYcG0Q3XOM713eUoYKR4fFyXWOd8/u/Eld56Kb
SxWkG6twJMDr/N6hdNy9naFpEDWMlxwq7W7CR6i22LKvyDcKyh828lH3yz7e
8Zwtzh8gXNtRKZkrCIxlTfa5D45gVNmo/2GBIfD95eLn9rQeHJ+2uW7e3IYb
/bizJw5z4OgZzpW1mkwIctj3cNwoG1dluLxV/8gGNFhesqeGARvblSUGMstB
kPZ3Ae3vWv2Pv2tSXZKuc1pTrMj9Dp/LPWqu85cCzLALpe73cw/mKywf6oDY
649PGXKXgY2/XVeu0hB8GEneQ/oGnJBKms5Qi4e2AM1Sqm/Meu0mFlxRBrwa
uq1HW5PBQFO/SGH2CHT6pKsvgQKM6tt/8rdJHLpqL1Gn+s8/eURwUh65+EhY
ZKl/Ogq8tfX/3PIGByWUI2YXjUD6O4t7Qp39aL5gPFWpqBZn/KiuY7Z2Qcew
m5eCKxu7XVv3drxgoHrMatWaoSoYlDQXYZtwUHu3z4GD+kxU3Zcqp3Y5BeVp
b1gl7Q2ror1hmyfVK+l6aNkiX9Jv8bfS9Xmk32JMVSJS/fZH78xibdEeFNr/
JGzauyqUrOHfE2HZj0lCXrVrvGrR6uSjftK3MeO2iC7VtyUuK80N2NyAzb1n
Doka5iDD90Ox5FsORo0Ny4nmhUNA1NxjO2N9gWuRvAHV//kMFl9cyfDDjbOm
PC5WdcaC7TMWT5sYQbWIkN8pzwfg0qm2A7PO18HYutsCFZmdyHkzUaxaw4Y2
5cdpuh0M+NuQfGe1axnae/YE8WtwIJvl//LTLibcupG058Tbj9BKe8k6aC/Z
b9pL1jap/ouub7WpqCHzC3jd7G3dmyogi73RlppfG3UUfavXdMPSQs8ahexK
6LnqKDmhNwAXqxo8yByEeXVPE1INMyDU6dhrag6K2u0oWsyg/FJNPBHXskle
yr7Ov2oYInIceZf9TcSY4OPWv7e9wvx30hbUPP3n/NyEzoPL6Tw4FLsyujbZ
Fz/EHJyad9QJzXY+N9s2QebCtEDfSOE+7Da+HLXiYA0KHRhtcVXphZOtRiIP
XrKwh5sZw+luQB+L0OHVuQ2QYPnWknq+I1lzuin1fEeZIoPvi5nqv3xo2rQP
bXL9CF3/IR5aQfgBn2/wEyf8gEXi5eYUP0xzf8DLIT9PwsUA1kny80CU7Ap5
lV7U41XIYlWR/LxZPI1wCBbNO1VEcUjM9uHrj/SasdF94MrzyAL0W1TfWa/H
xhl28oVl0WGI2YfECc+gAKPLkOIZyaKmLOuOdEw9/0N4jnA4toq9rektGMH3
Z3s2/xnqgynBC8+dHa8Bq/wQP6GtPShVplpjOpfkbq7GLRJKDKh9VPvBWqYO
183uUXh7jwOf93Ev1LjFhL1mrWY7X4fBN9q3lkL71qbTvrXvdD2Vrk+l6xvE
b7YQHoM3Agl9urLVcK3gPI8k4bHpZwJnKuzohfe7rwe5Pq2GrD9dGa9V+yDD
Yfm3TQ4NYHjDWYlwHRh6LZ2guK5naOzdVOFGyOJJZtUU54Hlli2+ET/ZsKaT
/2++vSFwy7/9WfPyCEQZGf0fPvxI5/HuSXl84sHipS1FH6BuoiTpys0gOPP0
2+uKgRGIr9vmwUvu38diL4oL31ZhnZAp84tlPxzbMxHy3GEIT7XMTOv5Uo9f
gpziEi62wJj3ITt+0k/mv0xwfnqOiQXB+3dEJ6f8y/P2nPa8adF1HrruT9ef
nt+6iPAwVmppHSM8jIU3k4YoHg6tdnmjRfqb4Ou/DFPS31LefH3r0tqFu02e
GROuRsbocybhapz5zLWI4uqqpdkK15Z34A8DvkNu6SXIu6d4gUPVEJbN5N1M
+BwP5B1/4ZISibZven9SfO7zNyIlbGUxWof7ae+rS8AwUbf4uN0jGB7mcF5k
Ri9YrjX70XipGnZGVY09c+rDUf75PgdnsSDq0ewdPwwaQDHk+ca4wUbsiZKx
s7rDAdNjpnnllkwIfJBjOtszEvNpj9wr2iMXTXvkJtcj6PpDEY+3JF9A8C5e
JPkCMhIOJ1L5YrPTigPXRfth9dc+rpOrakG8f3NSzLduOJldfY7kFDh7+Ro/
ySlQqHixkcopN/bZ6oSItUHFuxusli9FIGik+qTiHguEhuR361xMhonlqddT
9ENh2yehE1TeOUWfh2yYdB7i2s4dWiudB0sX7NTkToyFLw7rOybcRuD6l5vK
/SOd6MP/+pYY4YGeaI/yb9cGIUI+8wWv2CAGKk39OlFehw9Xav3x7eqAr+6y
GWunc3BO3q2yuNlMXLSx+fIstyJQp/11y2l/XSPtr5tcb6DrfMWrrpN8hws8
+9RIvsMloyXJVL77k31DRo1w15PHOovyCXetNzH037mfcE7UUJ/WwU5c8MiD
QXIivlNVn1lJcmLpro/j3691IXN9ZvJezwpUbdGCkmmDeDHo2VOV7lKMEBD2
I3kT+WG1HZU3vyzvLaiZW4Ojidy2J1iZOPRy3bmgW8PIvAShnpwuGJMRUj5z
uhIKV72J/+Q3gH+mCV8+mDMI0/Sgu+9YPdQqRk6NNW5Hv0PFR5y3c6BU+wTz
3lYmLFtbp1ghnvsvP54j7cebXLeh62Z8DxaSvAyqW+Y8IHkZlpoqbqby8ksj
m4h5BQPgZ1Im+PlOHcjatJn43uiEnpJpCSR3Q0r0lMy2zyVwSyDPnMrdsT57
XXhMO8FC963t144y4Ow6F9fBHIT2jg4xkt8h7sM1qX1c8fB79gZRKr/n0edR
syedRxnsmjfLZ1cl5DtEuCb3pIKk15Pu6JZhyMxoDf4o147P/hrLWzCLUdZt
XVazLAtWXupzWuXUj/Fu865/ulmLsu78zUaXu4EvRnpOyjE27t6i9niKDQPl
L45XLN9R8y8vXwjt5Ztcf07XN2W++/T+xhC6124a0GHX4yMr4Y073Ftwgm/n
Q9H8IdzWqJZ3QKYBD7wW42FLkbxkVrEn6W43YvLVsHkyVRixYPAKde4B7Vum
sh/1IGeZcLUpTzX+nLvl96/ffWiPxvrZBrVobJxrMSKQjVvCraWo8xOrRYkO
4ecY6BOXH9+ol4tK94znuxtwcMGeeD21dx1QuzLbcfh5KfCfuvhF7toQKnsW
hJvBAEid33ro0sI6eCPTr5l+sAtvhHjZ2kSxYZGA8pI5Hxng7KMuf1Wm8l/e
v/u0929y/TZdn39+pW9D+yCcSbnI0btWD75HPUap8x+D5Z9NJTcPwYGvNu94
kurBWtHojNGLVuBdeWrsvncX3F9z0W00qwLyb0l8p86RWoTFvIRed0MdxzLC
UK0Kmhr02tqH+qFexfiT5u8qOKMie6BueQboT9kTTZ1HLaPPA2dM2p96a62o
VJxZD3KGGqzAKx9BYbakndkABzLTtn8a396EkgdP8SWm52OT/O73btFskOKx
60+O7MUhz6vmnV+rUXNR0rZTeb2QHfNc46AhC38U37zCiGtAq03PhSNnM+Em
7RuspH2DCrRvcHL9MF3319oYKB/AwpOWVUoRbQ045ebPdur8jV99U21cIwuF
JQyeXZvPwKx81d711vW4OiFV+efDXvyRqu6U2lqNDxqi06lzvFe2V2CPax/u
C7RvsHxTg0WZAu4tmT0oWj7jCF8EE/tctsekmeahmS40U+eBabN2ioNtCx4f
2nts97NCtEsKkPzLw0bZikEnUoeH16JPkDoovDCZQ9Xv3Vhwibw+7M19W0Ze
H6Tq5upRr6/M93uA/Jxw8Oim++TnBPZ1cxfq55zsM0xZ/j+f4eT6M7puuzM8
OngpC9KrJNTFrBugfkTwF3WeaRC5aQd5n+HDD8+t5H2GkoZ1LtT7zPu9ddu0
9z2Q/8RvbsKyatj+9Xs+dS56yG1ZGfm84Fu3piL5vEAiW+ss9XnJOByU8j/W
AAIWzn/MnHMgxVTwG3W+ysXFRe+vQ/6f/TVXfudLcj2A358ol4T0fHjZnlBA
XQ/WY3eWbp9ZjzJfxW4GXfmID8KzjanrJ2FRVhS5PvGnWyGLXJ943kUjlbo+
f36/7kSuc+zhcmsl1zmeUlX/ZUiu88kexSjaozi5nkDXZwXp7XF0YKPzdeM3
358zcKZNkAt1nuw7g+8yuU8x9Ie6DLlP8dr9zxPUfcpTc79Q3bgfIy6tXydN
+kSSs3sbdS6dIpnsRO53HDsmrEfudwxLFLGl7ndzUS6mQGIrvrnyYK9SYBHu
FTBQpM63ubecWkf6BnZlvHEifQM9xM3mbSJ941q+aRvpM9AsmZlL+gzoeiZP
uJE+w+9vtZ70K1hr51VK+hXkf8qqpfrVMGNnJOl7oLlVMYX0PbDeb/+ORfre
ZE8jX///PI2T64vp+q7BVZe1lrEhs3P+h5wDDGioyoby2FrQPZAwnfRtWLW+
y4L0bSgbbFm/gvTtF0V8R4IC++C3sMCweXoNtC48fJo65/+lJWFM+j/EO/XI
k/4Ph3aHzjIm/X+WXMOYuH0z+EgPFmXmF0CAcco4tS84SZ+H9086D5d8desY
mS+QtT0pzpxZDOcSPjVR8+X19OI4Mo/QwnhfWEpPKi5fP15HzaM/LvJhZN6h
5qDrHzLv8MannEfUvNNIq0cyN7Hc+/w+Mjdxof1OoOamJ+2H7KP9kED7IT0n
eSNV6Xqm5pw2K3EOOi1222YjwUQ5uy2y40sLsI/7ozqZ+5gXlj1E5j4uWzww
rZLMfU3LdUpqswbR6uGXucUZdfjkc8cwtWcJ7pqjSfgBT+y8NkL4AV8bOFyg
+OHOoG365x2duEmZb0XAgzK0kEjYQ+1rjPZZXSYcgif32+sQDsFZQ9hKcci5
1Jb1tXNrQPV37nPCLSBbuvwQxS2rq/2lR691wYJM5RTCP9Cy31aM4h/DCys0
CUfBnzUzBQlHASyaaUpx1D/+yQW0f3IB7Z+c7KVcTNf7d17Z7dbOBuVzy0OP
sxjw884+EzHXUtiovimFcCBI3vZ4RzgQ3n+XhNmEA/ectPcpPjoAa7YfjWVL
1UHg/uUd1N7qu/8LD8KToC2dlkZ4EvR6H63zIzwZnnTf5MTGDhgTjfHeXlcC
J15+UaL2X130PuLFpH1EzICOOOFVcJh54JtoSjns6FAfoXg1OHjJ4TrpPPwr
VnF1ZmIsam2oaaD4dtea1cGEnzEw/qJl65cilFAStqH42XBfpCHhcPTbnqFE
OBwXjVfeozh8svcylvZeTq7H0/WvAlWGL6w5KDGtlzFxmYkBW5TBqDkeWf4d
liRHoIb3hUaSI1A59ddzPpIjrLn53ouZDOEhwaAeo556DHZ3Phv1oQWf6aZb
kTyCgrfX7Cd5BPfls/ypPPKnNyMt+EY3ns5flJspUYWM89vuUvtHu5JOeZJr
0DR9/DfJNVjgkrHMn+QaAeXxl29WFkPT604XkoOAR10rnMpBUfE+piRPwca3
tTokT8GsCwnf7EmeUjMtKya5DDY6qteSXAZjUXfsqVwWSHs13WmvphTt1Zxc
l6brwYWjuXdOcuCitm6j0SEmrDhbZ7SjMAu+TlekciVsGXxoTHIlxMgnVL4n
uXKFZf09q/pB6NqRm5tnWA9JYlniL8XbYVaG2kOST8EbHzuTfAp++9xFE0k+
zYP28232XfAo/6qlTmgF5K4e1af2uSr0Pih40vdnTq6RuELyLxz/1uBN8i+8
0XT7Q+Vf/4FPTq1FH1BrneUes5tBqLauLoTKy4N2F36SPI719/lv1RbnYaRk
qi2Vx8e7PFeSXI+/pHY3k1yPI33zH1O5frLPczXt85xcX0PX551StFv2gINx
i50Fqwm3NF32UT864ANb2rZvfnuPg6KaMxU0bjFx9ZnxPoXXYRDM+Nl/25eF
e90MJfczGzD5l3kXtQdXOs6VbjqXjeNR3/ZKKDGw/Li8mI1MHfLuDdM/5NKL
DhoC7n7V1bhiacAjap9u1CE/589QH65+mmJ4drwGVy2X+0idkyyuPr/ftiMd
htZqp84RDgfRoOwy6lzlydbqpkd6zZD0g9v2eWQBaBmoFlHnMzY/P23lCPfB
NGZxz8mDNdCTeXt0k0ov3qd9oSzaF3qK9oV6TKqfoetXHJ68kybccsE+y2w6
4ZaxQ/ne86jvA7wUsaN8R8IxXXsp39EDwfxkprkqqGkNvV4ozIJj6xqW8Vo0
QNF6lx1cgY2Q5V4098FLFhg/XWbL6W6AX+kLTkvlNoD6hsysuBc90Om2VHG6
UDXcjjzkRn0/4Z/vL+lN+v6S+ZufNyPJ7+XGJ3h1Bfm93J66z7yt0gva771W
VCT7wvI59+rTjjqBZRCaU+dv2hzFJSKMWjyx+cPziGvZeFRvoz51vrdFlRFf
vYZwwTvb44rZlfiBh3sqdU6oS3tKp9Ke0nu0p3Ry3YOuq2Zc0Cw7w8EGo7iy
Ah0mbiuoDDXcnQmnDMKpc06sLq8o/bSLiT9WSRgef/sRUjjeGrm32Gh1vsR9
8xMGNqDhtuAd1Xhk8Fayag0bV60UqNHtYKB+Vuh5KdcyTDn9WFH2VD+65l4t
O3SyFr2r+R5S3w9Rv/iuJeX5AB62gEOzztfhNe5CRercVf/Abve1DD+Y/uzr
2xJVZwg6XbOIOqddlrjMNmBzA2itWnlM1DAHNtsLJVLnvYc/7R3TJvedrXV9
6LR3VfBkX5IEdW482YOaQntQD06qp9H1u3LnPX/accD1g+WNAhPCt/xRh8eO
xeGcS/qr2KSfpAZc2nRQn8ydrhp31cspGNlm4xUnwgbJJ7e2a2gwIOyKkXpL
Sy2s9OFxU3Blg/n2x0s6XjBASMgthjo/P3wlbHmFdx9E8cmqTYmtAZ5zHVup
79uETfr+WCu9Dz1zsNlMiPTJeeqX7JRIn1zZKTS9sbUL9olppIn7pwPfvu1H
RlregH76u1jqPP/ozoKi4IoyvFn97M+x1mQce/I7jdoXXHW3OL18qAO1gi51
GnKXYW/8xxxq7yBP+1cP0P7VPbR/VX6Sl/Wfumh6PPe8QTYGJQs9VfrKwJL2
Xhnq+0WOp5Oj1T+ysWZO3Oc9NQxckPpbqz+zHDoOb1mWLsLBqV6+Ry6IMjHv
R/+8bXYFWJh548PEYQ7evpR6f60mE/O9z1n+McrG+tjMz83jA3iz4s9nnfg6
NLzVu4n6vlPalst2hwWG8G958Qu3p/VYau7cRe1xehS4JTc7f0CXTx83JnEF
oeAReS1q73PhCk+4dGMVKHe/8Ng7lA63B3dvp/ZH53JvFW3+1Alc25ZSeygQ
m+7+Of7aIJrRXtYJ2svaSHtZJ9eb6brgDnv+JZIc+BlyzrFyFRPEW3WezdXP
R7ndfVzdMzgQO3jfT5yXCa/e231rOVeEr2lfqwDta42kfa364my5viY21Iet
73PuZ4BJRmSQT2spmK7ZgLeXcaDqiknEVMJFOzY8dJxZnw+19YfN+srYsKyA
e8ZgMwPUJEeXUnu63b7HDwbuHYBD7HfKDeJ10HTi14xBpS745/t+bpO+7+fY
Jds9n3DaxT3KhwIIpzX2dgdQe0b1s9x79ZU4wKmvuMNSYMK2Ks3iD6U5oPZg
PuvelGLwXn+FZ3NyAsy4GWJA7TFPicdomrwYhFOG7TEyCvWw2cl8y5zP7TAt
9uGXnxEf8aeM3qYhtWgsvM1lTO1Puev+lI5Ob0VVHieRUzxF2GK6po7aw3bT
HtfHtMe1iva4/ld9MOJF24z1bFS4v39M/CQDf6nJHaG+j2fe+art/igLG+59
fXhUmoF8zbs3UvvlyX7XAtrvOuuAWBbnJgcDH/maPLtE5qOQQuZSvwTMM1Fu
MvfkoP7SF5ee2jAxPNPTS+FZCC7Vyzw+3Z+FVYVzlzS1NOB+Vn/F7a8NEFUy
4etwYQh/fbtkdK2lHh00x5yp7xOazkuW1dFgYWH38V9TnjfgYMtbP2pv7mt4
LnD1Qw7+mH9HMcKeiZ8KJjLsZZ2x35Cn2fYyC08qu9ocSGrA0ecF4QfIfRZs
MP6V1GH+tsTLpA7XTt7fTdXLzvIK6TQNgT1P2a5OpQa4vtNWbF5BE6rYtsud
uc2B+/bf9fuuM4FjluJ7uisK9VJzeXcKsuHi59RzIioMYHI92jp3bt1/7tPD
JxgPEoxaYLBhc5WgeyEsSxz9UCbABt7LN0W5EjNB0T0zcX3gW1jnPWYjgSOw
advsZ+fWlmNGinG9jHQK7jVdsbRz6gio0T7YxbQPtoj2wUo4xR407hzAOzYP
hJ4G1mHj7nazCo1OqHByWazLRd7/xpUD7txM9INzpsubi2CpV/IUh4UcXL+x
8VSHMBOtSlsuL+8q+M89ddje1KILbztxh97q6JBd5Zhi1OhyKGIQ9aJbt74b
rcDAlXFW796kYpIMp1G+axifv6karZ+RBhsykosZ3mFwiHvBBdWKEXwqI26e
7zEIsyLVZXql6uFmX0qiklgHhocw0+9s48CqIj+leZuZIJoy1nDvei4e+b6i
KLyeDbJWN8rWdDNglohiRIBK2b/2yP/si934Pq3iD+mAgcEgrcj7paD4/uWD
P1ZDsLr97cn5vCVgu9XzgaxvIghxq6p2bBmBE9c0tLxm56CvhXp3YFc0Jhw2
6FoVMgIJtD92fOv//LHBtD92+mof85Tt/fi93axeGWrR03xDxlhxN7zV5aTN
OczGFaudRA9ZMZBLwZd708Ua6Ktb0DdmxcFiYZ/YH0ZM9DTZb+hxPvE/97ld
098smN3UjS/CDd8IW1Th/TExmZtJ/agSqXSH01WHdROfTD0OfMQGyfddXSMc
FDww731/tgfcu3CgvXTNDbCxZZ6U/TuC12NXmLZM9IMYf5/vYEct8N+PPqX/
oQuDjle8fBnOhlrVsJWzMxmwakLf7q5TJcZO3HX4pM2BhMaS/MJ9TNDntT+r
I5n9n3vY09IzTH73dMGKxllO6w5WwmKDPngbOABc78O95jjWwLpb34I0w7Kg
ZGmJU7vBMEybpjbP5FsEvvkWv9ZZ5wmu+MxzKvbLCOTSvtkFtG/Wk/bN3nl4
umj52V4cuPuJ2yyhGoW021LOiPaB0Rm5d8wzLPw8V9LiXVQDuji9uau3kQlD
Udt+1BE+F/6jlnuR9IHV04vuZnnd+9ee9J996PwI+4UFLb2otu3r39uiNTjR
OnPGEw/Cw15S+9YtbkIRp2qv1hf5yJk1MbUuiY3Pry1a7qoXj1I5J70+8YRg
yc1H1g49Izh1q8kdZcU+SN8ca/X9Ug1kd3HFn1jciyOsXSqzalng/CA5dpCP
AXavrhbce0n48c9EMduTA++9OWJ/bJgQm+FZvFQi+F/7ymn0vvK95nYrlT89
sId3vpfuhWqQOvd049p7fVAUbObeWsYASVb7A4fkXOiu0Lw8Zx8HDig3zOKz
fwXSC+aVfX/pDcHGks6ZP0fAjvbT5tF+2ru0n/b7NAfzOYe68ULxsvW+fytR
2mJL913FAXBhTJcfW0s4ITb+t+n7ejTdZlqjl9cKgsbvljAvcPDymZecbyeY
+FZ+zS+TrHSYvE/8Z8+oe/rro6bIfvR2GshaFViLB175OVas7ca/lzpXZc9r
x4Qfi+1FMoux0dBnjKXAwkRuWafYL3lonj6i4a/7AV/f1a22cBjBI+FychK7
SB8921noUFgFPVMlVay0+jFfQns0JmMIpK1OzdaWbAD3i7Vp8VrNKHVowbSF
ThzYKjqyV9eMCUostVqbytj/uwf85+9JRdL7voQtp4U+d/fBs3iuMvfRGoiZ
9WinqXIPwPmFOWZdLZB0Q0XqI6cQtk6JHpjGZsGOcxqZlzsR+Pd6zllxKQLE
kk5F7kgcgY20z1ad9tla0D7b0TPurUcFOzEvh+UZoVmGyG0rc01iCB5ZO9ko
pQ/gNM5O2592ddh2VHLGbfdOGLnDpXTpC+HAyPunxn8xkD2yurlkesm/9nRM
eh93Z3usBpfqIBrGat4y49Th1CAVg7TgDpwq5brEqqMTb4pWCt19UY563wwK
3tsN4pqj2VMeTq3CI4vPM1LupmGV/1un8fJh5J8T+2uZcBeYPYpMyPtVDie7
VxnbHxzEJAVfM2mjQSja6cJryFsPAtmP70Wc6cCIy0tdPWQ44BwseebHWiaw
0MrdJTjvX3s0O3pfdvCJqvY9vwGYMqB5YuB0HQTf4pnLKOyEVy097Z2NHaBd
WrPLmlUKZ6blWnDtGwKxS1+s7UVLod1TxyTWKgliP29Lrlw1Aum0/zaM9t9G
0v5b3mjRYI/TrWi2S1lj4EgRykY0VwUVsEAhbXOGkEA/Gl2MShFZUotGx2JV
r8zoAfb+Y8Z+O9jYZfedR9eAgQo9W2dbjP57z/WC3melL7khZ/ViCBsVd63V
mNOAWsaBYxnMZuSbwe1cNqcHz8wVdvgVWIXuO9pstrn2o8YqreNfL9aj1Zqt
Z4XSPqKg3kK7jDoOLqjoXVvo3g6FWeVSiRIlkP4342nqPBY+/xgR+aK+HzZb
SW7HrFp4djJweflwF24X8tae84T0bZbHz1vvGfAq2EZfXbvqX3uoO/S+6e4K
lalzeIeg9zDzpLRvPTwIdyi+pdkG49UzVqeJdMPlP02J28IrIee+yfmWKwMg
qrN/QmR6Ldh6z7LKdEYYMcn2KN4/DMW0L/cR7cvdSvtyO6O/5c86wMQgJ6NH
Ucvy8MJx8VbpdRxor+M5aCrbixbrSisWelaj+hGt1GnafRB4duqumbtZyFpx
8LP5kwZUYFeLxGb+e0+0i94HDb1laE1PZ2H26asJ0382oFXbW9y2gaTjQ5f2
feTtw68bz4SZqdZgTGXN9U1HelEy2HCg4EkTivf4HGRxF+DJS1+S/vqx8YzJ
m4OFT5pgrCfyJKmD6cjLF1S9rmHEjLwOhOrFvCKvA6tKnh34P69TONeQ/L/w
JVniLfl/YbPaMT3q/528rwmh9zUSH1I2kd8Lys4UZZHfC15p3HGlfq/R1bob
yfsAl3/3+5H3ATZMHWin3od7p3bcIO8bPNi+h5u8b9DgmfKVet8WVP7Prys6
ya9708f08JLptcjVmf4gyxnxjZmYNfW55DTd2UM+R8y7VrBZIbwS/URfK1Gf
o/cilQXkc0fPa4Ne5HPHSzXOhtTnPnmf8p7ep1xMGlEm1xVGBdrwWb8nfYZx
uYi6rjS/yLqS6xCfGDL3kOsQp4+pHqGuQ5epZ4sL3NvRfOflNeS6xcxzFxOo
6zZgrUY+uc7h99XZJuQ6h5D9TUbUdf5gZWAUuS/gm2+JPbkvoHoVHqXuiyeO
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
+lOGvCrBzFx2z+iKNMhe2bGYes59uc1vuT/lKXhqV8R5Z8/XuF5WL5d6Lv47
7d3tpr27BrR39/inGH3fzh5slXroeWV/Nc6U0jSnnrtfF2JylOsOA80We84b
tc3F2eYykdRz+qKyBiEreEJw4O2x7xq+Hpg0zJpGPdd/hfbl/qZ9ubNpX+5+
yymXZox1g0vLrKQlHlWQdx00KT+A8GHhC1vX1cPauLbPyh4fwXlsM4vyCWS9
XB+Q99UJp2i8FDVceBV/e+bWUv6BrbTnNor23N6kPbfxLkO5fKV9qC148Ntg
Zw1+csoQ26bfg1GxC9VZQS2YsErA509CISY7xHhSPoSuCbHNLhFZuHxhkoWv
0Tt8yCUkT/kTDtJ+WjnaT2tO+2krld18Fo31QkvBhbNH5Mh8KbKWXHalFyyb
K4wtzjaBRRlf0YLGfIiS63KkvA1NejMb5zxJgN/mO5yb5ryE+24veijPgwLt
lV1He2Uf017ZyDGj5xEOA2hSJXSiRLMOhd9bzxNgdSLT+9e3gNQOvLv/XBZX
Uimm3X2QSHkn3P19NLJcS/CQwdM6ybFE/CXUOe3a+hFk0z7Yv7QP9h7tgx09
8uavSm4/fDidM3QvphYGFmf+pXwX297m3Dmt0w7vZLZXaHwrhq+ONwwoP8aj
S9gy5pkP9gNy742aPkDtlrthlE/Dnva4Lqc9rvW0x1VaXsbT6Mcgns1OnJ3i
Wo9p6y69pnwd69YrHsoc70KBC8ZP71lVIrv5hTbl9/iePHa5JLUGT+dqLwzi
RhTYu6CN8oFM9q8W0P5VX1tRPY3jgxBepuK/c6IO9rdnfqC8IlddVJKC/3ZC
w7UOiTU15aDjtmvuyPlB0Hjnd2niQBWIXBDGuGnpwAm8mEN5S7bQ3tSDtDdV
gfamHkp2nFsoz8L701YEVd5rwDeNXaWUFyWlXGvfFMFenFO9yuiMVTVaP37Y
S3lUwHzQ5cYMJtYoeHfp9+Vitp35fsq7Mtl3qkP7Tn1X9E8xiRmC006BD44t
aYADRx6UU/6WlEK11nvSPVB75/6F4oQqmNaheYvyvRQUhmz9RTjvZt0RI7/R
j2D1ZNSH8sNM9pQuoD2lK2Mjn7RuYOOmpd/zwnQZOLGZedpiTy3Cww021mN9
mF227FIydy1aDvi0Ub6aOH5j4XPCrZj1Njn/mkgRHn8qfZjy2xyk/aJXab/o
T9ov6t1zO8e1iAVxbx9JbZrOACORzGeUJ0c7Ru5O+ao+mD7rRPj0kzVgqeZ7
kvLqnBBpeJ/a0gS/LAWcWpUL4Jf4nHWUh2eyF9Sb9oJeqb9ke3yIjXc87Gcf
+MbAoiNGM4YiSvCCBr9EdNgARsvHWy25UofRy1ZPUF4gK12jid1fO9Dngwjl
EUKeLm9ZyiO0cZLPU5n2eX5W6Db7FswGHwG7pdFJDBgMKv5J+Yg6Fh+Zl8Hu
B4+5H872VtfCI/2+eXfLuuBbmKICV2k7WGeXeT46VgLLY8aZlO+Ia5KHczft
4QxNcr7pcJaD066M6+seZWLAY+l9TP5MdI7pSQpdPIR7NDdfUw6ux5sPLWcY
8bfh/8fZn0dTFX//4zhSCU1oIEOhJE1EmthJFIUGmiUlhRIZ0kCKBiVTyUwi
U4YKydQ2z/Nw70XmmXtdiSTU95z363zW+n16/17ru9b3r1Z7Wffec87zuffj
8Xzssx+L54ukH1boxouu624dqKrG6wPcn8h5Tf/Ozyyl5mcyznPO5m5jwVOL
9mJxAo8+9223G5jMB4PIQg/Ju4PQc2lmyfdVjXBKwUefnBN1eYVosKByF5jN
2Rq9YHMV5Bq+WWxJ1JVl/8y9bKHmXuLLjVkqnixkLhyzG7jHwACzgep8IR+0
Omh7akRvGCM03XfrvqGh2VrlRHLO1fPSrue/1Hsx71HH5EhILar+cuScInD8
EDWvMo6aV7mdmldpNLlS1vMhCxwvZRab3mRA08pq3yNTiZD3wTH4eOUQsCyF
GasUaXCQU+otOY8rO+BgSbBhDxi5LeUSbq+B8IzpfnJ+Vw81Z/IpNWdyhpoz
ab9mwk76NgsP6PnUBZgzUPbK+2jpJSmwOuRQfZIGE1dJbHDotaCj8FbFKHKe
GMcXtXYTqX48Lcb9VViuHksSfmwl549ZUvMhT1HzIblU/zMf8vUV3rzw5yyQ
CdboHrrNgC0fF/zYuv0tNs+8ldjaMQySd/1TqlfQ4cfKF37k3LO3UxFF8/T7
4Nkf63C9+3Xw13iLEjknzeGfuY6d1FxHQWmpb6ZiRF6aPJkdIE7gHM97vOQc
tidbuu0jfjHxsPGa5Ws5GDjGVf3F50EpHui36JKuGMDmocsBU88aMPr8HnNy
zlsaNY+xkZrHuJiaxziR8/NUjy4LAj0qjgYcYMD99Tdd46pyUEG8N2zzRybY
XhWIGiugQ8H2IxndLVVw07b9RuKyAUjWT9xb+6Megnp+Hybn3f07R/ENNUex
0+b259Z7TPScTPgaFEBH97DTauS8vgD9E9clrxDrSoozN/EsA5V0To/MS8nA
58nJrMO7hpB9Z72YXkYjmstmynG5teJjmMMaju2GdbL1b/do18CZxENRe3v7
0fm8RPOJ7E7ICc3ZcMKkEla/5Vt4PmAQl82f1tWUaoT4gyWPGQ9z4dSu6Vfv
uli4jh5l98i4HWTmfM/a8rcUru/YOC0gMYyjPvHV5deIPNvV7Z65PRNKo3e+
eZ098r98AzdRvoGfj3jxRixugSOfZlJ4LYpAd+ln1WQb5v/yEzz9X/wEnSk/
QTXKT3CM8hN0/S9+gvaUn2AN5SfY/o+f4ANKryn5/+gnKEP5CdpTfoIplJ/g
/O////0EmZSfYOo/foJPKT/BOspPcPYfP0GNc0pOuvLF0KS4hxa2PRmKpB3f
D1xgY9WOhKLM0F7YPhjnLDFYC4Yvv6ba1/eiZ7OfRoU7DU7I779/MjEP3Bkr
uVpesXDGRD1Dl58JdvMC7p3bQ4dC2egqnd0NeFlt88VuExbYK3Gq1J1mgMpo
LN8ci0zYuc/fi9d8EMJ8DnYWL2yEs4OTAjdOd8B7d8fO8w0d4GMd4XCyqxwc
foT1SeoNgX2v4MiBkgLYKONfaK/8ESInAq49cGaDfdDOjF7XSnSfieI6afsF
13Vci4ifGQErDYFD20O7cC3XwVPDjCq8yT1i+6RlAL5xx+8OuTuEon0+b8xH
G7HdW/Vh/s1voDacXBrmzsIEE2m77DsMbDuWf/2Q8huI6biczqk+jAtHkw4H
+BL8RaJP5GceA1UdZV+18fRg+K7xZb3+NdifnnhU+mk/HtL786X9TB22H1RP
OW32Ff2leE4eshjBRekxm9d8zYD5gZHKrjJRkJbi1mpfzsakPw/GXjZ1w92+
BfZp1jXA2b9FaIjg6XGaF23FOmvBPG+pdXBYNtC3/TF+4DyCrRktdb9kiTy2
VamxxZkGdjKMa8H7mnDf78N0Yw8WZDJHNijcI3jlNyvblwV+cNXd9TPDbwiK
9l8frZxPg3T1b48P/GyBsVGd2MrqLhiwpl9bJlcNQWdWRr1NGgDTcpn03HtV
ME92uuy9WjrcXHT5j9DwCNjp9m2jlefjm8PXIgxMPyDHh3vjpu5s6JWcueAe
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
P8kYyLfOx61yXHzD51nY/3Co+EnYS9Au+JQdpuYMrsuqa0h9uXGpNpfor0E4
oRB+7LZLI7AFnI6SOrWS1JXFu51YMF+so6KGWD+Slp4B3Nkf8VGZhqRB/DCc
Oid7vplJg/xQ55X3H9EgzOjauwZaDxwx5Ix0Va+FeQ5lopWf+kBl+SUzS7sG
eLwqwKhhLAcsfzwSIXV21nSz5aL2j7jY6U+uYnAIzozefkzq8tK81lVffL+h
8PUrctsSi/HOu73bSB3/alRqf09eP769fFN0T1I9impef07q/hUZhZOFTCZa
+WmnHflJRw6NnR91bpfBlswxzlkGsW/cMgqZvXRckbz/L9lXoJC85qvE8370
Sy525XlQj7plI01kH0J79s9yi7EWDIlnlg6tK8bDb6/tIfsWNI6WbdEfS0DR
I5nrOar98XzHC3Gy/6F4/aUV5R8GIDCUZ+qIbQOk/GVuJPsorjYIijgrsyA/
M/L+DkUG7HYQydztlY/nG3lYHDZMODbfbvaGNx2eXrQOIPs0Zm2af/Q/7gOW
/il++9g6uLwxK53s62iUD2LW8DVB0stdZV+wAM4lrXMh+0DevebfoMTlDPS8
c80rH5uD0/7R/+kb2Sfl97dTkoEjvzcp5P7Jx96nbX1kn4nHRdqw9LY+DEgp
3ipgUodlbP39ZF/KoPsCbwk9Jm5sq8j+bENH60vnhcg+lnVhsx85tFnYFn7H
y12dgZffXdnlbUHwj+5Zs+M/BzDtI7fJcEIDsnV5BPTXduK5XVeiy0Q78Min
nTWbPpXhUaUpK7KvpsZkraunUS6eEx/f8rMkHos3OS4m+3NSKF7/kuL1a/+L
vrn9v+ib+yh9cwmlbxZS+uYkpW9aU/rmBKVvnqP0zWeUvjn78j/6ZhOlb3Jw
rD7zH57+6//yodOg+LjvP3y8muLd1RTv/vaP7rmf0j2X/hfd8zule6ZQumcm
pXt+oHTPq5Tu+Z7SPa9Tuqff83nK+x60wGRY1CG50iLYv8q/heyX2+Bk5SFr
0g88Yi2OuRfqwUknQobsr3vh6RmdUsaE1Uuv+q9opoPWikQ6e0klHre/O5I7
xQRvzjuqApwMuFwSppNiVgr8si9Hygb6oTXU60p4VT140Bk6ZL/fofisLSFz
W6FK/0ZcD28JhInTxcj+wF8fr4oPtiaDs94tho7dGzh0peE02U+oNZJ5bsFs
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

    "]],
  AspectRatio->Full,
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{310.253779352882, 386.4227407237163},
  Method->{},
  PlotRange->NCache[{{
      Rational[-2, 3], 
      Rational[2, 3]}, {
      Rational[-2, 3], 
      Rational[2, 3]}, {
      Rational[-2, 3], 
      Rational[2, 3]}}, {{-0.6666666666666666, 
    0.6666666666666666}, {-0.6666666666666666, 
    0.6666666666666666}, {-0.6666666666666666, 0.6666666666666666}}],
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.32345563714116743`, -0.15391208625371997`, 
   3.3647715406111343`},
  ViewVertical->{0.7464392145942274, -0.03091050831903303, 
   0.6647353152882823}]], "Output",
 CellChangeTimes->{
  3.777370700173996*^9, 3.777370807790263*^9, 3.777370854413453*^9, 
   3.7773710742078*^9, 3.777371360810958*^9, 3.777371424385689*^9, 
   3.777373162787138*^9, 3.777373611586047*^9, {3.777373986279344*^9, 
   3.7773739956289387`*^9}, {3.777374185968371*^9, 3.777374237159543*^9}, 
   3.777374908042218*^9, 
   3.777375038179098*^9},ExpressionUUID->"e37a3e54-e737-4d2f-8048-\
18b33dba6fa1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"II: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"7.213\"\>",
          7.212525717008719,
          AutoDelete->True], 
         InterpretationBox["\<\"-1.616\"\>",
          -1.616052562113398,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-1.616\"\>",
          -1.6160526543688656`,
          AutoDelete->True], 
         InterpretationBox["\<\"0.3621\"\>",
          0.3620959057995698,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 4]& ], 
   "\[InvisibleSpace]", "\<\"    \[CapitalLambda]tri: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"7.4\"\>",
          7.385833886442081,
          AutoDelete->True], 
         InterpretationBox["\<\"-0.17\"\>",
          -0.17083148226339226`,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-0.17\"\>",
          -0.17083148226339226`,
          AutoDelete->True], 
         InterpretationBox["\<\"1.7\"\>",
          1.661269090149925,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ], 
   "\[InvisibleSpace]", "\<\"   \[CapitalLambda]quad: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"4.7\"\>",
          4.711898200176839,
          AutoDelete->True], 
         InterpretationBox["\<\"0.\"\>",
          0.,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"0.\"\>",
          0.,
          AutoDelete->True], 
         InterpretationBox["\<\"-0.42\"\>",
          -0.4171529420689158,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ]}],
  SequenceForm["II: ", 
   NumberForm[
    MatrixForm[{{
     7.212525717008719, -1.616052562113398}, {-1.6160526543688656`, 
     0.3620959057995698}}], 4], "    \[CapitalLambda]tri: ", 
   NumberForm[
    MatrixForm[{{
     7.385833886442081, -0.17083148226339226`}, {-0.17083148226339226`, 
     1.661269090149925}}], 2], "   \[CapitalLambda]quad: ", 
   NumberForm[
    MatrixForm[{{4.711898200176839, 0.}, {0., -0.4171529420689158}}], 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.777370701387968*^9, 3.777370809033328*^9, 3.777370855122509*^9, 
   3.777371074898683*^9, 3.7773713607760773`*^9, 3.7773714251007643`*^9, 
   3.777373163354334*^9, 3.77737361234484*^9, {3.777373986382289*^9, 
   3.777374000788259*^9}, {3.777374186603603*^9, 3.777374237715363*^9}, 
   3.7773749086369963`*^9, 
   3.777375038188459*^9},ExpressionUUID->"ed907786-50e8-442c-975e-\
e7bcfdba0f02"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n,u n,v: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          InterpretationBox["\<\"-5.5\"\>",
           -5.548096705391322,
           AutoDelete->True], 
          InterpretationBox["\<\"1.2\"\>",
           1.2431174264375888`,
           AutoDelete->True]},
         {
          InterpretationBox["\<\"-2.3\"\>",
           -2.298096900730573,
           AutoDelete->True], 
          InterpretationBox["\<\"0.51\"\>",
           0.5149160976527878,
           AutoDelete->True]},
         {
          InterpretationBox["\<\"0.\"\>",
           0.,
           AutoDelete->True], 
          InterpretationBox["\<\"0.\"\>",
           0.,
           AutoDelete->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     NumberForm[#, 2]& ],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["n,u n,v: ", 
   MatrixForm[
    NumberForm[
     MatrixForm[{{-5.548096705391322, 
      1.2431174264375888`}, {-2.298096900730573, 0.5149160976527878}, {0., 
      0.}}], 2]]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.777370701387968*^9, 3.777370809033328*^9, 3.777370855122509*^9, 
   3.777371074898683*^9, 3.7773713607760773`*^9, 3.7773714251007643`*^9, 
   3.777373163354334*^9, 3.77737361234484*^9, {3.777373986382289*^9, 
   3.777374000788259*^9}, {3.777374186603603*^9, 3.777374237715363*^9}, 
   3.7773749086369963`*^9, 
   3.7773750381903687`*^9},ExpressionUUID->"143f7e3e-b65a-4276-9392-\
d7e46e68082e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"II0", "*", "35"}], " ", "//", " ", "MatrixForm"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Inverse", "[", 
       RowBox[{"F0", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"II0", "*", "35"}], ")"}], ".", 
     RowBox[{"Inverse", "[", 
      RowBox[{"F0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], " ", "//", 
    "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ES", " ", "=", " ", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Inverse", "[", 
       RowBox[{"F0", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"II0", "*", "35"}], ")"}], ".", 
     RowBox[{"Inverse", "[", 
      RowBox[{"F0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ES", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "MatrixForm"}], ",", " ", 
   RowBox[{
    RowBox[{"180", "/", "Pi"}], " ", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"ES", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"ES", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "1", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.777369210772979*^9, 3.777369258096464*^9}, {
   3.7773711150034513`*^9, 3.777371115122622*^9}, 3.777373183772438*^9, {
   3.777373236849991*^9, 3.777373237753118*^9}, {3.777373365466174*^9, 
   3.7773733770644827`*^9}, {3.777373936459887*^9, 3.777373956484071*^9}, {
   3.7773740118672647`*^9, 3.777374153367902*^9}, {3.7773742471929626`*^9, 
   3.777374259927393*^9}},ExpressionUUID->"95a7718d-83ac-4fbc-aa69-\
452fed69c86f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"252.43840009530518`", 
        RowBox[{"-", "56.56183967396893`"}]},
       {
        RowBox[{"-", "56.56184290291029`"}], "12.673356702984943`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"149.3718343759202`", "61.87183963505388`"},
       {"61.871836767007494`", "25.628153917828843`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{252.43840009530518`, -56.56183967396893}, {-56.56184290291029,
     12.673356702984943`}}], 
   MatrixForm[{{149.3718343759202, 61.87183963505388}, {61.871836767007494`, 
    25.628153917828843`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.77737337351587*^9, 3.777373377326626*^9}, 
   3.777373614099077*^9, {3.77737393980247*^9, 3.777373956669883*^9}, {
   3.777374004061151*^9, 3.7773741537125874`*^9}, {3.777374241004676*^9, 
   3.777374260202469*^9}, 
   3.7773743383489*^9},ExpressionUUID->"58e3d333-ac7f-4e72-9c47-93b94e5f7fd3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"174.99998829374906`"},
        {"1.4210854715202004`*^-14"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "67.50000093901122`"}],
  SequenceForm[
   MatrixForm[{174.99998829374906`, 1.4210854715202004`*^-14}], 
   67.50000093901122],
  Editable->False]], "Print",
 CellChangeTimes->{{3.77737337351587*^9, 3.777373377326626*^9}, 
   3.777373614099077*^9, {3.77737393980247*^9, 3.777373956669883*^9}, {
   3.777374004061151*^9, 3.7773741537125874`*^9}, {3.777374241004676*^9, 
   3.777374260202469*^9}, 
   3.777374338350811*^9},ExpressionUUID->"2f33cba1-4ac1-41ca-9e46-\
3e069841af7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S0", " ", "=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "F0", "]"}], ".", "F0"}], "]"}], ".", 
    "II0"}]}], ";", " ", 
  RowBox[{"S0", " ", "//", " ", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", "S0", "]"}], " ", "//", " ", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.777371448932014*^9, 3.777371613121379*^9}, {
  3.777371678830636*^9, 3.777371680075508*^9}, {3.777371720284729*^9, 
  3.777371755643903*^9}},ExpressionUUID->"87b7cc1e-d44c-4b64-b9df-\
3e3fa2a1f63d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.38675138083734417`"}], 
      RowBox[{"-", "0.36084395079559783`"}]},
     {"5.7735023450080325`", "5.386751022297008`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773714796857023`*^9, 3.777371483510633*^9}, 
   3.777371513685948*^9, {3.7773715446683493`*^9, 3.777371613299418*^9}, 
   3.777371680312018*^9, {3.777371722334629*^9, 
   3.777371756070204*^9}},ExpressionUUID->"11ee2940-220e-4757-9b86-\
da3d9d5cc863"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.999999641459663`", "8.881784197001252`*^-16"},
     {
      RowBox[{"{", 
       RowBox[{"0.06683751605325906`", ",", 
        RowBox[{"-", "0.9977638730921411`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6821929475149257`"}], ",", "0.7311721974753266`"}], 
       "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773714796857023`*^9, 3.777371483510633*^9}, 
   3.777371513685948*^9, {3.7773715446683493`*^9, 3.777371613299418*^9}, 
   3.777371680312018*^9, {3.777371722334629*^9, 
   3.777371756074685*^9}},ExpressionUUID->"77e58a49-7639-486c-94b6-\
2c811db80b9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L0", " ", "=", 
   RowBox[{
    RowBox[{"ApproxLambdaTri", "[", 
     RowBox[{"x", ",", "n", ",", "32"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"1", "/", "10000"}]}], ",", " ", 
      RowBox[{"v", "\[Rule]", " ", 
       RowBox[{"1", "/", "10000"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0quad", " ", "=", 
   RowBox[{
    RowBox[{"ApproxLambda", "[", 
     RowBox[{"x", ",", "n", ",", "32", ",", "0"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"1", "/", "10000"}]}], ",", " ", 
      RowBox[{"v", "\[Rule]", " ", 
       RowBox[{"1", "/", "10000"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<II: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"II0", "//", " ", "MatrixForm"}], ",", "4"}], "]"}], ",", " ", 
   "\"\<    \[CapitalLambda]tri: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"L0", "//", " ", "MatrixForm"}], ",", "2"}], "]"}], ",", " ", 
   "\"\<   \[CapitalLambda]quad: \>\"", ",", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"L0quad", "//", " ", "MatrixForm"}], ",", "2"}], "]"}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.777375064581114*^9, 3.77737513806183*^9}, {
  3.777375635072225*^9, 3.777375637182493*^9}, {3.777377442379024*^9, 
  3.777377537475129*^9}, {3.777377579156592*^9, 
  3.777377614179031*^9}},ExpressionUUID->"df493c38-0a59-43b4-bdc2-\
e02923dd0517"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"II: \"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"7.213\"\>",
          7.212525717008719,
          AutoDelete->True], 
         InterpretationBox["\<\"-1.616\"\>",
          -1.616052562113398,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-1.616\"\>",
          -1.6160526543688656`,
          AutoDelete->True], 
         InterpretationBox["\<\"0.3621\"\>",
          0.3620959057995698,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 4]& ], 
   "\[InvisibleSpace]", "\<\"    \[CapitalLambda]tri: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"7.4\"\>",
          7.385833886442081,
          AutoDelete->True], 
         InterpretationBox["\<\"-0.17\"\>",
          -0.17083148226339226`,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-0.17\"\>",
          -0.17083148226339226`,
          AutoDelete->True], 
         InterpretationBox["\<\"1.7\"\>",
          1.661269090149925,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ], 
   "\[InvisibleSpace]", "\<\"   \[CapitalLambda]quad: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         InterpretationBox["\<\"3.5\"\>",
          3.4544891643289013`,
          AutoDelete->True], 
         InterpretationBox["\<\"-0.08\"\>",
          -0.07995123574825828,
          AutoDelete->True]},
        {
         InterpretationBox["\<\"-0.08\"\>",
          -0.07995123574825828,
          AutoDelete->True], 
         InterpretationBox["\<\"0.78\"\>",
          0.7771054102140833,
          AutoDelete->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]],
    NumberForm[#, 2]& ]}],
  SequenceForm["II: ", 
   NumberForm[
    MatrixForm[{{
     7.212525717008719, -1.616052562113398}, {-1.6160526543688656`, 
     0.3620959057995698}}], 4], "    \[CapitalLambda]tri: ", 
   NumberForm[
    MatrixForm[{{
     7.385833886442081, -0.17083148226339226`}, {-0.17083148226339226`, 
     1.661269090149925}}], 2], "   \[CapitalLambda]quad: ", 
   NumberForm[
    MatrixForm[{{
     3.4544891643289013`, -0.07995123574825828}, {-0.07995123574825828, 
     0.7771054102140833}}], 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.777375066927*^9, 3.777375139247966*^9}, 
   3.7773756388948593`*^9, {3.7773774447086353`*^9, 3.777377538645982*^9}, {
   3.777377593300621*^9, 
   3.777377615355639*^9}},ExpressionUUID->"0d8544ab-6c65-4fec-a86d-\
f223dc4fe625"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.77737515461512*^9, 
  3.777375155266839*^9}},ExpressionUUID->"8a1bda62-aa7e-4930-9791-\
a6eff3f5a3e4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{"F0", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"Normalize", "[", 
       RowBox[{"F0", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
    "]"}]}], ";", " ", 
  RowBox[{"S", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "S", "]"}], ".", "II0", ".", "S"}], " ", "//", 
  " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", ".", "II0", ".", 
   RowBox[{"Transpose", "[", "S", "]"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{"Transpose", "[", "S", "]"}], "]"}], ".", "II0", ".", 
   RowBox[{"Inverse", "[", "S", "]"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", "S", "]"}], ".", "II0", ".", 
   RowBox[{"Inverse", "[", 
    RowBox[{"Transpose", "[", "S", "]"}], "]"}]}], " ", "//", " ", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.777375168787238*^9, 3.777375277883192*^9}, {
  3.7773755364070253`*^9, 
  3.777375604317712*^9}},ExpressionUUID->"3cd3008a-85f0-46a7-9c9d-\
e98456e66b90"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", 
      RowBox[{"-", "0.6002842255014932`"}]},
     {"0.`", "0.7997867519620918`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773752086033983`*^9, 3.777375278190184*^9}, 
   3.7773754727224894`*^9, {3.7773755443084393`*^9, 3.7773756049085007`*^9}, 
   3.77737564099509*^9},ExpressionUUID->"734b667b-8864-4515-b958-\
f20fd8be5892"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7.212525717008719`", 
      RowBox[{"-", "5.622062843596872`"}]},
     {
      RowBox[{"-", "5.622062917381573`"}], "4.382319352794422`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773752086033983`*^9, 3.777375278190184*^9}, 
   3.7773754727224894`*^9, {3.7773755443084393`*^9, 3.7773756049085007`*^9}, 
   3.777375640999476*^9},ExpressionUUID->"ad843038-0e1a-4630-a74c-\
8fed38008e40"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9.283185549232059`", 
      RowBox[{"-", "1.4663394462571238`"}]},
     {
      RowBox[{"-", "1.4663395200418243`"}], "0.23161785019162248`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773752086033983`*^9, 3.777375278190184*^9}, 
   3.7773754727224894`*^9, {3.7773755443084393`*^9, 3.7773756049085007`*^9}, 
   3.777375641002512*^9},ExpressionUUID->"bf17272a-d3ed-449d-81d6-\
eb2a6b32833f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7.212525717008719`", "3.3927954485040006`"},
     {"3.3927953331539182`", "1.595981909206177`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773752086033983`*^9, 3.777375278190184*^9}, 
   3.7773754727224894`*^9, {3.7773755443084393`*^9, 3.7773756049085007`*^9}, 
   3.77737564100502*^9},ExpressionUUID->"01b40ffd-8305-40ac-939b-\
7c84bc193cea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.990632548788346`", 
      RowBox[{"-", "1.6807974619783628`"}]},
     {
      RowBox[{"-", "1.6807975773284451`"}], "0.5660765993999941`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773752086033983`*^9, 3.777375278190184*^9}, 
   3.7773754727224894`*^9, {3.7773755443084393`*^9, 3.7773756049085007`*^9}, 
   3.777375641007578*^9},ExpressionUUID->"0b965410-5bf9-408f-be63-\
d65d502bc0bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0", " ", "=", " ", 
   RowBox[{"F0", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "2"}], ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"A0i", " ", "=", " ", 
   RowBox[{"Inverse", "[", "A0", "]"}]}], ";", " ", 
  RowBox[{"A0T", " ", "=", 
   RowBox[{"Transpose", "[", "A0", "]"}]}], ";", " ", 
  RowBox[{"A0iT", " ", "=", 
   RowBox[{"Transpose", "[", "A0i", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMP", " ", "=", " ", 
   RowBox[{"L0", ".", "S", ".", 
    RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMP", " ", "=", " ", 
   RowBox[{"S", ".", "L0", ".", 
    RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMP", " ", "=", " ", 
   RowBox[{"S", ".", "L0", ".", 
    RowBox[{"Transpose", "[", "S", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMP", " ", "=", " ", 
   RowBox[{"A0i", ".", "A0iT", ".", "L0", ".", "A0iT", ".", "A0i"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], " ", "=", 
   RowBox[{"Eigenvalues", "[", "TMP", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rad", " ", "=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigenvectors", "[", "TMP", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Eigenvectors", "[", "TMP", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a2", ",", "b2"}], "}"}], " ", "=", 
   RowBox[{"Eigenvalues", "[", "II0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"a2", ",", "b2"}], "}"}], "\n", 
 RowBox[{
  RowBox[{"rad2", " ", "=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigenvectors", "[", "II0", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Eigenvectors", "[", "II0", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "a"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "b"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "b"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"-", "rad"}]}], "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"a2", ",", "b2"}], "}"}]}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "a2"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "b2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "b2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"-", "rad2"}]}], "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.77737596250707*^9, 3.777376173239146*^9}, {
  3.777376216271781*^9, 3.7773762772465982`*^9}, {3.777376330587302*^9, 
  3.777376330669245*^9}, {3.777376436730647*^9, 3.777376469148624*^9}, {
  3.777376505352667*^9, 3.77737662834686*^9}, {3.777376777642811*^9, 
  3.777377124540346*^9}},ExpressionUUID->"6ece29f6-d8ff-4ff1-a695-\
6784ff412a1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.57462162280829`", ",", "1.6653345369377348`*^-16"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.777376783678008*^9, {3.777376819401601*^9, 3.777376922729384*^9}, {
   3.777376983812673*^9, 
   3.777377124817622*^9}},ExpressionUUID->"0e1cbc7e-b08b-42e8-bc4c-\
d743cad0d05a"],

Cell[BoxData[
 GraphicsBox[{
   GeometricTransformationBox[{
     CircleBox[{0, 0}, {9.152050564066258, 0.8325129349930602}], 
     LineBox[{{-9.152050564066258, 0}, {9.152050564066258, 0}}], 
     LineBox[{{0, -0.8325129349930602}, {
       0, 0.8325129349930602}}]}, {{{-0.6926430182064801, \
-0.7212805621461164}, {0.7212805621461164, -0.6926430182064801}}, Center}], 
   GeometricTransformationBox[{
     CircleBox[{0, 0}, {7.57462162280829, 1.6653345369377348*^-16}], 
     LineBox[{{-7.57462162280829, 0}, {7.57462162280829, 0}}], 
     LineBox[{{0, -1.6653345369377348`*^-16}, {
       0, 1.6653345369377348`*^-16}}]}, {{{
     0.97580539548277, -0.21864087025694615`}, {0.21864087025694615`, 
     0.97580539548277}}, Center}]},
  Axes->True,
  PlotRange->{{-10, 10}, {-10, 10}}]], "Output",
 CellChangeTimes->{
  3.777376783678008*^9, {3.777376819401601*^9, 3.777376922729384*^9}, {
   3.777376983812673*^9, 
   3.7773771248287907`*^9}},ExpressionUUID->"f0f8256c-0414-4071-a706-\
613faf91fba8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.777376103657257*^9, 
  3.7773761044491997`*^9}},ExpressionUUID->"c19a6518-b98b-4ef1-8717-\
1753048f894e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"sx", 
       RowBox[{"sa", " ", "sx"}]},
      {"0", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          SuperscriptBox["sa", "2"]}], "]"}], " ", "sy"}]}
     }], ")"}], " ", "//", "Inverse"}], "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7773809044482517`*^9, 
  3.777380930101461*^9}},ExpressionUUID->"c5734745-ac55-4e9c-9dc5-\
809e4291a59d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "sx"], 
      RowBox[{"-", 
       FractionBox["sa", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["sa", "2"]}]], " ", "sy"}]]}]},
     {"0", 
      FractionBox["1", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["sa", "2"]}]], " ", "sy"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7773809009246902`*^9, 
  3.777380931156629*^9}},ExpressionUUID->"fdca6b7b-c128-404d-a8fd-\
3b1011e5d2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"TODO", " ", "CONTINUE", " ", "NEW", " ", "BEST", " ", 
    RowBox[{"IDEA", ":", " ", 
     RowBox[{
     "JUST", " ", "ACTUALLY", " ", "MAKE", " ", "LOCAL", " ", "MESH", " ", 
      "BY", " ", "EVALING", " ", "6", " ", "VERTICES", " ", "AND", " ", 
      "THEN", " ", "CAN", " ", "DO", " ", "COMPLETELY", " ", "DISCRETE", " ", 
      
      RowBox[{"STUFF", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "if", " ", "it", " ", "fails", " ", "then", " ", "then", " ", "its", 
          " ", "about", " ", "the", " ", "discretization"}], "..."}], "!"}], 
       "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"P", " ", "=", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", "0", "]"}], 
         RowBox[{"Sin", "[", "0", "]"}]},
        {
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], "Pi"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], "Pi"}], "]"}]},
        {
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["4", "3"], "Pi"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["4", "3"], "Pi"}], "]"}]},
        {
         RowBox[{"2", 
          RowBox[{"Cos", "[", 
           FractionBox["Pi", "3"], "]"}]}], 
         RowBox[{"2", 
          RowBox[{"Sin", "[", 
           FractionBox["Pi", "3"], "]"}]}]},
        {
         RowBox[{"2", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"3", "Pi"}], "3"], "]"}]}], 
         RowBox[{"2", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", "Pi"}], "3"], "]"}]}]},
        {
         RowBox[{"2", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"5", "Pi"}], "3"], "]"}]}], 
         RowBox[{"2", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"5", "Pi"}], "3"], "]"}]}]}
       }], "\[NoBreak]", ")"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Transparent", ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"P", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ",", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.777381888581818*^9, 3.777381927752263*^9}, {
  3.777381999216167*^9, 3.7773821604732*^9}, {3.7773821997188063`*^9, 
  3.777382218109416*^9}, {3.7773823247080107`*^9, 
  3.7773826192618113`*^9}},ExpressionUUID->"726888cc-be8f-4f71-9a66-\
c7b78ca6b071"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Opacity[0], EdgeForm[GrayLevel[0]], 
    TagBox[
     PolygonBox[
      NCache[{{1, 0}, {Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{1, 0}, {-0.5, 
        0.8660254037844386}, {-0.5, -0.8660254037844386}}]],
     "Triangle"], 
    TagBox[
     PolygonBox[
      NCache[{{1, 0}, {1, 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{1, 0}, {
        1, 1.7320508075688772`}, {-0.5, 0.8660254037844386}}]],
     "Triangle"], 
    TagBox[
     PolygonBox[
      NCache[{{Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-2, 0}, {
        Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{-0.5, 
        0.8660254037844386}, {-2, 0}, {-0.5, -0.8660254037844386}}]],
     "Triangle"], 
    TagBox[
     PolygonBox[
      NCache[{{Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, -3^Rational[1, 2]}, {1, 0}}, {{-0.5, -0.8660254037844386}, {
        1, -1.7320508075688772`}, {1, 0}}]],
     "Triangle"]}}]], "Output",
 CellChangeTimes->{{3.777382025756445*^9, 3.777382046037465*^9}, {
  3.777382095073247*^9, 3.777382161151815*^9}, {3.777382369409779*^9, 
  3.77738240337694*^9}, {3.777382433652031*^9, 3.777382497797367*^9}, {
  3.777382573704442*^9, 
  3.77738262019352*^9}},ExpressionUUID->"db10df39-9766-4b79-a0b8-\
cc843d09190b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ApproxLambdaTri", "[", 
    RowBox[{"x_", ",", "n_", ",", 
     RowBox[{"num_:", "32"}], ",", 
     RowBox[{"dx_:", 
      RowBox[{"1", "/", "1000"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "k", ",", "P", ",", " ", "s", ",", "A", ",", "X0", ",", "X1", 
       ",", "XM", ",", "Ti", ",", "Ei", ",", "n0", ",", "ni", ",", "ei", ",", 
       "\[Theta]i", ",", "\[CapitalLambda]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P", " ", "=", 
       RowBox[{"dx", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{"Cos", "[", "0", "]"}], 
            RowBox[{"Sin", "[", "0", "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["2", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["4", "3"], "Pi"}], "]"}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox["Pi", "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox["Pi", "3"], "]"}]}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", "Pi"}], "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"3", "Pi"}], "3"], "]"}]}]},
           {
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"5", "Pi"}], "3"], "]"}]}], 
            RowBox[{"2", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"5", "Pi"}], "3"], "]"}]}]}
          }], "\[NoBreak]", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"P", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", " ", "=", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"Sqrt", "[", "3", "]"}], "4"], 
        SuperscriptBox["s", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", "num"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"P", " ", "=", " ", 
          RowBox[{"P", ".", " ", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", " ", "/", " ", "num"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "TODO", " ", "CONTINUE", " ", "ACTUALLY", " ", "COMPUTE", " ", 
            "THE", " ", "TRIANGLE", " ", "NORMALS", " ", "FROM", " ", "THE", 
            " ", 
            RowBox[{"POINTS", ".", " ", "1."}], " ", "eval", " ", 
            "worldspace", " ", "point", " ", "list"}], ",", " ", 
           RowBox[{
           "then", " ", "do", " ", "exactly", " ", "discrete", " ", "Lambda", 
            "\[IndentingNewLine]", "can", " ", "still", " ", "iterate", " ", 
            "through", " ", "edges", " ", "like", " ", "this"}]}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ",", 
           RowBox[{"i", "<", "3"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"X0", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "3"}], "]"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"X1", " ", "=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"u", ",", "v"}], "}"}], "+"}], "*)"}], 
             RowBox[{"P", "[", 
              RowBox[{"[", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "3"}], "]"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ei", " ", "=", " ", 
             RowBox[{"X1", "-", "X0"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ti", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Ei", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"-", 
                RowBox[{"Ei", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"XM", " ", "=", " ", 
             FractionBox[
              RowBox[{"X0", "+", "X1"}], "2"]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"n0", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "-", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ni", " ", "=", " ", 
               RowBox[{"n", "@@", 
                RowBox[{"(", 
                 RowBox[{"XM", " ", "+", " ", 
                  RowBox[{"Ti", "/", "2"}]}], ")"}]}]}], ";"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"n0", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ni", " ", "=", " ", 
             RowBox[{"n", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], " ", "+", " ", "Ti"}], 
               ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ei", " ", "=", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "@@", "X1"}], ")"}], " ", "-", " ", 
              RowBox[{"(", 
               RowBox[{"x", " ", "@@", "X0"}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Theta]i", "=", " ", 
             RowBox[{"-", 
              RowBox[{"Angle", "[", 
               RowBox[{"n0", ",", "ni", ",", 
                RowBox[{"Normalize", "[", "ei", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[CapitalLambda]", " ", "=", 
             RowBox[{"\[CapitalLambda]", " ", "+", " ", 
              RowBox[{
               RowBox[{"\[Theta]i", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "A", " ", 
                  RowBox[{"Norm", "[", "Ti", "]"}]}], ")"}]}], 
               RowBox[{"(", 
                RowBox[{"Ti", "\[CircleTimes]", "Ti"}], ")"}]}]}]}]}]}], 
          "   ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"dx", "/", " ", "s"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "/", "num"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777382643611109*^9, 3.777382669155766*^9}, {
  3.777382707738428*^9, 
  3.777382766010648*^9}},ExpressionUUID->"dc8d9b64-b260-4fdc-95fe-\
eb1033c4e35d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Testfun", "[", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], "]"}], ":=", 
     RowBox[{"a", "+", "b"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Thread", "[", 
    RowBox[{"x", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"x", " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.777382791570423*^9, 
  3.777382990715918*^9}},ExpressionUUID->"dfb7902d-053a-4814-850f-\
fe6d9215ff80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], ",", 
   RowBox[{"x", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.777382936269713*^9, 
  3.777382991163986*^9}},ExpressionUUID->"1e212751-8283-4363-97be-\
e57ff82842cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
   RowBox[{"x", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.777382936269713*^9, 
  3.777382991169812*^9}},ExpressionUUID->"1d6e0b66-b7fd-48bd-b2fc-\
c07ea7617262"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.777382926858038*^9, 
  3.77738292779055*^9}},ExpressionUUID->"379237b1-4436-420c-a715-\
c077899229bb"]
},
WindowSize->{808, 911},
WindowMargins->{{544, Automatic}, {Automatic, 30}},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7275, 192, 404, "Input", "ExpressionUUID" -> \
"bff7917f-2396-4bc2-8ea3-049129c17f4b"],
Cell[7836, 214, 7176, 182, 730, "Input", "ExpressionUUID" -> \
"f5069b01-694a-4861-89b5-11000104d577"],
Cell[CellGroupData[{
Cell[15037, 400, 8731, 235, 455, "Input", "ExpressionUUID" -> \
"e00b5b3d-7fb2-4c3d-b0ad-0ce869d7d9c1"],
Cell[CellGroupData[{
Cell[23793, 639, 3212, 76, 47, "Print", "ExpressionUUID" -> \
"12c5dc23-5eff-4b8e-bef9-1dad7dd03b9e"],
Cell[27008, 717, 1860, 40, 59, "Print", "ExpressionUUID" -> \
"aeacfbe0-0863-410a-bb54-f6d1326da29a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28917, 763, 173, 3, 55, "Input", "ExpressionUUID" -> \
"d82291c7-c823-40be-90fe-240c5033271c"],
Cell[29093, 768, 705, 19, 62, "Output", "ExpressionUUID" -> \
"15e87032-5078-4a7b-b275-ca787f72b9cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29835, 792, 4111, 111, 310, "Input", "ExpressionUUID" -> \
"1ae9cbd9-9552-4d16-b456-9ecbbf7588d7"],
Cell[33949, 905, 960, 24, 62, "Output", "ExpressionUUID" -> \
"37ea00f3-881a-4d09-ac6f-ecf374d6286b"],
Cell[34912, 931, 1060, 27, 62, "Output", "ExpressionUUID" -> \
"f634436b-642e-4432-bc04-8b1491c2707a"],
Cell[35975, 960, 1102, 27, 83, "Output", "ExpressionUUID" -> \
"23e56bb6-9a03-4a86-a46b-1d163c72a4ec"],
Cell[37080, 989, 1079, 27, 80, "Output", "ExpressionUUID" -> \
"86b34064-a9f9-4cbd-9e89-8a14238b99b9"],
Cell[38162, 1018, 1018, 25, 62, "Output", "ExpressionUUID" -> \
"6571933b-a3b0-4cd2-8eb2-8bd695527e88"]
}, Open  ]],
Cell[39195, 1046, 156, 3, 32, "Input", "ExpressionUUID" -> \
"879de49f-95eb-4bab-a64c-587425df1840"],
Cell[CellGroupData[{
Cell[39376, 1053, 2350, 72, 126, "Input", "ExpressionUUID" -> \
"0b8987fd-7646-4365-ac96-8d1443e2ff19"],
Cell[41729, 1127, 1066, 26, 62, "Output", "ExpressionUUID" -> \
"4b1dd17d-efd9-43e0-b11c-40dba251a950"],
Cell[42798, 1155, 1086, 27, 62, "Output", "ExpressionUUID" -> \
"cd8ad57c-483c-4831-a312-ebe3c7240fd8"],
Cell[43887, 1184, 1125, 28, 62, "Output", "ExpressionUUID" -> \
"f716cb52-1bfd-4cef-94be-822c59de59c6"],
Cell[45015, 1214, 1122, 28, 62, "Output", "ExpressionUUID" -> \
"f53ebdd2-611f-464f-b5ff-36a62cced812"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46174, 1247, 15953, 427, 1213, "Input", "ExpressionUUID" -> \
"3f8b8e21-970d-408d-b843-624646ceaced"],
Cell[62130, 1676, 37262, 605, 381, "Output", "ExpressionUUID" -> \
"aca312d1-ee87-4db5-92f6-37ce62c1b7f7"],
Cell[CellGroupData[{
Cell[99417, 2285, 2369, 53, 41, "Print", "ExpressionUUID" -> \
"2dfbff28-1412-45d4-8315-2d10865f387d"],
Cell[101789, 2340, 1766, 35, 41, "Print", "ExpressionUUID" -> \
"0c81b2c7-3213-4f9e-8389-98e169c63df8"],
Cell[103558, 2377, 1645, 36, 59, "Print", "ExpressionUUID" -> \
"e736b416-64b5-4212-90b7-d60d0b0de16b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105252, 2419, 244, 6, 56, "Input", "ExpressionUUID" -> \
"725cd7e0-00e7-4967-8329-24b337ba20e2"],
Cell[105499, 2427, 154, 3, 32, "Output", "ExpressionUUID" -> \
"ba00c44a-e29b-4558-bd8f-efc37c1968ff"]
}, Open  ]],
Cell[105668, 2433, 7673, 196, 831, "Input", "ExpressionUUID" -> \
"fdcdeaaf-36d2-4029-90cc-d06cc68effed"],
Cell[CellGroupData[{
Cell[113366, 2633, 9075, 242, 458, "Input", "ExpressionUUID" -> \
"e0cb65a9-bef1-4f30-9977-bcd42999f3b8"],
Cell[CellGroupData[{
Cell[122466, 2879, 3979, 93, 47, "Print", "ExpressionUUID" -> \
"3edfdc43-16ce-409d-ad27-3bf2e4351640"],
Cell[126448, 2974, 2201, 44, 59, "Print", "ExpressionUUID" -> \
"1f9d8a42-12a2-41fd-9d77-70f28f1e9885"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128698, 3024, 12882, 338, 865, "Input", "ExpressionUUID" -> \
"8d023051-3472-47b4-b568-02fb1ced56c7"],
Cell[141583, 3364, 595, 13, 32, "Output", "ExpressionUUID" -> \
"380f1e78-941c-4ac6-8beb-fcd0146d903c"],
Cell[142181, 3379, 183151, 2987, 401, "Output", "ExpressionUUID" -> \
"e37a3e54-e737-4d2f-8048-18b33dba6fa1"],
Cell[CellGroupData[{
Cell[325357, 6370, 4247, 119, 41, "Print", "ExpressionUUID" -> \
"ed907786-50e8-442c-975e-e7bcfdba0f02"],
Cell[329607, 6491, 2068, 59, 59, "Print", "ExpressionUUID" -> \
"143f7e3e-b65a-4276-9392-d7e46e68082e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331724, 6556, 2306, 65, 84, "Input", "ExpressionUUID" -> \
"95a7718d-83ac-4fbc-aa69-452fed69c86f"],
Cell[CellGroupData[{
Cell[334055, 6625, 2025, 49, 41, "Print", "ExpressionUUID" -> \
"58e3d333-ac7f-4e72-9c47-93b94e5f7fd3"],
Cell[336083, 6676, 1226, 31, 44, "Print", "ExpressionUUID" -> \
"2f33cba1-4ac1-41ca-9e46-3e069841af7f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337358, 6713, 602, 15, 57, "Input", "ExpressionUUID" -> \
"87b7cc1e-d44c-4b64-b9df-3e3fa2a1f63d"],
Cell[337963, 6730, 977, 24, 62, "Output", "ExpressionUUID" -> \
"11ee2940-220e-4757-9b86-da3d9d5cc863"],
Cell[338943, 6756, 1138, 29, 66, "Output", "ExpressionUUID" -> \
"77e58a49-7639-486c-94b6-2c811db80b9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340118, 6790, 1582, 43, 82, "Input", "ExpressionUUID" -> \
"df493c38-0a59-43b4-bdc2-e02923dd0517"],
Cell[341703, 6835, 4171, 118, 41, "Print", "ExpressionUUID" -> \
"0d8544ab-6c65-4fec-a86d-f223dc4fe625"]
}, Open  ]],
Cell[345889, 6956, 151, 3, 32, "Input", "ExpressionUUID" -> \
"8a1bda62-aa7e-4930-9791-a6eff3f5a3e4"],
Cell[CellGroupData[{
Cell[346065, 6963, 1444, 41, 124, "Input", "ExpressionUUID" -> \
"3cd3008a-85f0-46a7-9c9d-e98456e66b90"],
Cell[347512, 7006, 875, 22, 62, "Output", "ExpressionUUID" -> \
"734b667b-8864-4515-b958-f20fd8be5892"],
Cell[348390, 7030, 926, 23, 62, "Output", "ExpressionUUID" -> \
"ad843038-0e1a-4630-a74c-8fed38008e40"],
Cell[349319, 7055, 930, 23, 62, "Output", "ExpressionUUID" -> \
"bf17272a-d3ed-449d-81d6-eb2a6b32833f"],
Cell[350252, 7080, 883, 21, 62, "Output", "ExpressionUUID" -> \
"01b40ffd-8305-40ac-939b-7c84bc193cea"],
Cell[351138, 7103, 929, 23, 62, "Output", "ExpressionUUID" -> \
"0b965410-5bf9-408f-be63-d65d502bc0bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352104, 7131, 5277, 155, 297, "Input", "ExpressionUUID" -> \
"6ece29f6-d8ff-4ff1-a695-6784ff412a1d"],
Cell[357384, 7288, 317, 8, 41, "Output", "ExpressionUUID" -> \
"0e1cbc7e-b08b-42e8-bc4c-d743cad0d05a"],
Cell[357704, 7298, 1003, 21, 369, "Output", "ExpressionUUID" -> \
"f0f8256c-0414-4071-a706-613faf91fba8"]
}, Open  ]],
Cell[358722, 7322, 154, 3, 32, "Input", "ExpressionUUID" -> \
"c19a6518-b98b-4ef1-8717-1753048f894e"],
Cell[CellGroupData[{
Cell[358901, 7329, 460, 14, 56, "Input", "ExpressionUUID" -> \
"c5734745-ac55-4e9c-9dc5-809e4291a59d"],
Cell[359364, 7345, 1037, 32, 102, "Output", "ExpressionUUID" -> \
"fdca6b7b-c128-404d-a8fd-3b1011e5d2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360438, 7382, 3615, 104, 269, "Input", "ExpressionUUID" -> \
"726888cc-be8f-4f71-9a66-c7b78ca6b071"],
Cell[364056, 7488, 1405, 32, 428, "Output", "ExpressionUUID" -> \
"db10df39-9766-4b79-a0b8-cc843d09190b"]
}, Open  ]],
Cell[365476, 7523, 8193, 211, 915, "Input", "ExpressionUUID" -> \
"dc8d9b64-b260-4fdc-95fe-eb1033c4e35d"],
Cell[CellGroupData[{
Cell[373694, 7738, 735, 22, 102, "Input", "ExpressionUUID" -> \
"dfb7902d-053a-4814-850f-fe6d9215ff80"],
Cell[374432, 7762, 257, 7, 32, "Output", "ExpressionUUID" -> \
"1e212751-8283-4363-97be-e57ff82842cf"],
Cell[374692, 7771, 359, 11, 65, "Output", "ExpressionUUID" -> \
"1d6e0b66-b7fd-48bd-b2fc-c07ea7617262"]
}, Open  ]],
Cell[375066, 7785, 151, 3, 32, "Input", "ExpressionUUID" -> \
"379237b1-4436-420c-a715-c077899229bb"]
}
]
*)

